<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>使用 mongorestore 恢复 MongoDB 集合</title>
    <link href="/2024/09/mongorestore/"/>
    <url>/2024/09/mongorestore/</url>
    
    <content type="html"><![CDATA[<p>在使用 MongoDB 进行数据备份和恢复的过程中，<code>mongorestore</code> 是一个非常实用的工具，它允许我们从备份中恢复数据库或特定的集合。有时，我们在恢复集合之前，可能需要先清空目标集合，以确保不会有旧数据的干扰。本篇博文将介绍如何在恢复 MongoDB 集合前清空该集合，并使用 <code>mongorestore</code> 进行恢复。</p><span id="more"></span><h2 id="1-前提条件"><a href="#1-前提条件" class="headerlink" title="1. 前提条件"></a>1. 前提条件</h2><p>在开始之前，请确保你已经满足以下条件：</p><ul><li>MongoDB 已经正确安装并正在运行。</li><li>你已备份了 MongoDB 集合（通常是通过 <code>mongodump</code> 生成的 <code>.bson</code> 文件）。</li><li>你有适当的权限连接到 MongoDB 实例，并对目标数据库和集合执行操作。</li></ul><h2 id="2-清空-MongoDB-集合"><a href="#2-清空-MongoDB-集合" class="headerlink" title="2. 清空 MongoDB 集合"></a>2. 清空 MongoDB 集合</h2><p>在恢复数据前，通常需要清空目标集合中的旧数据。你可以使用 MongoDB 的 <code>mongo</code> shell 或其他 MongoDB 客户端工具来完成这个操作。</p><h3 id="步骤-1：连接到-MongoDB"><a href="#步骤-1：连接到-MongoDB" class="headerlink" title="步骤 1：连接到 MongoDB"></a>步骤 1：连接到 MongoDB</h3><p>首先，通过 <code>mongo</code> shell 连接到你的 MongoDB 实例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">mongo<br></code></pre></td></tr></table></figure><h3 id="步骤-2：切换到目标数据库"><a href="#步骤-2：切换到目标数据库" class="headerlink" title="步骤 2：切换到目标数据库"></a>步骤 2：切换到目标数据库</h3><p>在 MongoDB shell 中，使用 <code>use</code> 命令切换到你想要清空集合的数据库。例如，如果数据库名为 <code>mydatabase</code>，运行以下命令：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">use mydatabase<br></code></pre></td></tr></table></figure><h3 id="步骤-3：清空目标集合"><a href="#步骤-3：清空目标集合" class="headerlink" title="步骤 3：清空目标集合"></a>步骤 3：清空目标集合</h3><p>要清空集合中的所有文档，可以使用 <code>deleteMany</code> 命令。这个命令不会删除集合本身及其索引，它只会删除所有文档。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">db.<span class="hljs-property">mycollection</span>.<span class="hljs-title function_">deleteMany</span>(&#123;&#125;)<br></code></pre></td></tr></table></figure><p>例如，如果你的集合名是 <code>mycollection</code>，那么执行上面的命令将清空 <code>mydatabase</code> 中的 <code>mycollection</code> 集合。</p><h2 id="3-使用-mongorestore-恢复集合"><a href="#3-使用-mongorestore-恢复集合" class="headerlink" title="3. 使用 mongorestore 恢复集合"></a>3. 使用 <code>mongorestore</code> 恢复集合</h2><p>在清空集合后，你可以使用 <code>mongorestore</code> 命令将备份的数据恢复到集合中。</p><h3 id="恢复特定集合的命令"><a href="#恢复特定集合的命令" class="headerlink" title="恢复特定集合的命令"></a>恢复特定集合的命令</h3><p><code>mongorestore</code> 支持只恢复特定的集合，而不需要恢复整个数据库。基本的命令格式如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">mongorestore --db &lt;数据库名&gt; --collection &lt;集合名&gt; &lt;备份文件路径&gt;<br></code></pre></td></tr></table></figure><ul><li><code>&lt;数据库名&gt;</code>：要恢复的数据库名称。</li><li><code>&lt;集合名&gt;</code>：要恢复的集合名称。</li><li><code>&lt;备份文件路径&gt;</code>：备份文件的路径，通常是一个以 <code>.bson</code> 结尾的文件。</li></ul><p>例如，如果你想将备份文件 <code>backup/mycollection.bson</code> 恢复到 <code>mydatabase</code> 数据库中的 <code>mycollection</code> 集合，命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">mongorestore --db mydatabase --collection mycollection backup/mycollection.bson<br></code></pre></td></tr></table></figure><h3 id="额外注意事项"><a href="#额外注意事项" class="headerlink" title="额外注意事项"></a>额外注意事项</h3><ol><li><strong>恢复索引</strong>：<code>mongorestore</code> 也可以恢复集合的索引，通常是自动完成的。如果你还需要恢复用户角色和权限，可以使用 <code>--restoreDbUsersAndRoles</code> 选项。</li><li><strong>覆盖现有文档</strong>：默认情况下，<code>mongorestore</code> 不会覆盖已存在的文档。为了防止重复数据出现，你可以在恢复前清空集合，正如上文所述。</li></ol><h2 id="4-总结"><a href="#4-总结" class="headerlink" title="4. 总结"></a>4. 总结</h2><p>在 MongoDB 中，当你需要恢复特定集合时，先清空集合可以避免旧数据的干扰。清空集合非常简单，只需使用 <code>deleteMany</code> 删除集合中的所有文档。然后，通过 <code>mongorestore</code> 恢复备份文件到相应的集合中。通过这种方法，你能够安全、高效地管理 MongoDB 数据库中的数据恢复过程。</p><p>希望这篇博文能够帮助你更好地理解和使用 <code>mongorestore</code>，以及在恢复前如何清空目标集合。如果你在使用过程中遇到任何问题，欢迎留言讨论！</p>]]></content>
    
    
    <categories>
      
      <category>IT</category>
      
      <category>数据库</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数据库</tag>
      
      <tag>MongoDB</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Scikit-Learn 参数调优和评估</title>
    <link href="/2023/08/skleanparamstune/"/>
    <url>/2023/08/skleanparamstune/</url>
    
    <content type="html"><![CDATA[<p>在机器学习的实践中，选择一个合适的模型只是冰山一角。即使选择了正确的模型，如果不对其进行适当的参数调优，那么模型的性能可能会大打折扣。参数调优对于模型的最终表现起到关键的作用。Sklearn，作为一个广泛使用的Python机器学习库，为我们提供了一系列强大的工具，如<code>GridSearchCV</code> 和 <code>RandomizedSearchCV</code>，帮助我们系统地进行参数调优。但是，如何有效地使用这些工具进行参数调优和模型评估呢？在本文中，我们将深入探讨这些问题，并为读者提供一些实践建议。</p><span id="more"></span><h2 id="1-决策树模型的参数调优和评估"><a href="#1-决策树模型的参数调优和评估" class="headerlink" title="1. 决策树模型的参数调优和评估"></a>1. 决策树模型的参数调优和评估</h2><h3 id="1-1-GridSearchCV"><a href="#1-1-GridSearchCV" class="headerlink" title="1.1 GridSearchCV"></a>1.1 GridSearchCV</h3><p>对于决策树模型的参数调优和评估，可以使用scikit-learn提供的交叉验证（Cross-validation）和网格搜索（GridSearch）工具。以下是具体的步骤：</p><ol><li><p><strong>定义参数网格</strong>:<br>为每个参数定义一组值来进行尝试。例如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python">param_grid = &#123;<br>    <span class="hljs-string">&#x27;criterion&#x27;</span>: [<span class="hljs-string">&quot;squared_error&quot;</span>, <span class="hljs-string">&quot;friedman_mse&quot;</span>, <span class="hljs-string">&quot;absolute_error&quot;</span>, <span class="hljs-string">&quot;poisson&quot;</span>],<br>    <span class="hljs-string">&#x27;splitter&#x27;</span>: [<span class="hljs-string">&#x27;best&#x27;</span>, <span class="hljs-string">&#x27;random&#x27;</span>],<br>    <span class="hljs-string">&#x27;max_depth&#x27;</span>: [<span class="hljs-literal">None</span>, <span class="hljs-number">10</span>, <span class="hljs-number">20</span>, <span class="hljs-number">30</span>],<br>    <span class="hljs-string">&#x27;min_samples_split&#x27;</span>: [<span class="hljs-number">2</span>, <span class="hljs-number">5</span>, <span class="hljs-number">10</span>],<br>    <span class="hljs-string">&#x27;min_samples_leaf&#x27;</span>: [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">4</span>],<br>    <span class="hljs-string">&#x27;max_features&#x27;</span>: [<span class="hljs-literal">None</span>, <span class="hljs-string">&#x27;auto&#x27;</span>, <span class="hljs-string">&#x27;sqrt&#x27;</span>, <span class="hljs-string">&#x27;log2&#x27;</span>]<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p><strong>初始化模型</strong>:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> sklearn.tree <span class="hljs-keyword">import</span> DecisionTreeRegressor<br>dt = DecisionTreeRegressor()<br></code></pre></td></tr></table></figure></li><li><p><strong>使用交叉验证的网格搜索</strong>:<br>使用 <code>GridSearchCV</code> 来进行网格搜索和交叉验证。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> sklearn.model_selection <span class="hljs-keyword">import</span> GridSearchCV<br><br>grid_search = GridSearchCV(estimator=dt, param_grid=param_grid, <br>                           cv=<span class="hljs-number">5</span>, n_jobs=-<span class="hljs-number">1</span>, verbose=<span class="hljs-number">2</span>)<br></code></pre></td></tr></table></figure><ul><li><code>cv=5</code> 指定了5折交叉验证。</li><li><code>n_jobs=-1</code> 表示使用所有可用的CPU核心。</li><li><code>verbose=2</code> 表示过程中显示详细信息。</li></ul></li><li><p><strong>拟合数据</strong>:<br>使用 <code>grid_search</code> 对象来拟合你的数据。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">grid_search.fit(X_train, y_train)<br></code></pre></td></tr></table></figure></li><li><p><strong>查看最佳参数</strong>:<br>完成拟合后，你可以查看为模型找到的最佳参数组合。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">best_params = grid_search.best_params_<br><span class="hljs-built_in">print</span>(best_params)<br></code></pre></td></tr></table></figure></li><li><p><strong>使用最佳模型</strong>:<br>使用网格搜索找到的最佳参数训练的模型可以直接从 <code>grid_search</code> 获取。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">best_dt = grid_search.best_estimator_<br></code></pre></td></tr></table></figure></li><li><p><strong>预测和评估</strong>:<br>使用此最佳模型进行预测并评估其性能。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">y_pred = best_dt.predict(X_test)<br></code></pre></td></tr></table></figure></li></ol><p><strong>注意事项</strong>:</p><ul><li>网格搜索可能会耗费很长时间，尤其是当参数网格较大或数据集较大时。因此，从一个较小的参数网格开始，然后根据初步的结果进一步细化可能是一个好策略。    </li><li>如果你希望更随机地搜索参数空间，而不是尝试所有的参数组合，可以考虑使用 <code>RandomizedSearchCV</code>。这个方法会从每个参数的分布中随机采样，并可能更快地找到一个不错的参数组合。</li><li>使用交叉验证的好处是你可以得到模型在不同子集上的性能评估，这有助于检测模型是否过拟合并提供了对模型泛化能力的更全面的估计。</li></ul><h3 id="1-2-RandomizedSearchCV"><a href="#1-2-RandomizedSearchCV" class="headerlink" title="1.2 RandomizedSearchCV"></a>1.2 RandomizedSearchCV</h3><p><code>RandomizedSearchCV</code> 是一种用于超参数调优的方法，它不尝试参数网格中的所有参数组合，而是从参数网格中随机抽样固定数量的参数组合。这种方法可能更快地找到一个不错的参数组合，特别是当参数空间很大时。</p><p>以下是使用 <code>RandomizedSearchCV</code> 的步骤：</p><ol><li><p><strong>定义参数分布</strong>:<br>与 <code>GridSearchCV</code> 不同，可以为参数定义一个分布而不是明确的值列表。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> scipy.stats <span class="hljs-keyword">import</span> randint<br><br>param_dist = &#123;<br>    <span class="hljs-string">&#x27;criterion&#x27;</span>: [<span class="hljs-string">&quot;squared_error&quot;</span>, <span class="hljs-string">&quot;friedman_mse&quot;</span>, <span class="hljs-string">&quot;absolute_error&quot;</span>, <span class="hljs-string">&quot;poisson&quot;</span>],<br>    <span class="hljs-string">&#x27;splitter&#x27;</span>: [<span class="hljs-string">&#x27;best&#x27;</span>, <span class="hljs-string">&#x27;random&#x27;</span>],<br>    <span class="hljs-string">&#x27;max_depth&#x27;</span>: [<span class="hljs-literal">None</span>] + <span class="hljs-built_in">list</span>(randint(<span class="hljs-number">1</span>, <span class="hljs-number">20</span>).rvs(<span class="hljs-number">10</span>)),  <span class="hljs-comment"># None加上10个随机整数值在1到20之间</span><br>    <span class="hljs-string">&#x27;min_samples_split&#x27;</span>: randint(<span class="hljs-number">2</span>, <span class="hljs-number">10</span>),  <span class="hljs-comment"># 2到10之间的整数分布</span><br>    <span class="hljs-string">&#x27;min_samples_leaf&#x27;</span>: randint(<span class="hljs-number">1</span>, <span class="hljs-number">10</span>)   <span class="hljs-comment"># 1到10之间的整数分布</span><br>&#125;<br></code></pre></td></tr></table></figure></li><li><p><strong>初始化模型</strong>:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> sklearn.tree <span class="hljs-keyword">import</span> DecisionTreeRegressor<br>dt = DecisionTreeRegressor()<br></code></pre></td></tr></table></figure></li><li><p><strong>使用随机搜索的交叉验证</strong>:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> sklearn.model_selection <span class="hljs-keyword">import</span> RandomizedSearchCV<br><br>random_search = RandomizedSearchCV(estimator=dt, param_distributions=param_dist, <br>                                   n_iter=<span class="hljs-number">100</span>, cv=<span class="hljs-number">5</span>, n_jobs=-<span class="hljs-number">1</span>, verbose=<span class="hljs-number">2</span>, random_state=<span class="hljs-number">42</span>)<br></code></pre></td></tr></table></figure><ul><li><code>n_iter=100</code> 表示尝试100组参数组合。</li><li><code>cv=5</code> 指定了5折交叉验证。</li><li><code>n_jobs=-1</code> 表示使用所有可用的CPU核心。</li><li><code>verbose=2</code> 表示过程中显示详细信息。</li><li><code>random_state=42</code> 设置随机种子以确保可重复性。</li></ul></li><li><p><strong>拟合数据</strong>:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">random_search.fit(X_train, y_train)<br></code></pre></td></tr></table></figure></li><li><p><strong>查看最佳参数</strong>:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">best_params = random_search.best_params_<br><span class="hljs-built_in">print</span>(best_params)<br></code></pre></td></tr></table></figure></li><li><p><strong>使用最佳模型</strong>:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">best_dt = random_search.best_estimator_<br></code></pre></td></tr></table></figure></li><li><p><strong>预测和评估</strong>:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">y_pred = best_dt.predict(X_test)<br></code></pre></td></tr></table></figure></li></ol><p><strong>注意事项</strong>:</p><ul><li>由于 <code>RandomizedSearchCV</code> 只尝试指定数量的参数组合，它的运行时间往往比 <code>GridSearchCV</code> 短。</li><li>虽然随机搜索可能会遗漏最佳的参数组合，但在实践中，它往往能找到一个非常接近最佳的参数组合，而且消耗的时间远少于网格搜索。</li><li>如果你知道某些参数更有可能影响模型的性能，你可以为这些参数指定更细的网格或分布，而为其他参数指定较宽的范围或较少的选项。</li></ul><h2 id="2-随机森林模型的参数调优和评估"><a href="#2-随机森林模型的参数调优和评估" class="headerlink" title="2. 随机森林模型的参数调优和评估"></a>2. 随机森林模型的参数调优和评估</h2><p>这里就将一下 <code>GridSearchCV</code> 的方法，<code>RandomizedSearchCV</code> 可以根据上面决策树的内容举一反三。</p><p>以下是具体操作的步骤：</p><ol><li><p><strong>定义参数网格</strong>:<br>为所关心的每个参数定义一个值的范围或列表。例如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python">param_grid = &#123;<br>    <span class="hljs-string">&#x27;n_estimators&#x27;</span>: [<span class="hljs-number">10</span>, <span class="hljs-number">50</span>, <span class="hljs-number">100</span>, <span class="hljs-number">200</span>],<br>    <span class="hljs-string">&#x27;max_depth&#x27;</span>: [<span class="hljs-literal">None</span>, <span class="hljs-number">10</span>, <span class="hljs-number">20</span>, <span class="hljs-number">30</span>],<br>    <span class="hljs-string">&#x27;min_samples_split&#x27;</span>: [<span class="hljs-number">2</span>, <span class="hljs-number">5</span>, <span class="hljs-number">10</span>],<br>    <span class="hljs-string">&#x27;min_samples_leaf&#x27;</span>: [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">4</span>],<br>    <span class="hljs-string">&#x27;bootstrap&#x27;</span>: [<span class="hljs-literal">True</span>, <span class="hljs-literal">False</span>]<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p><strong>初始化模型</strong>:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> sklearn.ensemble <span class="hljs-keyword">import</span> RandomForestRegressor<br>rf = RandomForestRegressor()<br></code></pre></td></tr></table></figure></li><li><p><strong>使用交叉验证的网格搜索</strong>:<br>使用 <code>GridSearchCV</code> 从 <code>scikit-learn</code> 来自动进行网格搜索和交叉验证。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> sklearn.model_selection <span class="hljs-keyword">import</span> GridSearchCV<br><br>grid_search = GridSearchCV(estimator=rf, param_grid=param_grid, <br>                           cv=<span class="hljs-number">3</span>, n_jobs=-<span class="hljs-number">1</span>, verbose=<span class="hljs-number">2</span>)<br></code></pre></td></tr></table></figure><ul><li><code>cv=3</code> 指定了3折交叉验证。</li><li><code>n_jobs=-1</code> 使用所有可用的CPU核心。</li><li><code>verbose=2</code> 表示过程中显示详细信息。</li></ul></li><li><p><strong>拟合数据</strong>:<br>使用 <code>grid_search</code> 对象来拟合你的数据。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">grid_search.fit(X_train, y_train)<br></code></pre></td></tr></table></figure></li><li><p><strong>查看最佳参数</strong>:<br>一旦拟合完成，你可以查看最佳的参数组合。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">best_params = grid_search.best_params_<br><span class="hljs-built_in">print</span>(best_params)<br></code></pre></td></tr></table></figure></li><li><p><strong>使用最佳模型</strong>:<br>使用最佳参数训练的模型可以直接从 <code>grid_search</code> 获取。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">best_rf = grid_search.best_estimator_<br></code></pre></td></tr></table></figure></li><li><p><strong>预测和评估</strong>:<br>使用此最佳模型进行预测并评估其性能。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">y_pred = best_rf.predict(X_test)<br></code></pre></td></tr></table></figure></li></ol><p><strong>注意事项</strong>:</p><ul><li>网格搜索可能需要很长时间，取决于你的数据大小、参数网格的大小和可用计算资源。因此，从一个较小的参数网格开始可能是明智的，然后根据初步结果进一步调整。</li><li>如果你想要在搜索的同时考虑更随机的参数选择，可以尝试使用 <code>RandomizedSearchCV</code> 而不是 <code>GridSearchCV</code>。这允许你为每个参数设置一个分布，并从中随机采样，而不是尝试所有的组合，这通常更快。</li><li>在真实世界的应用中，使用交叉验证和参数搜索是很有价值的，因为它们可以帮助你确保模型不仅在训练数据上表现良好，而且还能很好地泛化到未见过的数据。</li></ul><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>参数调优不仅是机器学习实践中的一个重要步骤，而且是确保模型达到最佳性能的关键。通过使用Sklearn提供的工具，我们可以系统地搜索模型的参数空间，找到最佳的参数组合。尽管网格搜索方法可以提供全面的参数组合评估，但在某些情况下，随机搜索可能是一个更高效的选择，尤其是当参数空间非常大时。总之，有效的参数调优需要结合多种策略和工具，同时根据具体的问题和数据进行适当的调整。通过细致的参数调优和评估，我们可以确保我们的模型达到其潜在的最大性能，为我们的任务提供可靠的预测。</p>]]></content>
    
    
    <categories>
      
      <category>IT</category>
      
      <category>机器学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>机器学习</tag>
      
      <tag>Scikit-Learn</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Scikit-Learn 回归算法概述</title>
    <link href="/2023/08/skleanregression/"/>
    <url>/2023/08/skleanregression/</url>
    
    <content type="html"><![CDATA[<p>在机器学习领域，回归分析是一个核心的话题，它的目的是预测一个连续的输出值基于一个或多个输入特征。回归方法有着广泛的应用，从预测股票价格、房地产市场的评估，到天气预测等。尽管有各种各样的回归算法可以选择，但每种方法都有其独特的优势和局限性。本文将简要介绍几种流行的回归方法，包括线性回归、岭回归、Lasso回归、多项式回归、决策树回归、随机森林回归、梯度提升回归、支持向量回归、K-近邻回归，以及神经网络回归。通过详细的代码示例，读者可以更深入地了解每种方法的工作原理和实际应用。</p><span id="more"></span><p>Scikit-Learn（sklearn）是一个流行的机器学习库，它包含大量的回归算法。这些算法可用于预测数字目标变量。以下是一些主要的 sklearn 回归算法：</p><ol><li><strong>线性回归（Linear Regression）</strong>：最简单的回归方法，通过在数据中找到最佳拟合直线（对于一维输入）或超平面（对于多维输入）来建立预测模型。</li><li><strong>岭回归（Ridge Regression）</strong>：这是线性回归的一个扩展，它包括一个L2正则化项，可以帮助防止过拟合。</li><li><strong>Lasso回归（Lasso Regression）</strong>：另一个线性回归的扩展，它包括一个L1正则化项，这可以导致稀疏解，其中一些特征的权重将被设定为零。</li><li><strong>弹性网（Elastic Net）</strong>：这是一种结合了岭回归和Lasso回归的方法，它包括L1和L2两种类型的正则化项。</li><li><strong>多项式回归（Polynomial Regression）</strong>：这是线性回归的扩展，它允许模型在输入特征的高次幂上进行拟合，从而能够捕获数据中的非线性关系。</li><li><strong>决策树回归（Decision Tree Regression）</strong>：使用决策树模型进行预测的方法。它可以捕获复杂的非线性关系，并且具有解释性强的特点。</li><li><strong>随机森林回归（Random Forest Regression）</strong>：这是一种集成方法，它结合了多个决策树回归模型的预测结果。</li><li><strong>梯度提升回归（Gradient Boosting Regression）</strong>：另一种集成方法，它通过顺序地添加新的决策树，每一步都尝试纠正前一步的错误。</li><li><strong>支持向量回归（Support Vector Regression）</strong>：这是支持向量机的回归版本，它试图在预测误差在某个阈值内的同时，最大化特征空间中的间隔。</li><li><strong>最近邻回归（K-Nearest Neighbors Regression）</strong>：预测新数据点的目标值是通过查找训练集中最接近它的数据点并平均其目标值来进行的。</li><li><strong>神经网络回归（Neural Network Regression，或 MLP Regression）</strong>：这种方法使用神经网络模型进行预测，能够处理更复杂的非线性关系。</li></ol><h2 id="1-线性回归（Linear-Regression）"><a href="#1-线性回归（Linear-Regression）" class="headerlink" title="1. 线性回归（Linear Regression）"></a>1. 线性回归（Linear Regression）</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 引入所需要的库</span><br><span class="hljs-keyword">from</span> sklearn.model_selection <span class="hljs-keyword">import</span> train_test_split<br><span class="hljs-keyword">from</span> sklearn.linear_model <span class="hljs-keyword">import</span> LinearRegression<br><span class="hljs-keyword">from</span> sklearn <span class="hljs-keyword">import</span> datasets<br><br><span class="hljs-comment"># 生成一些随机的回归数据</span><br>X, y = datasets.make_regression(n_samples=<span class="hljs-number">100</span>, n_features=<span class="hljs-number">1</span>, noise=<span class="hljs-number">0.1</span>)<br><br><span class="hljs-comment"># 划分数据为训练集和测试集</span><br>X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=<span class="hljs-number">0.2</span>)<br><br><span class="hljs-comment"># 初始化线性回归模型</span><br>model = LinearRegression()<br><br><span class="hljs-comment"># 使用训练数据对模型进行拟合</span><br>model.fit(X_train, y_train)<br><br><span class="hljs-comment"># 在测试集上进行预测</span><br>predictions = model.predict(X_test)<br><br><span class="hljs-comment"># 输出预测的结果</span><br><span class="hljs-built_in">print</span>(predictions)<br></code></pre></td></tr></table></figure><h2 id="2-岭回归（Ridge-Regression）"><a href="#2-岭回归（Ridge-Regression）" class="headerlink" title="2. 岭回归（Ridge Regression）"></a>2. 岭回归（Ridge Regression）</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 引入所需要的库</span><br><span class="hljs-keyword">from</span> sklearn.model_selection <span class="hljs-keyword">import</span> train_test_split<br><span class="hljs-keyword">from</span> sklearn.linear_model <span class="hljs-keyword">import</span> Ridge<br><span class="hljs-keyword">from</span> sklearn <span class="hljs-keyword">import</span> datasets<br><br><span class="hljs-comment"># 生成一些随机的回归数据</span><br>X, y = datasets.make_regression(n_samples=<span class="hljs-number">100</span>, n_features=<span class="hljs-number">1</span>, noise=<span class="hljs-number">0.1</span>)<br><br><span class="hljs-comment"># 划分数据为训练集和测试集</span><br>X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=<span class="hljs-number">0.2</span>)<br><br><span class="hljs-comment"># 初始化岭回归模型</span><br>model = Ridge(alpha=<span class="hljs-number">1.0</span>)  <span class="hljs-comment"># alpha 参数控制正则化的强度</span><br><br><span class="hljs-comment"># 使用训练数据对模型进行拟合</span><br>model.fit(X_train, y_train)<br><br><span class="hljs-comment"># 在测试集上进行预测</span><br>predictions = model.predict(X_test)<br><br><span class="hljs-comment"># 输出预测的结果</span><br><span class="hljs-built_in">print</span>(predictions)<br></code></pre></td></tr></table></figure><p>这段代码与线性回归的示例相似，区别在于这里我们用的是 <code>Ridge</code> 而不是 <code>LinearRegression</code>。<code>Ridge</code> 接受一个 <code>alpha</code> 参数，这个参数控制正则化的强度，也就是避免过拟合的程度。</p><h2 id="3-Lasso回归（Lasso-Regression）"><a href="#3-Lasso回归（Lasso-Regression）" class="headerlink" title="3. Lasso回归（Lasso Regression）"></a>3. Lasso回归（Lasso Regression）</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 引入所需要的库</span><br><span class="hljs-keyword">from</span> sklearn.model_selection <span class="hljs-keyword">import</span> train_test_split<br><span class="hljs-keyword">from</span> sklearn.linear_model <span class="hljs-keyword">import</span> Lasso<br><span class="hljs-keyword">from</span> sklearn.preprocessing <span class="hljs-keyword">import</span> MinMaxScaler<br><span class="hljs-keyword">from</span> sklearn <span class="hljs-keyword">import</span> datasets<br><br><span class="hljs-comment"># 生成一些随机的回归数据</span><br>X, y = datasets.make_regression(n_samples=<span class="hljs-number">100</span>, n_features=<span class="hljs-number">1</span>, noise=<span class="hljs-number">0.1</span>)<br><br><span class="hljs-comment"># 划分数据为训练集和测试集</span><br>X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=<span class="hljs-number">0.2</span>)<br><br><span class="hljs-comment"># 初始化MinMaxScaler</span><br>scaler = MinMaxScaler()<br><br><span class="hljs-comment"># 使用训练集数据拟合scaler，并对训练集和测试集数据进行转换</span><br>X_train_scaled = scaler.fit_transform(X_train)<br>X_test_scaled = scaler.transform(X_test)<br><br><span class="hljs-comment"># 初始化Lasso回归模型</span><br>model = Lasso(alpha=<span class="hljs-number">1.0</span>)  <span class="hljs-comment"># alpha 参数控制正则化的强度</span><br><br><span class="hljs-comment"># 使用训练数据对模型进行拟合</span><br>model.fit(X_train_scaled, y_train)<br><br><span class="hljs-comment"># 在测试集上进行预测</span><br>predictions = model.predict(X_test_scaled)<br><br><span class="hljs-comment"># 输出预测的结果</span><br><span class="hljs-built_in">print</span>(predictions)<br></code></pre></td></tr></table></figure><p>这段代码与上述岭回归的示例非常相似，只是我们使用了 <code>Lasso</code> 类而不是 <code>Ridge</code> 类。和岭回归一样，<code>Lasso</code> 也接受一个 <code>alpha</code> 参数，这个参数控制正则化的强度。</p><h2 id="4-多项式回归（Polynomial-Regression）"><a href="#4-多项式回归（Polynomial-Regression）" class="headerlink" title="4. 多项式回归（Polynomial Regression）"></a>4. 多项式回归（Polynomial Regression）</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 引入所需要的库</span><br><span class="hljs-keyword">from</span> sklearn.model_selection <span class="hljs-keyword">import</span> train_test_split<br><span class="hljs-keyword">from</span> sklearn.linear_model <span class="hljs-keyword">import</span> LinearRegression<br><span class="hljs-keyword">from</span> sklearn.preprocessing <span class="hljs-keyword">import</span> PolynomialFeatures, FunctionTransformer<br><span class="hljs-keyword">from</span> sklearn.pipeline <span class="hljs-keyword">import</span> FeatureUnion<br><span class="hljs-keyword">from</span> sklearn <span class="hljs-keyword">import</span> datasets<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><br><span class="hljs-comment"># 生成一些随机的回归数据</span><br>X, y = datasets.make_regression(n_samples=<span class="hljs-number">100</span>, n_features=<span class="hljs-number">1</span>, noise=<span class="hljs-number">0.1</span>, random_state=<span class="hljs-number">42</span>)<br><br><span class="hljs-comment"># 划分数据为训练集和测试集</span><br>X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=<span class="hljs-number">0.2</span>, random_state=<span class="hljs-number">42</span>)<br><br><span class="hljs-comment"># 初始化线性回归模型</span><br>model = LinearRegression()<br><br><span class="hljs-comment"># 创建并拟合各种多项式特征</span><br>combined_features = FeatureUnion([(<span class="hljs-string">&quot;poly_features_1&quot;</span>, PolynomialFeatures(<span class="hljs-number">1</span>)),<br>                                  (<span class="hljs-string">&quot;poly_features_2&quot;</span>, PolynomialFeatures(<span class="hljs-number">2</span>)),<br>                                  (<span class="hljs-string">&quot;poly_features_3&quot;</span>, PolynomialFeatures(<span class="hljs-number">3</span>))])<br><br>X_train_combined = combined_features.fit_transform(X_train)<br>X_test_combined = combined_features.transform(X_test)<br><br>model.fit(X_train_combined, y_train)<br>predictions = model.predict(X_test_combined)<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;Combined polynomial regression predictions: <span class="hljs-subst">&#123;predictions&#125;</span>&quot;</span>)<br></code></pre></td></tr></table></figure><h2 id="5-决策树回归（Decision-Tree-Regression）"><a href="#5-决策树回归（Decision-Tree-Regression）" class="headerlink" title="5. 决策树回归（Decision Tree Regression）"></a>5. 决策树回归（Decision Tree Regression）</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 引入所需要的库</span><br><span class="hljs-keyword">from</span> sklearn.model_selection <span class="hljs-keyword">import</span> train_test_split<br><span class="hljs-keyword">from</span> sklearn.tree <span class="hljs-keyword">import</span> DecisionTreeRegressor<br><span class="hljs-keyword">from</span> sklearn.preprocessing <span class="hljs-keyword">import</span> MinMaxScaler<br><span class="hljs-keyword">from</span> sklearn <span class="hljs-keyword">import</span> datasets<br><br><span class="hljs-comment"># 生成一些随机的回归数据</span><br>X, y = datasets.make_regression(n_samples=<span class="hljs-number">100</span>, n_features=<span class="hljs-number">1</span>, noise=<span class="hljs-number">0.1</span>, random_state=<span class="hljs-number">42</span>)<br><br><span class="hljs-comment"># 划分数据为训练集和测试集</span><br>X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=<span class="hljs-number">0.2</span>, random_state=<span class="hljs-number">42</span>)<br><br><span class="hljs-comment"># 使用MinMaxScaler来缩放数据</span><br>scaler = MinMaxScaler()<br>X_train_scaled = scaler.fit_transform(X_train)<br>X_test_scaled = scaler.transform(X_test)<br><br><span class="hljs-comment"># 初始化并训练决策树回归模型</span><br>tree_reg = DecisionTreeRegressor(random_state=<span class="hljs-number">42</span>)<br>tree_reg.fit(X_train_scaled, y_train)<br><br><span class="hljs-comment"># 预测测试数据</span><br>predictions = tree_reg.predict(X_test_scaled)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;Decision tree regression predictions: <span class="hljs-subst">&#123;predictions&#125;</span>&quot;</span>)<br></code></pre></td></tr></table></figure><h2 id="6-随机森林回归（Random-Forest-Regression）"><a href="#6-随机森林回归（Random-Forest-Regression）" class="headerlink" title="6. 随机森林回归（Random Forest Regression）"></a>6. 随机森林回归（Random Forest Regression）</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 引入所需要的库</span><br><span class="hljs-keyword">from</span> sklearn.model_selection <span class="hljs-keyword">import</span> train_test_split<br><span class="hljs-keyword">from</span> sklearn.ensemble <span class="hljs-keyword">import</span> RandomForestRegressor<br><span class="hljs-keyword">from</span> sklearn.preprocessing <span class="hljs-keyword">import</span> MinMaxScaler<br><span class="hljs-keyword">from</span> sklearn <span class="hljs-keyword">import</span> datasets<br><br><span class="hljs-comment"># 生成一些随机的回归数据</span><br>X, y = datasets.make_regression(n_samples=<span class="hljs-number">100</span>, n_features=<span class="hljs-number">1</span>, noise=<span class="hljs-number">0.1</span>, random_state=<span class="hljs-number">42</span>)<br><br><span class="hljs-comment"># 划分数据为训练集和测试集</span><br>X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=<span class="hljs-number">0.2</span>, random_state=<span class="hljs-number">42</span>)<br><br><span class="hljs-comment"># 使用MinMaxScaler来缩放数据</span><br>scaler = MinMaxScaler()<br>X_train_scaled = scaler.fit_transform(X_train)<br>X_test_scaled = scaler.transform(X_test)<br><br><span class="hljs-comment"># 初始化并训练随机森林回归模型</span><br>rf_reg = RandomForestRegressor(n_estimators=<span class="hljs-number">100</span>, random_state=<span class="hljs-number">42</span>)<br>rf_reg.fit(X_train_scaled, y_train)<br><br><span class="hljs-comment"># 预测测试数据</span><br>predictions = rf_reg.predict(X_test_scaled)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;Random forest regression predictions: <span class="hljs-subst">&#123;predictions&#125;</span>&quot;</span>)<br></code></pre></td></tr></table></figure><h2 id="7-梯度提升回归（Gradient-Boosting-Regression）"><a href="#7-梯度提升回归（Gradient-Boosting-Regression）" class="headerlink" title="7. 梯度提升回归（Gradient Boosting Regression）"></a>7. 梯度提升回归（Gradient Boosting Regression）</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 引入所需要的库</span><br><span class="hljs-keyword">from</span> sklearn.model_selection <span class="hljs-keyword">import</span> train_test_split<br><span class="hljs-keyword">from</span> sklearn.ensemble <span class="hljs-keyword">import</span> GradientBoostingRegressor<br><span class="hljs-keyword">from</span> sklearn.preprocessing <span class="hljs-keyword">import</span> MinMaxScaler<br><span class="hljs-keyword">from</span> sklearn <span class="hljs-keyword">import</span> datasets<br><br><span class="hljs-comment"># 生成一些随机的回归数据</span><br>X, y = datasets.make_regression(n_samples=<span class="hljs-number">100</span>, n_features=<span class="hljs-number">1</span>, noise=<span class="hljs-number">0.1</span>, random_state=<span class="hljs-number">42</span>)<br><br><span class="hljs-comment"># 划分数据为训练集和测试集</span><br>X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=<span class="hljs-number">0.2</span>, random_state=<span class="hljs-number">42</span>)<br><br><span class="hljs-comment"># 使用MinMaxScaler来缩放数据</span><br>scaler = MinMaxScaler()<br>X_train_scaled = scaler.fit_transform(X_train)<br>X_test_scaled = scaler.transform(X_test)<br><br><span class="hljs-comment"># 初始化并训练梯度提升回归模型</span><br>gb_reg = GradientBoostingRegressor(n_estimators=<span class="hljs-number">100</span>, learning_rate=<span class="hljs-number">0.1</span>, max_depth=<span class="hljs-number">1</span>, random_state=<span class="hljs-number">42</span>)<br>gb_reg.fit(X_train_scaled, y_train)<br><br><span class="hljs-comment"># 预测测试数据</span><br>predictions = gb_reg.predict(X_test_scaled)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;Gradient boosting regression predictions: <span class="hljs-subst">&#123;predictions&#125;</span>&quot;</span>)<br></code></pre></td></tr></table></figure><p>梯度提升是一个强大的集成方法，它结合了多个弱预测模型（通常是决策树），以提高预测精度。通过逐步添加新模型，梯度提升方法试图纠正前一个模型的错误。在这个示例中，我们使用了100个决策树模型，学习率设置为0.1，树的最大深度为1。这些参数都可以根据你的具体问题进行调整。</p><h2 id="8-支持向量回归（Support-Vector-Regression）"><a href="#8-支持向量回归（Support-Vector-Regression）" class="headerlink" title="8. 支持向量回归（Support Vector Regression）"></a>8. 支持向量回归（Support Vector Regression）</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 引入所需要的库</span><br><span class="hljs-keyword">from</span> sklearn.model_selection <span class="hljs-keyword">import</span> train_test_split<br><span class="hljs-keyword">from</span> sklearn.svm <span class="hljs-keyword">import</span> SVR<br><span class="hljs-keyword">from</span> sklearn.preprocessing <span class="hljs-keyword">import</span> MinMaxScaler<br><span class="hljs-keyword">from</span> sklearn <span class="hljs-keyword">import</span> datasets<br><br><span class="hljs-comment"># 生成一些随机的回归数据</span><br>X, y = datasets.make_regression(n_samples=<span class="hljs-number">100</span>, n_features=<span class="hljs-number">1</span>, noise=<span class="hljs-number">0.1</span>, random_state=<span class="hljs-number">42</span>)<br><br><span class="hljs-comment"># 划分数据为训练集和测试集</span><br>X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=<span class="hljs-number">0.2</span>, random_state=<span class="hljs-number">42</span>)<br><br><span class="hljs-comment"># 使用MinMaxScaler来缩放数据</span><br>scaler = MinMaxScaler()<br>X_train_scaled = scaler.fit_transform(X_train)<br>X_test_scaled = scaler.transform(X_test)<br><br><span class="hljs-comment"># 初始化并训练支持向量回归模型</span><br>svr_reg = SVR(kernel=<span class="hljs-string">&#x27;rbf&#x27;</span>, C=<span class="hljs-number">1.0</span>, epsilon=<span class="hljs-number">0.1</span>)<br>svr_reg.fit(X_train_scaled, y_train)<br><br><span class="hljs-comment"># 预测测试数据</span><br>predictions = svr_reg.predict(X_test_scaled)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;Support vector regression predictions: <span class="hljs-subst">&#123;predictions&#125;</span>&quot;</span>)<br></code></pre></td></tr></table></figure><p>支持向量回归是一种强大的回归方法，它使用支持向量机（SVM）的原理来解决回归问题。在这个示例中，我们使用了径向基函数（rbf）作为核函数，惩罚系数（C）设置为1.0，损失函数的ε-insensitive zone参数为0.1。这些参数都可以根据你的具体问题进行调整。</p><h2 id="9-最近邻回归（K-Nearest-Neighbors-Regression）"><a href="#9-最近邻回归（K-Nearest-Neighbors-Regression）" class="headerlink" title="9. 最近邻回归（K-Nearest Neighbors Regression）"></a>9. 最近邻回归（K-Nearest Neighbors Regression）</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 引入所需要的库</span><br><span class="hljs-keyword">from</span> sklearn.model_selection <span class="hljs-keyword">import</span> train_test_split<br><span class="hljs-keyword">from</span> sklearn.neighbors <span class="hljs-keyword">import</span> KNeighborsRegressor<br><span class="hljs-keyword">from</span> sklearn.preprocessing <span class="hljs-keyword">import</span> MinMaxScaler<br><span class="hljs-keyword">from</span> sklearn <span class="hljs-keyword">import</span> datasets<br><br><span class="hljs-comment"># 生成一些随机的回归数据</span><br>X, y = datasets.make_regression(n_samples=<span class="hljs-number">100</span>, n_features=<span class="hljs-number">1</span>, noise=<span class="hljs-number">0.1</span>, random_state=<span class="hljs-number">42</span>)<br><br><span class="hljs-comment"># 划分数据为训练集和测试集</span><br>X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=<span class="hljs-number">0.2</span>, random_state=<span class="hljs-number">42</span>)<br><br><span class="hljs-comment"># 使用MinMaxScaler来缩放数据</span><br>scaler = MinMaxScaler()<br>X_train_scaled = scaler.fit_transform(X_train)<br>X_test_scaled = scaler.transform(X_test)<br><br><span class="hljs-comment"># 初始化并训练K-近邻回归模型</span><br>knn_reg = KNeighborsRegressor(n_neighbors=<span class="hljs-number">5</span>)<br>knn_reg.fit(X_train_scaled, y_train)<br><br><span class="hljs-comment"># 预测测试数据</span><br>predictions = knn_reg.predict(X_test_scaled)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;K-nearest neighbors regression predictions: <span class="hljs-subst">&#123;predictions&#125;</span>&quot;</span>)<br></code></pre></td></tr></table></figure><p>K-近邻回归是一种基于实例的学习方法，它在预测新实例时考虑了其最近的 <code>k</code> 个邻居。这个示例中，我们设置 <code>k</code>（<code>n_neighbors</code> 参数）为5，这意味着模型在进行预测时会考虑最近的5个邻居的平均值。这个参数可以根据你的具体问题进行调整。</p><h2 id="10-神经网络回归（Neural-Network-Regression，或-MLP-Regression）"><a href="#10-神经网络回归（Neural-Network-Regression，或-MLP-Regression）" class="headerlink" title="10. 神经网络回归（Neural Network Regression，或 MLP Regression）"></a>10. 神经网络回归（Neural Network Regression，或 MLP Regression）</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 引入所需要的库</span><br><span class="hljs-keyword">from</span> sklearn.model_selection <span class="hljs-keyword">import</span> train_test_split<br><span class="hljs-keyword">from</span> sklearn.neural_network <span class="hljs-keyword">import</span> MLPRegressor<br><span class="hljs-keyword">from</span> sklearn.preprocessing <span class="hljs-keyword">import</span> MinMaxScaler<br><span class="hljs-keyword">from</span> sklearn <span class="hljs-keyword">import</span> datasets<br><br><span class="hljs-comment"># 生成一些随机的回归数据</span><br>X, y = datasets.make_regression(n_samples=<span class="hljs-number">100</span>, n_features=<span class="hljs-number">1</span>, noise=<span class="hljs-number">0.1</span>, random_state=<span class="hljs-number">42</span>)<br><br><span class="hljs-comment"># 划分数据为训练集和测试集</span><br>X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=<span class="hljs-number">0.2</span>, random_state=<span class="hljs-number">42</span>)<br><br><span class="hljs-comment"># 使用MinMaxScaler来缩放数据</span><br>scaler = MinMaxScaler()<br>X_train_scaled = scaler.fit_transform(X_train)<br>X_test_scaled = scaler.transform(X_test)<br><br><span class="hljs-comment"># 初始化并训练神经网络回归模型</span><br>mlp_reg = MLPRegressor(hidden_layer_sizes=(<span class="hljs-number">10</span>, ), activation=<span class="hljs-string">&#x27;relu&#x27;</span>, solver=<span class="hljs-string">&#x27;adam&#x27;</span>, max_iter=<span class="hljs-number">500</span>, random_state=<span class="hljs-number">42</span>)<br>mlp_reg.fit(X_train_scaled, y_train)<br><br><span class="hljs-comment"># 预测测试数据</span><br>predictions = mlp_reg.predict(X_test_scaled)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;Neural network regression predictions: <span class="hljs-subst">&#123;predictions&#125;</span>&quot;</span>)<br></code></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>回归分析是机器学习中的一个强大工具，无论是对于简单的线性关系，还是复杂的非线性模式，都有合适的算法可供选择。本文提供了各种回归方法的基本介绍和实现示例，帮助读者理解和比较它们的特点和应用场景。当然，选择最合适的回归方法应考虑实际问题的需求、数据的性质以及模型的解释性。而在实际应用中，经常需要进一步的参数调优、特征选择和工程实践，以确保模型的最佳性能。希望本文为读者提供了一个扎实的起点，从而深入探索和应用这些强大的回归工具。</p>]]></content>
    
    
    <categories>
      
      <category>IT</category>
      
      <category>机器学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>机器学习</tag>
      
      <tag>Scikit-Learn</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python导入上上级目录模块</title>
    <link href="/2023/08/pythonimport/"/>
    <url>/2023/08/pythonimport/</url>
    
    <content type="html"><![CDATA[<p>要在Python中从上上级目录导入模块，可以修改 <code>sys.path</code> 来包含该目录。<code>sys.path</code> 是Python搜索模块的路径列表。当尝试导入模块时，Python会在这些路径中查找该模块。</p><span id="more"></span><p>下面是一个例子，演示如何导入上上级目录中的模块：</p><ol><li>假设目录结构如下：</li></ol><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs gherkin">/myproject/<br>|<span class="hljs-string">-- main/</span><br><span class="hljs-string"></span>|<span class="hljs-string">   </span>|<span class="hljs-string">-- sub/</span><br><span class="hljs-string"></span>|<span class="hljs-string">   </span>|<span class="hljs-string">   </span>|<span class="hljs-string">-- script.py</span><br><span class="hljs-string"></span>|<span class="hljs-string">-- module_to_import.py</span><br></code></pre></td></tr></table></figure><p>在这个结构中，<code>script.py</code> 需要导入 <code>module_to_import.py</code>。</p><ol start="2"><li>在 <code>script.py</code> 中，可以使用以下代码来导入 <code>module_to_import.py</code>：</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> sys<br><span class="hljs-keyword">import</span> os<br><br><span class="hljs-comment"># 添加上上级目录到sys.path</span><br>sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), <span class="hljs-string">&#x27;../..&#x27;</span>)))<br><br><span class="hljs-keyword">import</span> module_to_import<br><br><span class="hljs-comment"># 现在可以使用module_to_import中的功能了</span><br></code></pre></td></tr></table></figure><p>这样，就可以从上上级目录导入模块了。不过，请注意，长期依赖修改 <code>sys.path</code> 可能不是最佳实践。更好的方法是使用虚拟环境或确保所有需要的模块都在一个合适的位置，例如在Python的 <code>site-packages</code> 目录下。</p>]]></content>
    
    
    <categories>
      
      <category>IT</category>
      
      <category>Python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>饥荒『荒野求生』服务器物品破坏记录</title>
    <link href="/breakrecord/"/>
    <url>/breakrecord/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>以下记录各个世界的破坏记录，包括建筑、眼球塔、食人花，望各位互相监督（文件通过 Python 自动生成）</p><p>距离的定义：一块地皮的距离为4，excel文件里的距离是距离的平方，想知道确切的距离可以自己开根号算一下</p><span id="more"></span><script>    function getDay(num, str) {        var today = new Date();        var nowTime = today.getTime();        var ms = 24*3600*1000*num;        today.setTime(parseInt(nowTime + ms));        var oYear = today.getFullYear();        var oMoth = (today.getMonth() + 1).toString();        if (oMoth.length <= 1) oMoth = '0' + oMoth;        var oDay = today.getDate().toString();        if (oDay.length <= 1) oDay = '0' + oDay;        return oYear + str + oMoth + str + oDay;    }</script><script>window.onload = function(){    document.getElementById('datePicker').value=getDay(-1, '-')    document.getElementById('datePicker').max=getDay(-1, '-')    document.getElementById('datePicker').min=getDay(-30, '-')};</script><script>    function doit() {        var the_date = document.getElementById('datePicker').value        window.open('/attachments/breakrecord/' + the_date + '.xlsx')    }</script><div>    <p>请在下方选择要访问的日期</p>    <input type="date" id = "datePicker" value="" /></div><br><div>      <input type="button" onClick="doit()" value="获取记录" style = "display: inline-block; padding: 5px 15px; cursor: pointer; text-align: center; text-decoration: none; outline: none; color: #fff; background-color: #4CAF50; border: none; border-radius: 15px; box-shadow: 0 4px #999;"></div>]]></content>
    
    
    <categories>
      
      <category>游戏</category>
      
      <category>饥荒</category>
      
    </categories>
    
    
    <tags>
      
      <tag>饥荒</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>荒野求生服个人仓库使用教程</title>
    <link href="/2021/05/repoguide/"/>
    <url>/2021/05/repoguide/</url>
    
    <content type="html"><![CDATA[<p>简略地说明一下荒野求生服仓库的用法，具体用法还需自行摸索</p><span id="more"></span><h2 id="初始化仓库"><a href="#初始化仓库" class="headerlink" title="初始化仓库"></a>初始化仓库</h2><p><img src="/img/article_image/2021/2021-05-04/01.webp"><br><img src="/img/article_image/2021/2021-05-04/02.webp"><br><img src="/img/article_image/2021/2021-05-04/03.webp"><br><img src="/img/article_image/2021/2021-05-04/04.webp"></p><h2 id="储存物品"><a href="#储存物品" class="headerlink" title="储存物品"></a>储存物品</h2><p><img src="/img/article_image/2021/2021-05-04/05.webp"><br><img src="/img/article_image/2021/2021-05-04/06.webp"><br><img src="/img/article_image/2021/2021-05-04/07.webp"></p><h2 id="使用好友的仓库"><a href="#使用好友的仓库" class="headerlink" title="使用好友的仓库"></a>使用好友的仓库</h2><p><img src="/img/article_image/2021/2021-05-04/08.webp"></p>]]></content>
    
    
    <categories>
      
      <category>游戏</category>
      
      <category>饥荒</category>
      
    </categories>
    
    
    <tags>
      
      <tag>饥荒</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>利用 Mirai 及 Graia 搭建自己的 QQ 机器人</title>
    <link href="/2021/02/qqbot/"/>
    <url>/2021/02/qqbot/</url>
    
    <content type="html"><![CDATA[<p>最近无聊逛 <code>GitHub</code> 发现一个有意思的项目 <a href="https://github.com/mamoe/mirai">Mirai</a>，可以搭建 <code>QQ</code> 机器人，在这里记录一下自己踩过的坑</p><span id="more"></span><p>因为 <code>Mirai</code> 登录 <code>QQ</code> 时需要滑块验证登录，而我用 <code>Ubuntu Server</code> 没有 <code>GUI</code>，导致无法验证登录 <code>QQ</code></p><p>所以，我用曲线救国的方法，在 <code>Windows</code> 上 <code>Mirai</code> 登录 <code>QQ</code> 后，再把整个文件夹打包放到 <code>Ubuntu Server</code> 上即可</p><h2 id="在-Windows-上运行-Mirai"><a href="#在-Windows-上运行-Mirai" class="headerlink" title="在 Windows 上运行 Mirai"></a>在 Windows 上运行 Mirai</h2><ol><li><p>下载并安装 <code>OpenJDK</code>，我用的是 <a href="https://adoptopenjdk.net/">AdoptOpenJDK</a>，注意 <code>JDK</code> 的版本至少要 <code>11</code></p></li><li><p>到 <a href="https://github.com/iTXTech/mirai-console-loader">Mirai Console Loader</a>，从 <a href="https://github.com/iTXTech/mirai-console-loader/releases">Releases</a> 下载最新版本的 <code>MCL</code></p></li><li><p>新建文件夹 <code>mcl</code>，解压到该文件夹里，并将命令行路径切换到该文件夹</p></li><li><p>在命令行中执行 <code>.\mcl --update-package net.mamoe:mirai-api-http --channel stable --type plugin</code> 安装 <a href="https://github.com/project-mirai/mirai-api-http">mirai-api-http</a></p></li><li><p>编辑文件 <code>mcl\config\net.mamoe.mirai-api-http\setting.yml</code>，删除原本的内容，添加以下内容：</p></li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment">## 该配置为全局配置，对所有Session有效</span><br><br><span class="hljs-comment"># 可选，默认值为0.0.0.0</span><br><span class="hljs-attr">host:</span> <span class="hljs-string">&#x27;0.0.0.0&#x27;</span><br><br><span class="hljs-comment"># 可选，默认值为8080</span><br><span class="hljs-attr">port:</span> <span class="hljs-number">8080</span>          <br><br><span class="hljs-comment"># 可选，默认由插件第一次启动时随机生成，建议手动指定</span><br><span class="hljs-attr">authKey:</span> <span class="hljs-number">1234567890</span>  <br><br><span class="hljs-comment"># 可选，缓存大小，默认4096.缓存过小会导致引用回复与撤回消息失败</span><br><span class="hljs-attr">cacheSize:</span> <span class="hljs-number">4096</span><br><br><span class="hljs-comment"># 可选，是否开启websocket，默认关闭，建议通过Session范围的配置设置</span><br><span class="hljs-attr">enableWebsocket:</span> <span class="hljs-literal">true</span><br><br><span class="hljs-comment"># 可选，配置CORS跨域，默认为*，即允许所有域名</span><br><span class="hljs-attr">cors:</span> <br>  <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;*&#x27;</span><br><br><span class="hljs-comment">## 消息上报</span><br><span class="hljs-attr">report:</span><br><span class="hljs-comment"># 功能总开关</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">false</span><br>  <span class="hljs-comment"># 群消息上报</span><br>  <span class="hljs-attr">groupMessage:</span><br>    <span class="hljs-attr">report:</span> <span class="hljs-literal">false</span><br>  <span class="hljs-comment"># 好友消息上报</span><br>  <span class="hljs-attr">friendMessage:</span><br>    <span class="hljs-attr">report:</span> <span class="hljs-literal">false</span><br>  <span class="hljs-comment"># 临时消息上报</span><br>  <span class="hljs-attr">tempMessage:</span><br>    <span class="hljs-attr">report:</span> <span class="hljs-literal">false</span><br>  <span class="hljs-comment"># 事件上报</span><br>  <span class="hljs-attr">eventMessage:</span><br>    <span class="hljs-attr">report:</span> <span class="hljs-literal">false</span><br>  <span class="hljs-comment"># 上报URL</span><br>  <span class="hljs-attr">destinations:</span> []<br>  <span class="hljs-comment"># 上报时的额外Header</span><br>  <span class="hljs-attr">extraHeaders:</span> &#123;&#125;<br><br><span class="hljs-comment">## 心跳</span><br><span class="hljs-attr">heartbeat:</span><br>  <span class="hljs-comment"># 功能总开关</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">false</span><br>  <span class="hljs-comment"># 启动延迟</span><br>  <span class="hljs-attr">delay:</span> <span class="hljs-number">1000</span><br>  <span class="hljs-comment"># 心跳间隔</span><br>  <span class="hljs-attr">period:</span> <span class="hljs-number">15000</span><br>  <span class="hljs-comment"># 心跳上报URL</span><br>  <span class="hljs-attr">destinations:</span> []<br>  <span class="hljs-comment"># 上报时的额外信息</span><br>  <span class="hljs-attr">extraBody:</span> &#123;&#125;<br>  <span class="hljs-comment"># 上报时的额外头</span><br>  <span class="hljs-attr">extraHeaders:</span> &#123;&#125;<br></code></pre></td></tr></table></figure><ol start="6"><li><p>在命令行中执行 <code>./mcl --update-package net.mamoe:mirai-login-solver-selenium --channel nightly --type plugin</code> 安装 <a href="https://github.com/project-mirai/mirai-login-solver-selenium">mirai-login-solver-selenium</a></p></li><li><p>确认电脑已安装最新版 <code>Chrome</code>，没有的话请执行安装</p></li><li><p>在命令行中执行 <code>.\mcl</code> 以启动 <code>MCL</code></p></li><li><p>在启动的 MCL 中输入 <code>/autoLogin add QQ号 QQ密码</code>，然后会有弹窗滑块等一系列操作，根据提醒操作即可</p></li><li><p>成功登录后，按 <code>Ctrl</code> + <code>C</code> 退出 <code>MCL</code></p></li><li><p>zip 打包 <code>mcl</code> 文件夹</p></li></ol><p>至此 <code>Windows</code> 上的操作完毕，接下来我们切换到 <code>Ubuntu Server</code></p><h2 id="在-Ubuntu-Server-上运行-Mirai"><a href="#在-Ubuntu-Server-上运行-Mirai" class="headerlink" title="在 Ubuntu Server 上运行 Mirai"></a>在 Ubuntu Server 上运行 Mirai</h2><ol><li>安装 <code>OpenJDK</code></li></ol><p>我用的是 <code>Ubuntu Server 20.04</code>，<code>apt</code> 库里的 <code>OpenJDK</code> 版本是 <code>11</code> 的，直接 <code>apt</code> 安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> apt update<br><span class="hljs-built_in">sudo</span> apt install default-jdk<br></code></pre></td></tr></table></figure><p>安装完成后运行 <code>java -version</code> 确认版本是否是 <code>11</code></p><ol start="2"><li>运行 MCL</li></ol><p>将之前打包的压缩包复制到 <code>Ubuntu</code> 中，解压并运行 <code>MCL</code>，请提前装好 <code>screen</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> mcl<br><span class="hljs-built_in">chmod</span> +x mcl<br>screen -dmS mcl ./mcl<br></code></pre></td></tr></table></figure><h2 id="编写-Bot-脚本"><a href="#编写-Bot-脚本" class="headerlink" title="编写 Bot 脚本"></a>编写 Bot 脚本</h2><ol><li><code>Python</code> 版本</li></ol><p><a href="https://github.com/GraiaProject/Application">Graia</a> 要求 <code>Python</code> 版本至少为 <code>3.7</code>，请确认自己的 <code>Python</code> 版本：<code>python3 -V</code>，如果版本低于 <code>3.7</code>，请自行升级</p><p><code>Ubuntu Server 20.04</code> 自带的 <code>Python</code> 版本是 <code>3.8.5</code></p><ol start="2"><li>安装 <code>Graia</code></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> pip3 install graia-application-mirai<br></code></pre></td></tr></table></figure><ol start="3"><li>编写脚本</li></ol><p>在 <code>mcl</code> 目录新建 <code>bot.py</code> 输入以下内容</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">from</span> graia.broadcast <span class="hljs-keyword">import</span> Broadcast<br><span class="hljs-keyword">from</span> graia.application <span class="hljs-keyword">import</span> GraiaMiraiApplication, Session<br><span class="hljs-keyword">from</span> graia.application.message.chain <span class="hljs-keyword">import</span> MessageChain<br><span class="hljs-keyword">import</span> asyncio<br><br><span class="hljs-keyword">from</span> graia.application.message.elements.internal <span class="hljs-keyword">import</span> Plain<br><span class="hljs-keyword">from</span> graia.application.friend <span class="hljs-keyword">import</span> Friend<br><br>loop = asyncio.get_event_loop()<br><br>bcc = Broadcast(loop=loop)<br>app = GraiaMiraiApplication(<br>    broadcast=bcc,<br>    connect_info=Session(<br>        host=<span class="hljs-string">&quot;http://localhost:8080&quot;</span>, <span class="hljs-comment"># 填入 httpapi 服务运行的地址</span><br>        authKey=<span class="hljs-string">&quot;graia-mirai-api-http-authkey&quot;</span>, <span class="hljs-comment"># 填入 authKey，在 mcl\config\net.mamoe.mirai-api-http\setting.yml 里的 authKey</span><br>        account=<span class="hljs-number">1209626343</span>, <span class="hljs-comment"># 你的机器人的 qq 号</span><br>        websocket=<span class="hljs-literal">True</span> <span class="hljs-comment"># Graia 已经可以根据所配置的消息接收的方式来保证消息接收部分的正常运作.</span><br>    )<br>)<br><br><span class="hljs-meta">@bcc.receiver(<span class="hljs-params"><span class="hljs-string">&quot;FriendMessage&quot;</span></span>)</span><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">def</span> <span class="hljs-title function_">friend_message_listener</span>(<span class="hljs-params">app: GraiaMiraiApplication, friend: Friend</span>):<br>    <span class="hljs-keyword">await</span> app.sendFriendMessage(friend, MessageChain.create([<br>        Plain(<span class="hljs-string">&quot;Hello, World!&quot;</span>)<br>    ]))<br><br>app.launch_blocking()<br></code></pre></td></tr></table></figure><ol start="4"><li>运行脚本</li></ol><p>运行后当终端输出</p><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs prolog">[<span class="hljs-number">2020</span><span class="hljs-number">-07</span><span class="hljs-number">-25</span> <span class="hljs-number">21</span>:<span class="hljs-number">42</span>:<span class="hljs-number">11</span>,<span class="hljs-number">929</span>][<span class="hljs-symbol">INFO</span>]: launching app...<br>[<span class="hljs-number">2020</span><span class="hljs-number">-07</span><span class="hljs-number">-25</span> <span class="hljs-number">21</span>:<span class="hljs-number">42</span>:<span class="hljs-number">11</span>,<span class="hljs-number">960</span>][<span class="hljs-symbol">INFO</span>]: using websocket to receive event<br>[<span class="hljs-number">2020</span><span class="hljs-number">-07</span><span class="hljs-number">-25</span> <span class="hljs-number">21</span>:<span class="hljs-number">42</span>:<span class="hljs-number">11</span>,<span class="hljs-number">964</span>][<span class="hljs-symbol">INFO</span>]: event reveiver running...<br></code></pre></td></tr></table></figure><p>表示启动成功，然后和机器人账号发起好友对话, 当你的机器人向你发出 <code>Hello, World!</code> 时, 你就已经部署好了一个最小的 <code>Graia Framework</code></p><p>后续更强大的功能，请参照 <a href="https://graiaproject.github.io/Application/">Graia API</a> 执行编写吧</p><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><a href="https://github.com/iTXTech/mirai-console-loader">Mirai Console Loader</a><br><a href="https://github.com/GraiaProject/Application">Graia Application for mirai-api-http</a><br><a href="https://graia-document.vercel.app/">Graia Document</a><br><a href="https://graiaproject.github.io/Application/">Graia API</a></p>]]></content>
    
    
    <categories>
      
      <category>IT</category>
      
      <category>Python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>人工智能</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>饥荒联机版玩家追踪</title>
    <link href="/2020/10/dsttracker/"/>
    <url>/2020/10/dsttracker/</url>
    
    <content type="html"><![CDATA[<p>帮一个朋友追踪一个饥荒骗子的动向，利用 <code>Github Actions</code>，每5-10min执行一次，只要该玩家在线，就会发邮件提醒</p><span id="more"></span><p>GitHub 地址：<a href="https://github.com/jupitersh/dst-server-tracker">https://github.com/jupitersh/dst-server-tracker</a></p><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p><code>fork</code> 到自己仓库后，在 <code>Settings</code> -&gt; <code>Secrets</code> 中添加以下值</p><table><thead><tr><th>Name</th><th>Descrip</th><th>Value举例</th></tr></thead><tbody><tr><td><code>QQ_NUMBER</code></td><td>你的QQ号</td><td><code>1209626343</code></td></tr><tr><td><code>QQ_SMPT_PASSWD</code></td><td>你的QQ邮箱的SMTP密码</td><td><code>dxxdasdcxfeghbvb5xz</code></td></tr><tr><td><code>TARGET_STEAM_ID</code></td><td>要追踪的人STEAM ID</td><td><code>76561198204009266</code></td></tr><tr><td><code>TOKEN</code></td><td>Klei Token 获取方法见下文</td><td><code>pcl-usc^KU_aUxMQjy7^DontStarveTogether^rCT</code><br><code>aArNuSx3tPzjquadxMQ/hs6j+InnOvHPWeO6EW6Y=</code></td></tr><tr><td><code>TO_MAIL</code></td><td>要通知的邮箱</td><td><code>1209626343@qq.com</code></td></tr></tbody></table><p>添加完成后如下图</p><p><img src="/img/article_image/2020/2020-10-07/1.webp"></p><h2 id="获取-TOKEN"><a href="#获取-TOKEN" class="headerlink" title="获取 TOKEN"></a>获取 <code>TOKEN</code></h2><p>打开饥荒联机版，在如下界面的控制台内输入 <code>print(TheFrontEnd:GetAccountManager():GetToken())</code>，然后别关游戏，打开 <code>文档\Klei\DoNotStarveTogether\client_log.txt</code>，在最下面可以找到类似 <code>pcl-usc^KU_aUxMQjy7^DontStarveTogether^rCTaArNuSx3tPzjquadxMQ/hs6j+InnOvHPWeO6EW6Y=</code> 的字段就是 <code>TOKEN</code></p><p>该方法获得的 <code>TOKEN</code> 几小时候后会失效，可以向 Klei 索取永久的 <code>TOKEN</code></p><p><img src="/img/article_image/2020/2020-10-07/2.webp"></p><p>设置好后打开，修改 <code>.github/workflows/main.yml</code>，找到下面的段落，将 <code>#</code> 号去掉即可</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-symbol">on:</span><br><span class="hljs-symbol">  push:</span><br><span class="hljs-symbol">    branches:</span> main<br>  <span class="hljs-meta">#schedule:</span><br>  <span class="hljs-meta">#- cron: <span class="hljs-string">&quot;*/5 * * * *&quot;</span></span><br></code></pre></td></tr></table></figure><p>注意： GitHub Action 免费用户每月只能用 2000 分钟，请调节合适的频率避免免费额度用完，另外如果有服务器的话，可以部署在自己服务器上更方便</p>]]></content>
    
    
    <categories>
      
      <category>游戏</category>
      
      <category>IT</category>
      
      <category>饥荒</category>
      
      <category>Python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>饥荒</tag>
      
      <tag>Python</tag>
      
      <tag>GitHub Actions</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>饥荒『荒野求生』服务器仓库物品统计</title>
    <link href="/repo/"/>
    <url>/repo/</url>
    
    <content type="html"><![CDATA[<p>以下为各个面板仓库全部物品每日统计，点击相应链接进入，方便各位参考（本文通过 Python 自动生成）</p><span id="more"></span><table><thead><tr><th>快速直达</th><th>快速直达</th><th>快速直达</th><th>快速直达</th><th>快速直达</th></tr></thead><tbody><tr><td><a href="/repo/KU_0Z4zqQdK/"><strong>PW peop1e</strong></a></td><td><a href="/repo/KU_0j0lUgfB/"><strong>FlameWielder</strong></a></td><td><a href="/repo/KU_0vPtVfd6/"><strong>󰀍GUYNO7󰀉</strong></a></td><td><a href="/repo/KU_0vPtViDX/"><strong>悍匪Arosy</strong></a></td><td><a href="/repo/KU_0vPtVpg3/"><strong>千层恋爱机器</strong></a></td></tr><tr><td><a href="/repo/KU_1W5BDN1s/"><strong>五块钱彩票中五块</strong></a></td><td><a href="/repo/KU_1_XnblxC/"><strong>Shallen</strong></a></td><td><a href="/repo/KU_3DirnqQs/"><strong>母牛玩双杠󰀏</strong></a></td><td><a href="/repo/KU_3xJ72NY-/"><strong>Ns   󰀮</strong></a></td><td><a href="/repo/KU_4735k2fs/"><strong>󰀈全糖去冰󰀈</strong></a></td></tr><tr><td><a href="/repo/KU_54sjc7tj/"><strong>󰀍想养狗子󰀍</strong></a></td><td><a href="/repo/KU_54sjc9fm/"><strong>大笨蛋超人</strong></a></td><td><a href="/repo/KU_5QNaVE6u/"><strong>󰀍󰀍宝宝巴士󰀍󰀍</strong></a></td><td><a href="/repo/KU_7HUISUCN/"><strong>我怎么什么都打不过</strong></a></td><td><a href="/repo/KU_84TfuZ98/"><strong>隔岸相望</strong></a></td></tr><tr><td><a href="/repo/KU_AiddTVj_/"><strong>乐乐</strong></a></td><td><a href="/repo/KU_BJgEYpJL/"><strong>江月</strong></a></td><td><a href="/repo/KU_B_MTKUxE/"><strong>过热</strong></a></td><td><a href="/repo/KU_CJH79Ex1/"><strong>九月的柿子</strong></a></td><td><a href="/repo/KU_CKFre8uk/"><strong>cnctemar</strong></a></td></tr><tr><td><a href="/repo/KU_Cps0vpxX/"><strong>浮生</strong></a></td><td><a href="/repo/KU_DKafH-iT/"><strong>69年专业刮痧󰀏</strong></a></td><td><a href="/repo/KU_DKafID4K/"><strong>阿菁要没了</strong></a></td><td><a href="/repo/KU_FSLwPz_s/"><strong>不爱吃香菜</strong></a></td><td><a href="/repo/KU_FzX9zgoJ/"><strong>流觞vample</strong></a></td></tr><tr><td><a href="/repo/KU_Gi0-qeGz/"><strong>柿子</strong></a></td><td><a href="/repo/KU_H2AfRqiQ/"><strong>颂恩</strong></a></td><td><a href="/repo/KU_HLLJ0d07/"><strong>轶时</strong></a></td><td><a href="/repo/KU_HQp7BLUP/"><strong>超大的媛媛</strong></a></td><td><a href="/repo/KU_I5Fy6l1n/"><strong>一直游到圣托里尼</strong></a></td></tr><tr><td><a href="/repo/KU_InFvIzFj/"><strong>桥洞底下盖小被</strong></a></td><td><a href="/repo/KU_J9MSPzPQ/"><strong>云</strong></a></td><td><a href="/repo/KU_JWDpJQiF/"><strong>Francis󰀁</strong></a></td><td><a href="/repo/KU_LI3oE5Wv/"><strong>CSJ</strong></a></td><td><a href="/repo/KU_LI3oFT2m/"><strong>bili_58241089225</strong></a></td></tr><tr><td><a href="/repo/KU_MAFS52qP/"><strong>xixi</strong></a></td><td><a href="/repo/KU_MAFS6Dui/"><strong>一克夕阳</strong></a></td><td><a href="/repo/KU_MAFS6p_H/"><strong>黢黑</strong></a></td><td><a href="/repo/KU_OkaLri6v/"><strong>xrj</strong></a></td><td><a href="/repo/KU_P2T7Pk5O/"><strong>幻滅</strong></a></td></tr><tr><td><a href="/repo/KU_PPgpTDhJ/"><strong>臻于至善</strong></a></td><td><a href="/repo/KU_Qvt-jc5x/"><strong>寻寻祁阳</strong></a></td><td><a href="/repo/KU_R14IgItR/"><strong>莫失莫忘</strong></a></td><td><a href="/repo/KU_RR3k3V_q/"><strong>简单</strong></a></td><td><a href="/repo/KU_SFlxT9hI/"><strong>Bing</strong></a></td></tr><tr><td><a href="/repo/KU_SFlxVI2Z/"><strong>糖糖</strong></a></td><td><a href="/repo/KU_SpqLc4D9/"><strong>毛里求斯影帝</strong></a></td><td><a href="/repo/KU_SpqLc6iA/"><strong>ChungLiWang</strong></a></td><td><a href="/repo/KU_UnXy3ua0/"><strong>蓝莓</strong></a></td><td><a href="/repo/KU_VSloxXYc/"><strong>󰀐小宝鸽󰀫</strong></a></td></tr><tr><td><a href="/repo/KU_WCZWON47/"><strong>糖浆</strong></a></td><td><a href="/repo/KU_WfHJqImd/"><strong>Xiaoqi</strong></a></td><td><a href="/repo/KU_WxZEknvn/"><strong>暮雨繁</strong></a></td><td><a href="/repo/KU_XjTVYtQ0/"><strong>大米花</strong></a></td><td><a href="/repo/KU_Zzh0_NMp/"><strong>画枭</strong></a></td></tr><tr><td><a href="/repo/KU_a3ZJpzOT/"><strong>白柠檬</strong></a></td><td><a href="/repo/KU_a7JPNXEU/"><strong>思思</strong></a></td><td><a href="/repo/KU_aUxMQjy7/"><strong>辣椒小皇纸</strong></a></td><td><a href="/repo/KU_bALbfbZi/"><strong>童的翠梅󰀛</strong></a></td><td><a href="/repo/KU_bzmlybNb/"><strong>知道你很急,但你先别急</strong></a></td></tr><tr><td><a href="/repo/KU_c1gvbu_G/"><strong>hualing</strong></a></td><td><a href="/repo/KU_c1gvcLb4/"><strong>莫言</strong></a></td><td><a href="/repo/KU_cuIT10Qb/"><strong>zxx15579</strong></a></td><td><a href="/repo/KU_dNpFmz1P/"><strong>周翊然</strong></a></td><td><a href="/repo/KU_dwt6dUe0/"><strong>Captain_SOAP</strong></a></td></tr><tr><td><a href="/repo/KU_dwt6diSt/"><strong>半存BCHS</strong></a></td><td><a href="/repo/KU_dx7cufjM/"><strong>四四会苟</strong></a></td><td><a href="/repo/KU_ftHAV9Jj/"><strong>栀夏末</strong></a></td><td><a href="/repo/KU_fuW2HrUF/"><strong>阿辰kebike</strong></a></td><td><a href="/repo/KU_kTIVBOUI/"><strong>1497</strong></a></td></tr><tr><td><a href="/repo/KU_nxw0IQCb/"><strong>橙兔</strong></a></td><td><a href="/repo/KU_osFM6h88/"><strong>荒野留守人偶</strong></a></td><td><a href="/repo/KU_pvwb-ZeK/"><strong>󰀛以而󰀢</strong></a></td><td><a href="/repo/KU_qCOtoiX9/"><strong>质数</strong></a></td><td><a href="/repo/KU_rriSvkW-/"><strong>阿猫</strong></a></td></tr><tr><td><a href="/repo/KU_tD6Ygmt8/"><strong>菜的真实</strong></a></td><td><a href="/repo/KU_tD6YgnSY/"><strong>指尖</strong></a></td><td><a href="/repo/KU_tvX4yXh_/"><strong>󰀉星澜󰀉</strong></a></td><td><a href="/repo/KU_ueHYY68t/"><strong>󰀊自毙小子󰀉</strong></a></td><td><a href="/repo/KU_vCuBS5wL/"><strong>小小邓a2</strong></a></td></tr><tr><td><a href="/repo/KU_vCuBSrDs/"><strong>不是残心呀</strong></a></td><td><a href="/repo/KU_wYW0815f/"><strong>3arch</strong></a></td><td><a href="/repo/KU_wZ_k_I7o/"><strong>nie</strong></a></td><td><a href="/repo/KU_wu3hpiQl/"><strong>gold</strong></a></td><td><a href="/repo/KU_wwUugYUo/"><strong>浆果丛</strong></a></td></tr><tr><td><a href="/repo/KU_wwUugdqX/"><strong>󰀍长城守望󰀍</strong></a></td><td><a href="/repo/KU_wyA5g2Y2/"><strong>心中有川</strong></a></td><td><a href="/repo/KU_xI2uplaN/"><strong>YanDi</strong></a></td><td><a href="/repo/KU_xb1LjXqp/"><strong>仅冇旳迴忆</strong></a></td><td><a href="/repo/KU_zDb_qlnD/"><strong>XuZiYi</strong></a></td></tr><tr><td><a href="/repo/KU_zDb_qpaq/"><strong>凯特大魔王</strong></a></td><td></td><td></td><td></td><td></td></tr></tbody></table>]]></content>
    
    
    <categories>
      
      <category>游戏</category>
      
      <category>饥荒</category>
      
    </categories>
    
    
    <tags>
      
      <tag>饥荒</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python CSV 模块读取及写入 CSV 文件</title>
    <link href="/2020/09/pythoncsv/"/>
    <url>/2020/09/pythoncsv/</url>
    
    <content type="html"><![CDATA[<p>Python CSV 模块读取及写入 CSV 文件</p><span id="more"></span><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-comment"># 读取CSV文件的第一行设定为 header</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_csvheader</span>(<span class="hljs-params">filename</span>):<br>    <span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> <span class="hljs-built_in">open</span>(filename + <span class="hljs-string">&#x27;.csv&#x27;</span>, encoding = <span class="hljs-string">&#x27;utf-8&#x27;</span>, errors = <span class="hljs-string">&#x27;ignore&#x27;</span>):<br>        <span class="hljs-keyword">return</span> line.split(<span class="hljs-string">&#x27;,&#x27;</span>)<br><br><span class="hljs-comment"># 读取 csv 文件到字典中</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">read_csvfile_to_dict</span>(<span class="hljs-params">filename</span>):<br>    header = get_csvheader(filename)<br>    thedict = &#123;&#125;<br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(filename + <span class="hljs-string">&#x27;.csv&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>        reader = csv.DictReader(f)<br>        <span class="hljs-keyword">for</span> row <span class="hljs-keyword">in</span> reader:<br>            rowdata = &#123;&#125;<br>            <span class="hljs-keyword">for</span> item <span class="hljs-keyword">in</span> header:<br>                rowdata[item] = row[item]<br>            thedict[<span class="hljs-built_in">len</span>(thedict)] = rowdata<br>    <span class="hljs-keyword">return</span> thedict<br><br><span class="hljs-comment"># 把字典写入 csv 文件中的一行</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">save_dict_to_csvfile</span>(<span class="hljs-params">dict_to_write, filename</span>):<br>    header = get_csvheader(filename)<br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(filename + <span class="hljs-string">&#x27;.csv&#x27;</span>, <span class="hljs-string">&#x27;a&#x27;</span>, encoding = <span class="hljs-string">&#x27;gbk&#x27;</span>, errors = <span class="hljs-string">&#x27;ignore&#x27;</span>, newline = <span class="hljs-string">&#x27;&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>        writer = csv.DictWriter(f, header)<br>        writer.writerow(dict_to_write)<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>IT</category>
      
      <category>Python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Sublime Text 3 插入当前日期及时间</title>
    <link href="/2020/09/sublimetextdate/"/>
    <url>/2020/09/sublimetextdate/</url>
    
    <content type="html"><![CDATA[<p>Sublime Text 3 是我平时最喜欢的 Coding 工具，没有之一，可以通过 Python 来 DIY 编写很多插件</p><span id="more"></span><p>打开 Sublime Text 3，点击菜单栏中 <code>Preferences</code> -&gt; <code>Browser Packages...</code></p><p><img src="/img/article_image/2020/2020-09-09/01.webp"></p><p>会弹出资源管理器，进入 <code>User</code> 文件，新建一个名为 <code>addCurrentTime.py</code> 的文件</p><p>添加以下内容：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">import</span> datetime<br><span class="hljs-keyword">import</span> sublime_plugin<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">AddCurrentTimeCommand</span>(sublime_plugin.TextCommand):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">run</span>(<span class="hljs-params">self, edit</span>):<br>        <span class="hljs-variable language_">self</span>.view.run_command(<span class="hljs-string">&quot;insert_snippet&quot;</span>,<br>            &#123;<br>                <span class="hljs-string">&quot;contents&quot;</span>: <span class="hljs-string">&quot;%s&quot;</span> % datetime.datetime.now().strftime(<span class="hljs-string">&quot;%Y-%m-%d %H:%M:%S&quot;</span>)<br>            &#125;<br>        )<br></code></pre></td></tr></table></figure><p>在 Sublime Text 3 的菜单栏中点击 <code>Preferences</code> -&gt; <code>Key Bindings</code></p><p><img src="/img/article_image/2020/2020-09-09/02.webp"></p><p>在弹出窗口<strong>右边栏</strong>添加以下内容：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs JSON"><span class="hljs-punctuation">[</span><br>    <span class="hljs-punctuation">&#123;</span> <span class="hljs-attr">&quot;keys&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-string">&quot;ctrl+shift+,&quot;</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span> <span class="hljs-attr">&quot;command&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;add_current_time&quot;</span> <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br><span class="hljs-punctuation">]</span><br></code></pre></td></tr></table></figure><p><img src="/img/article_image/2020/2020-09-09/03.webp"></p><p>以后要输入当前日期及时间，按组合键 <code>Ctrl</code> + <code>Shift</code> + <code>,</code>即可</p><p>参考文献：</p><p><a href="https://blog.csdn.net/sshfl_csdn/article/details/46415551">Sublime Text 3 添加插入当前时间_sshfl_csdn的专栏-CSDN博客_sublime新建文件自动导入时间</a></p>]]></content>
    
    
    <categories>
      
      <category>IT</category>
      
      <category>Sublime Text</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Sublime Text</tag>
      
      <tag>Coding</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>利用 Python 爬虫爬取 Pixiv 上的小姐姐</title>
    <link href="/2020/09/crawlingpixiv/"/>
    <url>/2020/09/crawlingpixiv/</url>
    
    <content type="html"><![CDATA[<p>Pixiv 上的小姐姐那么多，手动保存到手断了也保存不完，为什么不利用 Python 爬虫自动帮我们下载呢？</p><span id="more"></span><p>使用本教程前先确定你的本地网络是否能访问 <a href="https://www.pixiv.net/">Pixiv</a></p><h2 id="项目的文件目录"><a href="#项目的文件目录" class="headerlink" title="项目的文件目录"></a>项目的文件目录</h2><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs 1c">.                       <span class="hljs-meta"># 项目根目录</span><br><span class="hljs-string">|-- Folder1             # 文件夹名字可以自定义 一般为画师的名字</span><br>    <span class="hljs-string">|-- 6957790.txt     # 文件名为画师的主页 ID</span><br><span class="hljs-string">|-- Folder2             # 文件夹名字可以自定义 一般为画师的名字</span><br>    <span class="hljs-string">|-- 1480420.txt     # 文件名为画师的主页 ID</span><br><span class="hljs-string">|-- Folder3             # 文件夹名字可以自定义 一般为画师的名字</span><br>    <span class="hljs-string">|-- 28440744.txt    # 文件名为画师的主页 ID</span><br><span class="hljs-string">|-- Pixiv.py            # Python 爬虫脚本</span><br></code></pre></td></tr></table></figure><h2 id="爬虫代码"><a href="#爬虫代码" class="headerlink" title="爬虫代码"></a>爬虫代码</h2><p><code>pixiv.py</code> 的内容如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-comment"># -*- coding:utf-8*-</span><br><br><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">请先安装好相应的 Python 模块</span><br><span class="hljs-string">pip install requests bs4 lxml</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><br><br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">from</span> bs4 <span class="hljs-keyword">import</span> BeautifulSoup<br><span class="hljs-keyword">import</span> lxml<br><span class="hljs-keyword">import</span> re<br><span class="hljs-keyword">from</span> glob <span class="hljs-keyword">import</span> glob<br><span class="hljs-keyword">import</span> os<br><br><br>headers = &#123;<br>    <span class="hljs-string">&#x27;cookie&#x27;</span>: <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-comment"># 这里的Cookie改为你的Cookie</span><br>    <span class="hljs-string">&#x27;user-agent&#x27;</span>: <span class="hljs-string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.116 Safari/537.36&#x27;</span>,<br>&#125;<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_pic_list</span>(<span class="hljs-params">num</span>):<br>    url = <span class="hljs-string">&#x27;https://www.pixiv.net/ajax/user/%s/profile/all?lang=zh&#x27;</span> % num<br>    r = requests.get(url, headers = headers)<br>    pic_list = re.findall(<span class="hljs-string">&#x27;&quot;(\d+?)&quot;:null&#x27;</span>, r.text)<br>    <span class="hljs-keyword">return</span> pic_list<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_file_list</span>():<br>    temp = glob(<span class="hljs-string">&#x27;*&#x27;</span>)<br>    <span class="hljs-keyword">for</span> item <span class="hljs-keyword">in</span> temp:<br>        <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;.txt&#x27;</span> <span class="hljs-keyword">in</span> item:<br>            temp.remove(item)<br>    file_list = [name.split(<span class="hljs-string">&#x27;.&#x27;</span>)[<span class="hljs-number">0</span>] <span class="hljs-keyword">for</span> name <span class="hljs-keyword">in</span> temp]<br>    <span class="hljs-keyword">return</span> file_list<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">download</span>(<span class="hljs-params">num</span>):<br>    pic_list = get_pic_list(num)<br>    file_list = get_file_list()<br>    <span class="hljs-keyword">for</span> pic <span class="hljs-keyword">in</span> pic_list:<br>        <span class="hljs-keyword">if</span> pic <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> file_list:<br>            url = <span class="hljs-string">&#x27;https://www.pixiv.net/artworks/%s&#x27;</span> % pic<br>            r = requests.get(url, headers = headers)<br>            result = re.search(<span class="hljs-string">&#x27;&quot;original&quot;:&quot;(.+?)&quot;&#x27;</span>, r.text)<br>            <span class="hljs-keyword">if</span> result:<br>                download_url = result.group(<span class="hljs-number">1</span>)<br>                suffix = download_url.rsplit(<span class="hljs-string">&#x27;/&#x27;</span>, <span class="hljs-number">1</span>)[-<span class="hljs-number">1</span>].rsplit(<span class="hljs-string">&#x27;.&#x27;</span>, <span class="hljs-number">1</span>)[-<span class="hljs-number">1</span>]<br>                h = &#123;<br>                    <span class="hljs-string">&#x27;accept&#x27;</span>: <span class="hljs-string">&#x27;text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9&#x27;</span>,<br>                    <span class="hljs-string">&#x27;accept-encoding&#x27;</span>: <span class="hljs-string">&#x27;gzip, deflate, br&#x27;</span>,<br>                    <span class="hljs-string">&#x27;accept-language&#x27;</span>: <span class="hljs-string">&#x27;zh-CN,zh;q=0.9&#x27;</span>,<br>                    <span class="hljs-string">&#x27;cache-control&#x27;</span>: <span class="hljs-string">&#x27;max-age=0&#x27;</span>,<br>                    <span class="hljs-string">&#x27;dnt&#x27;</span>: <span class="hljs-string">&#x27;1&#x27;</span>,<br>                    <span class="hljs-string">&#x27;if-modified-since&#x27;</span>: <span class="hljs-string">&#x27;Mon, 09 Sep 2019 23:00:01 GMT&#x27;</span>,<br>                    <span class="hljs-string">&#x27;referer&#x27;</span>: <span class="hljs-string">&#x27;https://www.pixiv.net/artworks/76712185&#x27;</span>,<br>                    <span class="hljs-string">&#x27;sec-fetch-dest&#x27;</span>: <span class="hljs-string">&#x27;document&#x27;</span>,<br>                    <span class="hljs-string">&#x27;sec-fetch-mode&#x27;</span>: <span class="hljs-string">&#x27;navigate&#x27;</span>,<br>                    <span class="hljs-string">&#x27;sec-fetch-site&#x27;</span>: <span class="hljs-string">&#x27;none&#x27;</span>,<br>                    <span class="hljs-string">&#x27;sec-fetch-user&#x27;</span>: <span class="hljs-string">&#x27;?1&#x27;</span>,<br>                    <span class="hljs-string">&#x27;upgrade-insecure-requests&#x27;</span>: <span class="hljs-string">&#x27;1&#x27;</span>,<br>                    <span class="hljs-string">&#x27;user-agent&#x27;</span>: <span class="hljs-string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.116 Safari/537.36&#x27;</span>,<br>                &#125;<br>                s = requests.get(download_url, headers = h)<br>                <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(pic + <span class="hljs-string">&#x27;.&#x27;</span> + suffix, <span class="hljs-string">&#x27;wb&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>                    <span class="hljs-comment">#print(s.text)</span><br>                    f.write(s.content)<br>                    <span class="hljs-built_in">print</span>(pic)<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">main</span>():<br>    filenames = os.listdir()<br>    filenames.remove(<span class="hljs-string">&#x27;pixiv.py&#x27;</span>)<br>    cwd = os.getcwd()<br>    <span class="hljs-keyword">for</span> filename <span class="hljs-keyword">in</span> filenames:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;切换到%s&#x27;</span> % filename)<br>        os.chdir(cwd + <span class="hljs-string">&#x27;\\&#x27;</span> + filename)<br>        num = glob(<span class="hljs-string">&quot;*.txt&quot;</span>)[<span class="hljs-number">0</span>]<br>        num = re.sub(<span class="hljs-string">&#x27;.txt&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>, num)<br>        download(num)<br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    main()<br></code></pre></td></tr></table></figure><h2 id="Cookie-的获取方式"><a href="#Cookie-的获取方式" class="headerlink" title="Cookie 的获取方式"></a>Cookie 的获取方式</h2><p>打开 Chrome 浏览器，按 <code>F12</code>，打开 <code>DevTools</code>，切换到 <code>Network</code> 选项卡</p><p><img src="/img/article_image/2020/2020-09-08/01.webp"></p><p>在地址栏中输入 <a href="https://www.pixiv.net/">Pixiv</a> 的网址打开并登录，待加载完成后，如下图在 <code>DevTools</code> 中找到 <code>www.pixiv.net</code>并点击</p><p><img src="/img/article_image/2020/2020-09-08/02.webp"></p><p>切换到 <code>Headers</code> 选项卡</p><p><img src="/img/article_image/2020/2020-09-08/03.webp"></p><p>在 <code>Request Headers</code> 栏中找到 <code>cookie</code> 项，把 <code>:</code> 后的内容填入上面脚本的空引号中即可</p><p><img src="/img/article_image/2020/2020-09-08/04.webp"></p><h2 id="设定要爬取的画师"><a href="#设定要爬取的画师" class="headerlink" title="设定要爬取的画师"></a>设定要爬取的画师</h2><p>上面项目结构的 <code>Folder1</code>， <code>Folder2</code>， <code>Folder3</code> 的名字都可以自行修改，可以继续平行添加其他目录，也可以删除目录</p><p>假如我们想爬取 <code>火加減よしお</code> 的所有作品，那么在 Pixiv 里搜索 <code>火加減よしお</code>，进入 ta 的主页，网址是 <code>https://www.pixiv.net/users/29925927</code>，那么他的 <code>ID</code> 就是 <code>29925927</code></p><p>我们将 <code>Folder1</code> 重命名为：<code>火加減よしお</code>，在删除该目录下的所有以 <code>txt</code> 为后缀名的文件，新建一个文本文件，重命名为 <code>29925927.txt</code>即可</p><p>如果还想添加其他画师，重复上面的步骤即可</p><h2 id="爬取图片"><a href="#爬取图片" class="headerlink" title="爬取图片"></a>爬取图片</h2><p>当设定完要爬取的画师后，运行 <code>pixiv.py</code> 即可自动下载对应画师的作品到相应的文件夹</p><h2 id="获取画师的新图片"><a href="#获取画师的新图片" class="headerlink" title="获取画师的新图片"></a>获取画师的新图片</h2><p>本脚本已经带有获取画师新图片的功能，重复运行脚本，即可查看本地的图片库，把没有的照片自动爬取下来</p><p>注意：<code>Cookie</code> 只能维持一段时间，过段时间运行代码前，重复 <a href="/2020/09/crawlingpixiv/#Cookie-%E7%9A%84%E8%8E%B7%E5%8F%96%E6%96%B9%E5%BC%8F">Cookie 的获取方式</a> 的步骤即可</p>]]></content>
    
    
    <categories>
      
      <category>IT</category>
      
      <category>Python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>爬虫</tag>
      
      <tag>Pixiv</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>利用 Python 发送邮件</title>
    <link href="/2020/08/pythonemail/"/>
    <url>/2020/08/pythonemail/</url>
    
    <content type="html"><![CDATA[<p>利用 Python 的内置 SMTP 模块发送邮件，可以配合其他功能（如天气预报等）一起使用</p><span id="more"></span><p>这里，只讲解一下发送邮件的方法，代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/python3</span><br><span class="hljs-comment"># -*- coding:utf-8*-</span><br><br><span class="hljs-keyword">from</span> email.mime.text <span class="hljs-keyword">import</span> MIMEText<br><span class="hljs-keyword">from</span> email.header <span class="hljs-keyword">import</span> Header<br><span class="hljs-keyword">from</span> smtplib <span class="hljs-keyword">import</span> SMTPException<br><span class="hljs-keyword">from</span> smtplib <span class="hljs-keyword">import</span> SMTP_SSL<br><br>host_server = <span class="hljs-string">&#x27;smtp.qq.com&#x27;</span><br>sender = <span class="hljs-string">&#x27;120*****43&#x27;</span> <span class="hljs-comment"># 填写你的QQ号</span><br>password = <span class="hljs-string">&#x27;asd**********spf&#x27;</span> <span class="hljs-comment"># QQ邮箱SMPT授权码，注意，不是QQ邮箱的登录密码</span><br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">SendEmail</span>(<span class="hljs-params">receiver, mail_title, mail_content</span>):<br>    <span class="hljs-keyword">try</span>:<br>        smtp = SMTP_SSL(host_server)<br>        smtp.set_debuglevel(<span class="hljs-number">0</span>) <span class="hljs-comment"># 参数值为1表示开启调试模式，参数值为0关闭调试模式</span><br>        smtp.ehlo(host_server)<br>        smtp.login(sender, password)<br><br>        msg = MIMEText(mail_content, <span class="hljs-string">&quot;plain&quot;</span>, <span class="hljs-string">&#x27;utf-8&#x27;</span>)<br>        msg[<span class="hljs-string">&quot;Subject&quot;</span>] = Header(mail_title, <span class="hljs-string">&#x27;utf-8&#x27;</span>)<br>        msg[<span class="hljs-string">&quot;From&quot;</span>] = sender + <span class="hljs-string">&#x27;@qq.com&#x27;</span><br>        msg[<span class="hljs-string">&quot;To&quot;</span>] = receiver<br>        smtp.sendmail(sender + <span class="hljs-string">&#x27;@qq.com&#x27;</span>, receiver, msg.as_string())<br>        smtp.quit()<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;邮件 %s 发送成功&#x27;</span> % mail_title)<br>    <span class="hljs-keyword">except</span> SMTPException <span class="hljs-keyword">as</span> e:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Error: &#x27;</span>, e)<br></code></pre></td></tr></table></figure><p>要发送邮件只要调用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">SendEmail(<span class="hljs-string">&#x27;67*****22@qq.com&#x27;</span>, <span class="hljs-string">&#x27;标题&#x27;</span>, <span class="hljs-string">&#x27;内容&#x27;</span>) <span class="hljs-comment"># 三个参数分别是收信人的邮箱(可以不是QQ邮箱)，邮件标题和邮件内容</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>IT</category>
      
      <category>Python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>Email</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>利用 frp 进行内网穿透</title>
    <link href="/2020/08/frp/"/>
    <url>/2020/08/frp/</url>
    
    <content type="html"><![CDATA[<p>frp 是一个专注于内网穿透的高性能的反向代理应用，支持 TCP、UDP、HTTP、HTTPS 等多种协议。可以将内网服务以安全、便捷的方式通过具有公网 IP 节点的中转暴露到公网。</p><span id="more"></span><p>上一篇文章 <a href="/2020/08/openvpnfordst">利用 OpenVPN 加速饥荒服务器</a> 讲解了如何利用 OpenVPN 加速饥荒服务器，但是还是遗留了两个问题：</p><ul><li>连接 OpenVPN 后，如何再用 SSH 访问物理主机</li><li>无法通过 IP 直连进入我们的饥荒服务器</li></ul><p>frp 可以帮我们解决这两个问题</p><h2 id="下载-frp"><a href="#下载-frp" class="headerlink" title="下载 frp"></a>下载 frp</h2><p>分别在物理主机和云服务器上下载 frp，代码如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> ~<br>wget https://github.com/fatedier/frp/releases/download/v0.33.0/frp_0.33.0_linux_arm64.tar.gz<br>tar xzf frp_0.33.0_linux_arm64.tar.gz<br><span class="hljs-built_in">mv</span> frp_0.33.0_linux_arm64 frp<br></code></pre></td></tr></table></figure><h2 id="修改云服务器上的配置文件"><a href="#修改云服务器上的配置文件" class="headerlink" title="修改云服务器上的配置文件"></a>修改云服务器上的配置文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">nano ~/frp/frps.ini<br></code></pre></td></tr></table></figure><p>删除里面的内容，修改为下面的内容</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs INI"><span class="hljs-section">[common]</span><br><span class="hljs-attr">bind_port</span> = <span class="hljs-number">3380</span><br><span class="hljs-attr">bind_udp_port</span> = <span class="hljs-number">3381</span><br><span class="hljs-attr">vhost_http_port</span> = <span class="hljs-number">3382</span><br><span class="hljs-attr">vhost_https_port</span> = <span class="hljs-number">3383</span><br><span class="hljs-attr">dashboard_port</span> = <span class="hljs-number">3333</span><br><span class="hljs-attr">dashboard_user</span> = admin<br><span class="hljs-attr">dashboard_pwd</span> = admin<br><span class="hljs-comment"># privilege_token 自己随意设置</span><br><span class="hljs-attr">privilege_token</span> = <span class="hljs-number">123456789</span><br></code></pre></td></tr></table></figure><h2 id="运行云服务器上的-frp"><a href="#运行云服务器上的-frp" class="headerlink" title="运行云服务器上的 frp"></a>运行云服务器上的 frp</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">screen -S frp<br><span class="hljs-built_in">cd</span> ~/frp<br>./frps -c ./frps.ini<br></code></pre></td></tr></table></figure><p>然后按 <code>Ctrl</code> + <code>A</code>，再按 <code>D</code> 退出 screen 即可</p><h2 id="修改云服务器上的配置文件-1"><a href="#修改云服务器上的配置文件-1" class="headerlink" title="修改云服务器上的配置文件"></a>修改云服务器上的配置文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">nano ~/frp/frpc.ini<br></code></pre></td></tr></table></figure><p>删除里面的内容，修改为下面的内容</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs INI"><span class="hljs-section">[common]</span><br><span class="hljs-comment"># server_addr 改为云服务器的公网 IP</span><br><span class="hljs-attr">server_addr</span> = <span class="hljs-number">1.1</span>.<span class="hljs-number">1.1</span><br><span class="hljs-attr">server_port</span> = <span class="hljs-number">3380</span><br><span class="hljs-comment"># privilege_token 和上面设置的 privilege_token 一致即可</span><br><span class="hljs-attr">privilege_token</span> = <span class="hljs-number">123456789</span><br><span class="hljs-attr">login_fail_exit</span> = <span class="hljs-literal">false</span><br><br><span class="hljs-comment"># []内的名字随意 便于识别即可</span><br><span class="hljs-section">[ssh]</span><br><span class="hljs-attr">type</span> = tcp<br><span class="hljs-attr">local_ip</span> = <span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span><br><span class="hljs-comment"># 这里发转本地的 22 端口 到远程(即云服务器上)的 4022 端口</span><br><span class="hljs-attr">local_port</span> = <span class="hljs-number">22</span><br><span class="hljs-attr">remote_port</span> = <span class="hljs-number">4022</span><br><br><span class="hljs-comment"># []内的名字随意 不能重复</span><br><span class="hljs-section">[dst1]</span><br><span class="hljs-comment"># 饥荒使用 udp协议传输</span><br><span class="hljs-attr">type</span> = udp<br><span class="hljs-attr">local_ip</span> = <span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span><br><span class="hljs-comment"># local_port 和 remote_port 保持一致，是饥荒服务器每个世界的端口，默认地上世界的端口是 10999，根据具体情况修改</span><br><span class="hljs-attr">local_port</span> = <span class="hljs-number">10999</span> <br><span class="hljs-attr">remote_port</span> = <span class="hljs-number">10999</span><br><br><span class="hljs-comment"># []内的名字随意 不能重复</span><br><span class="hljs-section">[dst2]</span><br><span class="hljs-comment"># 饥荒使用 udp协议传输</span><br><span class="hljs-attr">type</span> = udp<br><span class="hljs-attr">local_ip</span> = <span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span><br><span class="hljs-comment"># local_port 和 remote_port 保持一致，是饥荒服务器每个世界的端口，默认地洞的端口是 10998，根据具体情况修改</span><br><span class="hljs-attr">local_port</span> = <span class="hljs-number">10998</span><br><span class="hljs-attr">remote_port</span> = <span class="hljs-number">10998</span><br></code></pre></td></tr></table></figure><p>如果是多层世界的话，根据具体情况酌情添加配置</p><h2 id="运行物理主机上的-frp"><a href="#运行物理主机上的-frp" class="headerlink" title="运行物理主机上的 frp"></a>运行物理主机上的 frp</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">screen -S frp<br><span class="hljs-built_in">cd</span> ~/frp<br>./frpc -c ./frpc.ini<br></code></pre></td></tr></table></figure><p>然后按 <code>Ctrl</code> + <code>A</code>，再按 <code>D</code> 退出 screen 即可</p><h2 id="用-SSH-连接你的物理主机"><a href="#用-SSH-连接你的物理主机" class="headerlink" title="用 SSH 连接你的物理主机"></a>用 SSH 连接你的物理主机</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh -p 4022 用户名@云服务器IP<br></code></pre></td></tr></table></figure><p>注意，这里 IP 是云服务器的 IP，即通过云服务器的 IP 连接物理主机。因为上面我们将物理主机的 22 端口转发的云服务器上的 4022 端口了。</p><h2 id="查看-frp-状态"><a href="#查看-frp-状态" class="headerlink" title="查看 frp 状态"></a>查看 frp 状态</h2><p>浏览器打开 <code>1.1.1.1:3333</code> 即可参看 frp 状态</p><blockquote><p>将 <code>1.1.1.1</code> 改为云服务器的公网 IP 即可</p></blockquote><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><a href="https://github.com/fatedier/frp">fatedier&#x2F;frp: A fast reverse proxy to help you expose a local server behind a NAT or firewall to the internet.</a></p>]]></content>
    
    
    <categories>
      
      <category>游戏</category>
      
      <category>IT</category>
      
      <category>饥荒</category>
      
      <category>网络代理</category>
      
    </categories>
    
    
    <tags>
      
      <tag>饥荒</tag>
      
      <tag>内网穿透</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>利用 OpenVPN 加速饥荒服务器</title>
    <link href="/2020/08/openvpnfordst/"/>
    <url>/2020/08/openvpnfordst/</url>
    
    <content type="html"><![CDATA[<p><strong>郑重声明：本文仅用于搭建饥荒游戏服务器用，禁止用于任何违反国家法律的用途！</strong></p><span id="more"></span><p>开饥荒服务器1年多以来，在服务器的开销上已有 ￥3000 多，足以我买一台物理主机来做饥荒服务器了。接下来几个月，手头上的服务器也要陆续到期了，就趁着这个机会买个物理主机搭服务器吧。</p><p>但是，物理主机有个致命的缺点就是网络，不同运营商网络的玩家或者不同地区的玩家连接延迟参差不齐。</p><p>在封锁和时光档服主小水的指点下，我摸索了一套利用 OpenVPN 加速本地物理主机的方法，让小伙伴们连接不再卡顿。</p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ul><li>云服务器<br>  云服务器是用来加速你的物理主机的，配置不重要，重要的是带宽，这决定了你的玩家数。一般1m带宽可以带4-6个玩家。</li><li>物理主机</li><li>OpenVPN一键脚本<br>  <a href="https://github.com/Nyr/openvpn-install">openvpn-install</a></li></ul><p>云服务器和物理主机我安装的都是 Ubuntu Server 18.04 系统。</p><h2 id="云服务器部分"><a href="#云服务器部分" class="headerlink" title="云服务器部分"></a>云服务器部分</h2><h3 id="1-安装-Git"><a href="#1-安装-Git" class="headerlink" title="1. 安装 Git"></a>1. 安装 Git</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> apt update<br><span class="hljs-built_in">sudo</span> apt install git<br></code></pre></td></tr></table></figure><h3 id="2-克隆-OpenVPN-一键脚本的仓库"><a href="#2-克隆-OpenVPN-一键脚本的仓库" class="headerlink" title="2. 克隆 OpenVPN 一键脚本的仓库"></a>2. 克隆 OpenVPN 一键脚本的仓库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/Nyr/openvpn-install.git<br></code></pre></td></tr></table></figure><h3 id="3-运行一键脚本"><a href="#3-运行一键脚本" class="headerlink" title="3.运行一键脚本"></a>3.运行一键脚本</h3><p>执行下面三行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> openvpn-install<br><span class="hljs-built_in">chmod</span> +x openvpn-install.sh<br><span class="hljs-built_in">sudo</span> ./openvpn-install.sh<br></code></pre></td></tr></table></figure><p>运行脚本后会看到：</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">Welcome <span class="hljs-keyword">to</span> this OpenVPN road warrior installer!<br><br>This <span class="hljs-keyword">server</span> <span class="hljs-keyword">is</span> behind NAT. What <span class="hljs-keyword">is</span> the <span class="hljs-built_in">public</span> IPv4 address <span class="hljs-keyword">or</span> hostname?<br><span class="hljs-built_in">Public</span> IPv4 address / hostname [<span class="hljs-number">49.235</span><span class="hljs-number">.180</span><span class="hljs-number">.43</span>]:<br></code></pre></td></tr></table></figure><p>直接回车</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs css">Which protocol should OpenVPN <span class="hljs-selector-tag">use</span>?<br>   <span class="hljs-number">1</span>) UDP (recommended)<br>   <span class="hljs-number">2</span>) TCP<br>Protocol <span class="hljs-selector-attr">[1]</span>:<br></code></pre></td></tr></table></figure><p>我们按默认的 UDP 模式，也直接回车</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros">What<span class="hljs-built_in"> port </span>should OpenVPN listen <span class="hljs-keyword">to</span>?<span class="hljs-built_in"></span><br><span class="hljs-built_in">Port </span>[1194]:<br></code></pre></td></tr></table></figure><p>端口也默认，直接回车</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs less"><span class="hljs-selector-tag">Select</span> <span class="hljs-selector-tag">a</span> <span class="hljs-selector-tag">DNS</span> <span class="hljs-selector-tag">server</span> <span class="hljs-selector-tag">for</span> <span class="hljs-selector-tag">the</span> <span class="hljs-selector-tag">clients</span>:<br>   <span class="hljs-number">1</span>) <span class="hljs-selector-tag">Current</span> <span class="hljs-selector-tag">system</span> <span class="hljs-selector-tag">resolvers</span><br>   <span class="hljs-number">2</span>) <span class="hljs-selector-tag">Google</span><br>   <span class="hljs-number">3</span>) <span class="hljs-number">1.1</span><span class="hljs-selector-class">.1</span><span class="hljs-selector-class">.1</span><br>   <span class="hljs-number">4</span>) <span class="hljs-selector-tag">OpenDNS</span><br>   <span class="hljs-number">5</span>) <span class="hljs-selector-tag">Quad9</span><br>   <span class="hljs-number">6</span>) <span class="hljs-selector-tag">AdGuard</span><br><span class="hljs-selector-tag">DNS</span> <span class="hljs-selector-tag">server</span> <span class="hljs-selector-attr">[1]</span>:<br></code></pre></td></tr></table></figure><p>DNS 也默认，直接回车</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">Enter <span class="hljs-keyword">a</span> name <span class="hljs-keyword">for</span> <span class="hljs-keyword">the</span> <span class="hljs-keyword">first</span> client:<br>Name [client]:<br></code></pre></td></tr></table></figure><p>客户端配置文件名也默认，直接回车</p><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs delphi">OpenVPN installation <span class="hljs-keyword">is</span> ready <span class="hljs-keyword">to</span> <span class="hljs-keyword">begin</span>.<br>Press any key <span class="hljs-keyword">to</span> <span class="hljs-keyword">continue</span>...<br></code></pre></td></tr></table></figure><p>直接回车安装，看到下面的提示，说明安装完成，配置文件在 <code>/home/ubuntu/client.ovpn</code>，将它下载物理主机上</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs axapta">Finished!<br><br>The <span class="hljs-keyword">client</span> configuration <span class="hljs-keyword">is</span> available <span class="hljs-keyword">in</span>: /home/ubuntu/<span class="hljs-keyword">client</span>.ovpn<br>New clients can be added <span class="hljs-keyword">by</span> running <span class="hljs-keyword">this</span> script again.<br></code></pre></td></tr></table></figure><h2 id="物理主机部分"><a href="#物理主机部分" class="headerlink" title="物理主机部分"></a>物理主机部分</h2><blockquote><p>Windows 主机的话方法很简单，官网下载 OpenVPN 客户端，傻瓜式操作</p></blockquote><p>将 <code>client.ovpn</code> 放到你主文件夹内，即 <code>/home/用户名/</code></p><h3 id="1-安装-OpenVPN-和-screen"><a href="#1-安装-OpenVPN-和-screen" class="headerlink" title="1. 安装 OpenVPN 和 screen"></a>1. 安装 OpenVPN 和 screen</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> apt update<br><span class="hljs-built_in">sudo</span> apt install openvpn screen<br></code></pre></td></tr></table></figure><h3 id="2-修改配置文件"><a href="#2-修改配置文件" class="headerlink" title="2. 修改配置文件"></a>2. 修改配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">nano ~/client.ovpn<br></code></pre></td></tr></table></figure><p>在最下面添加下面三行内容</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs vim">script-security <span class="hljs-number">2</span><br><span class="hljs-keyword">up</span> /etc/openvpn/<span class="hljs-keyword">update</span>-resolv-<span class="hljs-keyword">conf</span><br>down /etc/openvpn/<span class="hljs-keyword">update</span>-resolv-<span class="hljs-keyword">conf</span><br></code></pre></td></tr></table></figure><p>保存退出</p><h3 id="2-开启-OpenVPN"><a href="#2-开启-OpenVPN" class="headerlink" title="2.开启 OpenVPN"></a>2.开启 OpenVPN</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">screen -S openvpn<br>openvpn --config ~/client.ovpn<br></code></pre></td></tr></table></figure><p>然后按 <code>Ctrl</code> + <code>A</code>，再按 <code>D</code> 退出 screen 即可</p><h2 id="运行饥荒服务器"><a href="#运行饥荒服务器" class="headerlink" title="运行饥荒服务器"></a>运行饥荒服务器</h2><p>这部分具体看我博客的其他文章</p><h2 id="后续工作"><a href="#后续工作" class="headerlink" title="后续工作"></a>后续工作</h2><p>详见 <a href="/2020/08/frp">利用 frp 进行内网穿透</a></p><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><a href="https://github.com/Nyr/openvpn-install">Nyr&#x2F;openvpn-install: OpenVPN road warrior installer for Ubuntu, Debian, CentOS and Fedora</a><br><a href="https://openvpn.net/vpn-server-resources/connecting-to-access-server-with-linux/">Linux Connection Guide For OpenVPN Access Server | OpenVPN</a><br><a href="https://www.codewoody.com/posts/38823/">Linux下OpenVPN客户端配置 | 治部少辅</a></p>]]></content>
    
    
    <categories>
      
      <category>游戏</category>
      
      <category>IT</category>
      
      <category>饥荒</category>
      
      <category>网络代理</category>
      
    </categories>
    
    
    <tags>
      
      <tag>饥荒</tag>
      
      <tag>OpenVPN</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>R 语言：缺失数据的多重插补</title>
    <link href="/2020/07/rmultipleimputation/"/>
    <url>/2020/07/rmultipleimputation/</url>
    
    <content type="html"><![CDATA[<p>多重插补 (Mutiple Imputation, MI) 是一种应对无反应误差 (nonresponse bias) 的方法，即当人们无法对调查做出回应时，会丢失研究数据。将创建同一数据集的多个版本，然后将其组合以形成“最佳”值。</p><span id="more"></span><p>临床资料的收集过程中，很难收到完美的数据。对于缺失数据，删除相应的病人或者相应的变量是一种备择方案，但是缺点显而易见。因而，用多重插补方法来填补缺失数据就比较适合。</p><p>多重插补通过计算几个不同的选项来缩小关于缺失值的不确定性。 将创建同一数据集的多个版本，然后将其组合以形成最佳值。</p><p>代码如下：</p><p>生成 5 份插补数据，历遍 5 次</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment"># 加载包</span><br>library<span class="hljs-punctuation">(</span><span class="hljs-string">&#x27;mice&#x27;</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 导入csv文件</span><br>data <span class="hljs-operator">&lt;-</span> read.csv<span class="hljs-punctuation">(</span><span class="hljs-string">&#x27;origin.csv&#x27;</span><span class="hljs-punctuation">,</span> sep<span class="hljs-operator">=</span><span class="hljs-string">&#x27;,&#x27;</span><span class="hljs-punctuation">,</span> header<span class="hljs-operator">=</span><span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 插补 这里要比较久</span><br>imputed_Data <span class="hljs-operator">&lt;-</span> mice<span class="hljs-punctuation">(</span>data<span class="hljs-punctuation">,</span> seed<span class="hljs-operator">=</span><span class="hljs-number">826</span><span class="hljs-punctuation">,</span> method<span class="hljs-operator">=</span><span class="hljs-string">&#x27;pmm&#x27;</span><span class="hljs-punctuation">)</span> <span class="hljs-comment">#  默认 m=5, maxit=50</span><br><br><span class="hljs-comment"># 提取插补完成的数据</span><br>completeData <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br><span class="hljs-keyword">for</span> <span class="hljs-punctuation">(</span>i <span class="hljs-keyword">in</span> <span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-number">5</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">&#123;</span><br>    completeData<span class="hljs-punctuation">[</span>i<span class="hljs-punctuation">]</span> <span class="hljs-operator">&lt;-</span> mice<span class="hljs-operator">::</span>complete<span class="hljs-punctuation">(</span>imputed_Data<span class="hljs-punctuation">,</span> i<span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">&#125;</span><br><br><span class="hljs-comment"># 写入文件</span><br><span class="hljs-keyword">for</span> <span class="hljs-punctuation">(</span>i <span class="hljs-keyword">in</span> <span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-number">5</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">&#123;</span><br>    write.csv<span class="hljs-punctuation">(</span>completeData<span class="hljs-punctuation">[</span>i<span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span> paste<span class="hljs-punctuation">(</span><span class="hljs-string">&#x27;completeData&#x27;</span><span class="hljs-punctuation">,</span> i<span class="hljs-punctuation">,</span> <span class="hljs-string">&#x27;.csv&#x27;</span><span class="hljs-punctuation">,</span>sep<span class="hljs-operator">=</span><span class="hljs-string">&#x27;&#x27;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> row.names<span class="hljs-operator">=</span><span class="hljs-literal">FALSE</span><span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>生成 1 份插补数据，历遍 20 次</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment"># 加载包</span><br>library<span class="hljs-punctuation">(</span><span class="hljs-string">&#x27;mice&#x27;</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 导入csv文件</span><br>data <span class="hljs-operator">&lt;-</span> read.csv<span class="hljs-punctuation">(</span><span class="hljs-string">&#x27;origin.csv&#x27;</span><span class="hljs-punctuation">,</span> sep<span class="hljs-operator">=</span><span class="hljs-string">&#x27;,&#x27;</span><span class="hljs-punctuation">,</span> header<span class="hljs-operator">=</span><span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 插补 这里要比较久</span><br>imputed_Data <span class="hljs-operator">&lt;-</span> mice<span class="hljs-punctuation">(</span>data<span class="hljs-punctuation">,</span> seed<span class="hljs-operator">=</span><span class="hljs-number">826</span><span class="hljs-punctuation">,</span> method<span class="hljs-operator">=</span><span class="hljs-string">&#x27;pmm&#x27;</span><span class="hljs-punctuation">,</span> m<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span> maxit<span class="hljs-operator">=</span><span class="hljs-number">20</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 提取插补完成的数据</span><br>completeData <span class="hljs-operator">&lt;-</span> mice<span class="hljs-operator">::</span>complete<span class="hljs-punctuation">(</span>imputed_Data<span class="hljs-punctuation">,</span> <span class="hljs-number">1</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 写入文件</span><br>write.csv<span class="hljs-punctuation">(</span>completeData<span class="hljs-punctuation">,</span> <span class="hljs-string">&#x27;completeData.csv&#x27;</span><span class="hljs-punctuation">,</span> row.names<span class="hljs-operator">=</span><span class="hljs-literal">FALSE</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>IT</category>
      
      <category>R</category>
      
      <category>科研</category>
      
      <category>数据分析</category>
      
    </categories>
    
    
    <tags>
      
      <tag>R</tag>
      
      <tag>数据分析</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python 中 map、filter、reduce 和 zip 函数的用法</title>
    <link href="/2020/07/pythonmap/"/>
    <url>/2020/07/pythonmap/</url>
    
    <content type="html"><![CDATA[<p>Python 自带模块的数据结构屈指可数，list是一个随时都在用的数据结构，对list进行操作python内置了几个函数对python的list进行操作时候非常方便。</p><span id="more"></span><p>本文转载至<a href="https://yangfangs.github.io/2017/08/23/python-map-zip-filter-reduce/">小小羊</a></p><h2 id="map-函数——作用于list每一个元素"><a href="#map-函数——作用于list每一个元素" class="headerlink" title="map()函数——作用于list每一个元素"></a>map()函数——作用于list每一个元素</h2><p>map()是 Python 内置的高阶函数，它接收一个函数 f() 和一个 list，并通过把函数 f 依次作用在 list 的每个元素上，得到一个新的 list 并返回。(这个函数与 R 中的 lapply 非常相似)</p><p>用法：<code>map(function, sequence)</code></p><h3 id="轻松转换-list-中元素类型："><a href="#轻松转换-list-中元素类型：" class="headerlink" title="轻松转换 list 中元素类型："></a>轻松转换 list 中元素类型：</h3><p>例如 chr 类型转换成 int</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs Python">l = [<span class="hljs-string">&#x27;1&#x27;</span>,<span class="hljs-string">&#x27;2&#x27;</span>,<span class="hljs-string">&#x27;3&#x27;</span>,<span class="hljs-string">&#x27;4&#x27;</span>]<br><span class="hljs-built_in">list</span>(<span class="hljs-built_in">map</span>(<span class="hljs-built_in">int</span>,l))<br><br>Out[<span class="hljs-number">2</span>]: [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>]<br></code></pre></td></tr></table></figure><h3 id="编写独立函数作用与-list-中每一个元素："><a href="#编写独立函数作用与-list-中每一个元素：" class="headerlink" title="编写独立函数作用与 list 中每一个元素："></a>编写独立函数作用与 list 中每一个元素：</h3><p>例如对 list 中每一个元素求平方</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">f</span>(<span class="hljs-params">x</span>):<br>    <span class="hljs-keyword">return</span> x**<span class="hljs-number">2</span><br><br>l =[<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>]<br><br><span class="hljs-built_in">list</span>(<span class="hljs-built_in">map</span>(f,l))<br><br>Out[<span class="hljs-number">3</span>]: [<span class="hljs-number">1</span>, <span class="hljs-number">4</span>, <span class="hljs-number">9</span>, <span class="hljs-number">16</span>]<br></code></pre></td></tr></table></figure><h3 id="使用匿名函数操作："><a href="#使用匿名函数操作：" class="headerlink" title="使用匿名函数操作："></a>使用匿名函数操作：</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs Python">l =[<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>]<br><span class="hljs-built_in">list</span>(<span class="hljs-built_in">map</span>(<span class="hljs-keyword">lambda</span> x: x**<span class="hljs-number">2</span>, l))<br><br>Out[<span class="hljs-number">4</span>]: [<span class="hljs-number">1</span>, <span class="hljs-number">4</span>, <span class="hljs-number">9</span>, <span class="hljs-number">16</span>]<br></code></pre></td></tr></table></figure><h3 id="同时操作两个-list-并行非多核运算"><a href="#同时操作两个-list-并行非多核运算" class="headerlink" title="同时操作两个 list(并行非多核运算)"></a>同时操作两个 list(并行非多核运算)</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs Python">l =[<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>]<br><span class="hljs-built_in">list</span>(<span class="hljs-built_in">map</span>(<span class="hljs-keyword">lambda</span> x,y: x+y,l,l))<br><br>Out[<span class="hljs-number">5</span>]: [<span class="hljs-number">2</span>, <span class="hljs-number">4</span>, <span class="hljs-number">6</span>, <span class="hljs-number">8</span>]<br></code></pre></td></tr></table></figure><blockquote><p>注：python3 和 python2 中map()的返回值不一样， python2 中直接返回列表，python需要加list()转换取值。</p></blockquote><h2 id="filter-函数——筛选函数"><a href="#filter-函数——筛选函数" class="headerlink" title="filter()函数——筛选函数"></a>filter()函数——筛选函数</h2><ul><li>按照 function 函数的规则在列表 sequence 中筛选数据</li><li>用法：<code>filter(function, sequence)</code></li></ul><h3 id="筛选-list-中符合条件的值"><a href="#筛选-list-中符合条件的值" class="headerlink" title="筛选 list 中符合条件的值"></a>筛选 list 中符合条件的值</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs Python">l =[<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>]<br><span class="hljs-built_in">filter</span>(<span class="hljs-keyword">lambda</span> x: x&gt;<span class="hljs-number">2</span>, l)<br><br>Out[<span class="hljs-number">6</span>]: [<span class="hljs-number">3</span>, <span class="hljs-number">4</span>]<br></code></pre></td></tr></table></figure><h3 id="filter-与-map-返回值不同"><a href="#filter-与-map-返回值不同" class="headerlink" title="filter() 与 map() 返回值不同"></a>filter() 与 map() 返回值不同</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs Python">l =[<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>]<br><span class="hljs-built_in">map</span>(<span class="hljs-keyword">lambda</span> x: x&gt;<span class="hljs-number">2</span>, l)<br><br>Out[<span class="hljs-number">8</span>]: [<span class="hljs-literal">False</span>, <span class="hljs-literal">False</span>, <span class="hljs-literal">True</span>, <span class="hljs-literal">True</span>]<br></code></pre></td></tr></table></figure><h2 id="reduce-——求积累运算"><a href="#reduce-——求积累运算" class="headerlink" title="reduce()——求积累运算"></a>reduce()——求积累运算</h2><p>reduce函数功能是将 sequence 中数据，按照 function 函数操作，如将列表第一个数与第二个数进行 function 操作，得到的结果和列表中下一个数据进行 function 操作，一直循环下去…</p><p>用法：<code>reduce(function, sequence)</code></p><h3 id="求积累和"><a href="#求积累和" class="headerlink" title="求积累和"></a>求积累和</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs Python">l =[<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>]<br>reduce(<span class="hljs-keyword">lambda</span> x,y: x+y, l)<br><br>Out[<span class="hljs-number">10</span>]: <span class="hljs-number">10</span><br></code></pre></td></tr></table></figure><h2 id="zip-打包函数"><a href="#zip-打包函数" class="headerlink" title="zip()打包函数"></a>zip()打包函数</h2><p>zip()是 Python 的一个内建函数，它接受一系列可迭代的对象作为参数，将对象中对应的元素打包成一个个tuple（元组），然后返回由这些tuples组成的list（列表）。若传入参数的长度不等，则返回 list 的长度和参数中长度最短的对象相同。利用<code>*</code>号操作符，可以将list unzip（解压）。</p><p>用法: <code>zip(list,list)</code></p><h3 id="zip-基本用法"><a href="#zip-基本用法" class="headerlink" title="zip()基本用法"></a>zip()基本用法</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs Python">l1 = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>]<br>l2 = [<span class="hljs-string">&#x27;a&#x27;</span>, <span class="hljs-string">&#x27;b&#x27;</span>, <span class="hljs-string">&#x27;c&#x27;</span>, <span class="hljs-string">&#x27;d&#x27;</span>]<br><br><span class="hljs-built_in">zip</span>(l1,l2)<br>Out[<span class="hljs-number">12</span>]: [(<span class="hljs-number">1</span>, <span class="hljs-string">&#x27;a&#x27;</span>), (<span class="hljs-number">2</span>, <span class="hljs-string">&#x27;b&#x27;</span>), (<span class="hljs-number">3</span>, <span class="hljs-string">&#x27;c&#x27;</span>), (<span class="hljs-number">4</span>, <span class="hljs-string">&#x27;d&#x27;</span>)]<br></code></pre></td></tr></table></figure><h3 id="使用-逆过程"><a href="#使用-逆过程" class="headerlink" title="使用*逆过程"></a>使用<code>*</code>逆过程</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs Python">l1 = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>]<br>l2 = [<span class="hljs-string">&#x27;a&#x27;</span>, <span class="hljs-string">&#x27;b&#x27;</span>, <span class="hljs-string">&#x27;c&#x27;</span>, <span class="hljs-string">&#x27;d&#x27;</span>]<br>zip_l1_l2 = <span class="hljs-built_in">zip</span>(l1,l2)<br><span class="hljs-built_in">zip</span>(*zip_l1_l2)<br><br>Out[<span class="hljs-number">17</span>]: [(<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>), (<span class="hljs-string">&#x27;a&#x27;</span>, <span class="hljs-string">&#x27;b&#x27;</span>, <span class="hljs-string">&#x27;c&#x27;</span>, <span class="hljs-string">&#x27;d&#x27;</span>)]<br></code></pre></td></tr></table></figure><h3 id="zip-构造字典"><a href="#zip-构造字典" class="headerlink" title="zip 构造字典"></a>zip 构造字典</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs Python">l1 = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>]<br>l2 = [<span class="hljs-string">&#x27;a&#x27;</span>, <span class="hljs-string">&#x27;b&#x27;</span>, <span class="hljs-string">&#x27;c&#x27;</span>, <span class="hljs-string">&#x27;d&#x27;</span>]<br>zip_l1_l2 = <span class="hljs-built_in">zip</span>(l1,l2)<br><br><span class="hljs-built_in">dict</span>(zip_l1_l2)<br><br>Out[<span class="hljs-number">18</span>]: &#123;<span class="hljs-number">1</span>: <span class="hljs-string">&#x27;a&#x27;</span>, <span class="hljs-number">2</span>: <span class="hljs-string">&#x27;b&#x27;</span>, <span class="hljs-number">3</span>: <span class="hljs-string">&#x27;c&#x27;</span>, <span class="hljs-number">4</span>: <span class="hljs-string">&#x27;d&#x27;</span>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>IT</category>
      
      <category>Python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Pandas CSV 及 Excel 操作备忘录</title>
    <link href="/2020/07/pandascsvexcel/"/>
    <url>/2020/07/pandascsvexcel/</url>
    
    <content type="html"><![CDATA[<p>最近笔者用爬虫爬取了 48 万例病人数据，整个文件大小有 600m。用 MS Excel 处理的话，打开就得花 10min，每进行一个操作，少则 10s，多则 5min，有甚至直接卡死。无奈之下，只能用 Python 解决了，第一时间就想到了大名鼎鼎的 Pandas。</p><span id="more"></span><p>Pandas 是为 Python 编程语言编写的用于数据处理和分析的软件库，主要用于从各种文件格式（例如：CSV、JSON、SQL、Microsoft Excel）导入数据进行数据分析。</p><p>这里就记录一些 Pandas 代码以备忘</p><h2 id="打开文件"><a href="#打开文件" class="headerlink" title="打开文件"></a>打开文件</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">from</span> pandas <span class="hljs-keyword">import</span> DataFrame, Series<br><span class="hljs-keyword">import</span> re<br> <br>os.chdir(<span class="hljs-string">&#x27;/content/drive/Shared drives/Infinite/&#x27;</span>)<br> <br>df = pd.read_csv(<span class="hljs-string">&#x27;data5.csv&#x27;</span>, index_col = <span class="hljs-number">0</span>, encoding = <span class="hljs-string">&#x27;gbk&#x27;</span>)<br><span class="hljs-comment">#pd.set_option(&#x27;display.width&#x27;, None) # 列之间的省略号</span><br><span class="hljs-comment">#pd.set_option(&#x27;display.max_rows&#x27;, None) # 行之间的省略号</span><br></code></pre></td></tr></table></figure><h2 id="将-DataFrame-写入文件"><a href="#将-DataFrame-写入文件" class="headerlink" title="将 DataFrame 写入文件"></a>将 DataFrame 写入文件</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Python">df.to_csv(<span class="hljs-string">&#x27;data5.csv&#x27;</span>, encoding = <span class="hljs-string">&#x27;gbk&#x27;</span>, na_rep=<span class="hljs-string">&#x27;NA&#x27;</span>)<br></code></pre></td></tr></table></figure><h2 id="数据清洗"><a href="#数据清洗" class="headerlink" title="数据清洗"></a>数据清洗</h2><h3 id="列出所有的-Column-的抬头"><a href="#列出所有的-Column-的抬头" class="headerlink" title="列出所有的 Column 的抬头"></a>列出所有的 Column 的抬头</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Python">df.columns.values<br></code></pre></td></tr></table></figure><h3 id="查看数据"><a href="#查看数据" class="headerlink" title="查看数据"></a>查看数据</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Python">df.head(<span class="hljs-number">20</span>) <span class="hljs-comment"># 前20行</span><br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Python">df[<span class="hljs-number">0</span>:<span class="hljs-number">2</span>] <span class="hljs-comment"># 第1-2行数据</span><br></code></pre></td></tr></table></figure><h3 id="截取部分列的数据"><a href="#截取部分列的数据" class="headerlink" title="截取部分列的数据"></a>截取部分列的数据</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Python">df.loc[:, [<span class="hljs-string">&#x27;校正后年龄&#x27;</span>, <span class="hljs-string">&#x27;体检次数&#x27;</span>]]<br>df.loc[:, <span class="hljs-string">&#x27;校正后年龄&#x27;</span>: <span class="hljs-string">&#x27;体检次数&#x27;</span>]<br></code></pre></td></tr></table></figure><h3 id="删除列"><a href="#删除列" class="headerlink" title="删除列"></a>删除列</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs Python">list_to_del = [<br>    <span class="hljs-string">&#x27;年龄&#x27;</span>,<br>    <span class="hljs-string">&#x27;血压&#x27;</span>,<br>]<br>df = df.drop(list_to_del, axis = <span class="hljs-number">1</span>)<br></code></pre></td></tr></table></figure><h3 id="对某列进行操作"><a href="#对某列进行操作" class="headerlink" title="对某列进行操作"></a>对某列进行操作</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Python">df[<span class="hljs-string">&#x27;年龄&#x27;</span>] = df[<span class="hljs-string">&#x27;年龄&#x27;</span>].<span class="hljs-built_in">map</span>(<span class="hljs-keyword">lambda</span> x: re.sub(<span class="hljs-string">&#x27;岁&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-built_in">str</span>(x)))<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Python">df[<span class="hljs-string">&#x27;校正后年龄&#x27;</span>] = df.apply(<span class="hljs-keyword">lambda</span> x: <span class="hljs-built_in">int</span>(x[<span class="hljs-string">&#x27;年龄&#x27;</span>]) - <span class="hljs-number">2020</span> + <span class="hljs-built_in">int</span>(x[<span class="hljs-string">&#x27;日期&#x27;</span>][<span class="hljs-number">0</span>:<span class="hljs-number">4</span>]) <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> x[<span class="hljs-string">&#x27;年龄&#x27;</span>] == <span class="hljs-string">&#x27;nan&#x27;</span> <span class="hljs-keyword">else</span> <span class="hljs-string">&#x27;NA&#x27;</span>, axis=<span class="hljs-number">1</span>)<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Python">df[<span class="hljs-string">&#x27;年龄&#x27;</span>] = df[<span class="hljs-string">&#x27;年龄&#x27;</span>] * <span class="hljs-number">2</span><br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Python">df = df.loc[-(df[<span class="hljs-string">&#x27;性别&#x27;</span>] == <span class="hljs-number">2</span>)] <span class="hljs-comment"># 删除性别是2的数据</span><br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Python">df = df.drop_duplicates([<span class="hljs-string">&#x27;month&#x27;</span>, <span class="hljs-string">&#x27;day&#x27;</span>])  <span class="hljs-comment">#移除month和day列包含重复值的行，保留第一个</span><br>df = df.drop_duplicates([<span class="hljs-string">&#x27;month&#x27;</span>], take_last = <span class="hljs-literal">True</span> )<span class="hljs-comment">#移除month列包含重复值的行，保留最后一个</span><br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Python">df.rename(columns = &#123;<span class="hljs-string">&#x27;ISI&#x27;</span>: <span class="hljs-string">&#x27;isi&#x27;</span>&#125;, inplace = <span class="hljs-literal">True</span>) <span class="hljs-comment">#ISI列列名改为isi</span><br></code></pre></td></tr></table></figure><h3 id="显示空值的数目"><a href="#显示空值的数目" class="headerlink" title="显示空值的数目"></a>显示空值的数目</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Python">df.isna().<span class="hljs-built_in">sum</span>()<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">for</span> item <span class="hljs-keyword">in</span> df.columns.values:<br>    <span class="hljs-built_in">print</span>(item, df[item].isna().<span class="hljs-built_in">sum</span>())<br></code></pre></td></tr></table></figure><h3 id="将控制用-NA-填充"><a href="#将控制用-NA-填充" class="headerlink" title="将控制用 NA 填充"></a>将控制用 <code>NA</code> 填充</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Python">df = df.fillna(<span class="hljs-string">&#x27;NA&#x27;</span>)<br></code></pre></td></tr></table></figure><h3 id="替换数据"><a href="#替换数据" class="headerlink" title="替换数据"></a>替换数据</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Python">df[<span class="hljs-string">&#x27;血压&#x27;</span>] = df[<span class="hljs-string">&#x27;血压&#x27;</span>].replace(<span class="hljs-string">&#x27;110/33mmHg&#x27;</span>, <span class="hljs-string">&#x27;110/80mmHg&#x27;</span>) <span class="hljs-comment"># 把&#x27;110/33mmHg&#x27;替换成&#x27;110/80mmHg&#x27;</span><br></code></pre></td></tr></table></figure><h2 id="数据统计"><a href="#数据统计" class="headerlink" title="数据统计"></a>数据统计</h2><h3 id="计算某列变量频数"><a href="#计算某列变量频数" class="headerlink" title="计算某列变量频数"></a>计算某列变量频数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Python">df[<span class="hljs-string">&#x27;校正后年龄&#x27;</span>].unique()     <span class="hljs-comment">#输出month列唯一值</span><br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Python">df[<span class="hljs-string">&#x27;校正后年龄&#x27;</span>].value_counts()   <span class="hljs-comment">#输出month列各变量出现频数</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>IT</category>
      
      <category>Python</category>
      
      <category>科研</category>
      
      <category>数据分析</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>Pandas</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>菜品随机生成器</title>
    <link href="/2020/07/dishesgenerator/"/>
    <url>/2020/07/dishesgenerator/</url>
    
    <content type="html"><![CDATA[<p>接下来要自己做饭吃了，每天都要为烧什么菜头痛，就做一个菜品生成器，根据随机生成的菜品煮菜即可</p><p>目前菜品较少，后续会慢慢添加</p><span id="more"></span><script>    function randomNum(minNum, maxNum){         switch(arguments.length){             case 1:                 return parseInt(Math.random() * minNum + 1, 10);             break;             case 2:                 return parseInt(Math.random() * (maxNum - minNum + 1) + minNum, 10);             break;                 default:                     return 0;                 break;         }     }     function dish() {        var meat_list = [            "油焖大虾",            "萝卜炒肉",            "油炸鸡柳",            "大葱炒涮羊肉",            "可乐鸡翅",            "红烧排骨",            "蒲瓜炒肉",            "香菇炒肉",            "油煎小黄鱼",        ];        var vege_list = [            "四季豆炒肉",            "炒青菜",            "山药炒木耳",            "炒土豆片",            "麻婆豆腐",            "西红柿炒蛋",            "茭白炒肉",            "莴笋炒肉",            "金钱蛋",        ];        var meat_num = randomNum(0, meat_list.length - 1);        var vage_num = randomNum(0, vege_list.length - 1);        var meat_text = meat_list[meat_num];        var vege_text = vege_list[vage_num];        document.getElementById("text0").innerHTML="今天的菜肴";        document.getElementById("text1").innerHTML=meat_text;        document.getElementById("text2").innerHTML=vege_text;    }</script><p id="text0"><br/></p><p id="text1"><br/></p><p id="text2"><br/></p><input type="button" onClick="dish()" value="生成菜品" style = "display: inline-block; padding: 10px 20px; cursor: pointer; text-align: center; text-decoration: none; outline: none; color: #fff; background-color: #4CAF50; border: none; border-radius: 15px; box-shadow: 0 4px #999;">]]></content>
    
    
    <categories>
      
      <category>其他</category>
      
    </categories>
    
    
    <tags>
      
      <tag>其他</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Ubuntu Server 安装 JupyterLab</title>
    <link href="/2020/06/ubuntujupyterlab/"/>
    <url>/2020/06/ubuntujupyterlab/</url>
    
    <content type="html"><![CDATA[<p>JupyterLab 是 Jupyter 项目的下一代基于Web的用户界面，根据官方文档，JupyterLab 最终将取代经典的 Jupyter Notebook</p><span id="more"></span><p>下面我们看一下如何在 Ubuntu Server 20.04 下安装 JupypterLab 吧</p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>安装最新版 Python3、pip3 及 <a href="/2019/09/hexogitee/#%E5%AE%89%E8%A3%85Node-js">nodejs</a>，用 Anaconda 也可以</p><h2 id="安装JupyterLab"><a href="#安装JupyterLab" class="headerlink" title="安装JupyterLab"></a>安装JupyterLab</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Bash">pip3 install jupyterlab<br><span class="hljs-comment"># 或者使用</span><br><span class="hljs-comment"># conda install -c conda-forge jupyterlab</span><br></code></pre></td></tr></table></figure><h2 id="配置Python"><a href="#配置Python" class="headerlink" title="配置Python"></a>配置Python</h2><h3 id="生成配置文件"><a href="#生成配置文件" class="headerlink" title="生成配置文件"></a>生成配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Bash">jupyter lab --generate-config<br><br></code></pre></td></tr></table></figure><h3 id="生成密码"><a href="#生成密码" class="headerlink" title="生成密码"></a>生成密码</h3><p>输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">jupyter lab password<br></code></pre></td></tr></table></figure><p>然后输入两次设定的密码即可</p><h3 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">vi ~/.jupyter/jupyter_notebook_config.py<br></code></pre></td></tr></table></figure><p>并找到以下条目并修改：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-comment"># 允许远程访问</span><br>c.ServerApp.allow_remote_access = <span class="hljs-literal">True</span><br><span class="hljs-comment"># 允许 root 用户</span><br>c.ServerApp.allow_root = <span class="hljs-literal">True</span><br><span class="hljs-comment"># 启动时不打开浏览器</span><br>c.LabServerApp.open_browser = <span class="hljs-literal">False</span><br><span class="hljs-comment"># 设置公网访问</span><br>c.ServerApp.ip = <span class="hljs-string">&#x27;0.0.0.0&#x27;</span><br></code></pre></td></tr></table></figure><h2 id="安装中文语言包"><a href="#安装中文语言包" class="headerlink" title="安装中文语言包"></a>安装中文语言包</h2><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs armasm"><span class="hljs-symbol">pip3</span> install jupyterlab-language-pack-zh-<span class="hljs-meta">CN</span><br></code></pre></td></tr></table></figure><p>然后在 <code>settings</code> → <code>language</code> 中切换</p><h2 id="debugger-语法检测"><a href="#debugger-语法检测" class="headerlink" title="debugger 语法检测"></a>debugger 语法检测</h2><p>jupyter-lab 3.0 默认带有 debugger，所以不需要额外安装，但缺少依赖包，需要安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Bash">pip install xeus-python<br><span class="hljs-comment"># 或</span><br><span class="hljs-comment"># conda install -c conda-forge xeus-python</span><br></code></pre></td></tr></table></figure><h2 id="代码提示"><a href="#代码提示" class="headerlink" title="代码提示"></a>代码提示</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Bash">pip install jupyterlab-lsp<br><span class="hljs-comment"># 或者</span><br><span class="hljs-comment"># conda install -c conda-forge  jupyterlab-lsp</span><br></code></pre></td></tr></table></figure><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">pip install python-lsp-<span class="hljs-keyword">server</span>[<span class="hljs-keyword">all</span>]<br></code></pre></td></tr></table></figure><h2 id="启动Jupyter-Notebook"><a href="#启动Jupyter-Notebook" class="headerlink" title="启动Jupyter Notebook"></a>启动Jupyter Notebook</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">jupyter lab<br></code></pre></td></tr></table></figure><p>打开相应端口即可通过<code>ip:端口</code>访问JupyterLab，默认端口为 8888</p><h2 id="插件（可选）"><a href="#插件（可选）" class="headerlink" title="插件（可选）"></a>插件（可选）</h2><p><a href="https://github.com/jupyterlab/jupyterlab-toc">@jupyterlab&#x2F;toc</a><br><a href="https://github.com/krassowski/jupyterlab-go-to-definition">@krassowski&#x2F;jupyterlab_go_to_definition</a><br><a href="https://github.com/ryantam626/jupyterlab_sublime">@ryantam626&#x2F;jupyterlab_sublime</a></p><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><a href="https://python.iitter.com/other/234605.html#1_Jupyterlab30_1">Jupyter-lab 3.0 安装、配置并选择虚拟环境开机启动</a></p>]]></content>
    
    
    <categories>
      
      <category>IT</category>
      
      <category>Python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>Python</tag>
      
      <tag>Jupyter</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>医学小工具</title>
    <link href="/2020/06/medtools/"/>
    <url>/2020/06/medtools/</url>
    
    <content type="html"><![CDATA[<blockquote><p>收录一些医学小工具</p></blockquote><span id="more"></span><p><a href="/skip/MedTools/1.html">标准体重</a><br><a href="/skip/MedTools/2.html">标准体重</a><br><a href="/skip/MedTools/3.html">基础能耗（Harris-Benedict公式）</a><br><a href="/skip/MedTools/4.html">基础能耗（Shizgal-Rosa公式）</a><br><a href="/skip/MedTools/5.html">去脂体重</a><br><a href="/skip/MedTools/6.html">体表面积</a><br><a href="/skip/MedTools/7.html">体表面积</a><br><a href="/skip/MedTools/8.html">体重指数</a><br><a href="/skip/MedTools/9.html">每搏输出量</a><br><a href="/skip/MedTools/10.html">心指数</a><br><a href="/skip/MedTools/11.html">平均动脉压</a><br><a href="/skip/MedTools/12.html">心脏射血分数</a><br><a href="/skip/MedTools/13.html">体循环阻力</a><br><a href="/skip/MedTools/14.html">肺循环阻力</a><br><a href="/skip/MedTools/15.html">校正QT间期（Bazett公式）</a><br><a href="/skip/MedTools/16.html">氧消耗</a><br><a href="/skip/MedTools/17.html">氧输送</a><br><a href="/skip/MedTools/18.html">氧气使用分率</a><br><a href="/skip/MedTools/19.html">氧合指数</a><br><a href="/skip/MedTools/20.html">肺泡-动脉氧压差</a><br><a href="/skip/MedTools/21.html">呼吸指数</a><br><a href="/skip/MedTools/22.html">肺内右-左分流率</a><br><a href="/skip/MedTools/23.html">动-静脉氧气含量差</a><br><a href="/skip/MedTools/24.html">1秒率</a><br><a href="/skip/MedTools/25.html">肺活量</a><br><a href="/skip/MedTools/26.html">肺总量</a><br><a href="/skip/MedTools/27.html">功能余气量</a><br><a href="/skip/MedTools/28.html">最大呼气中段流量</a><br><a href="/skip/MedTools/29.html">肺顺应性</a><br><a href="/skip/MedTools/30.html">气道阻力</a><br><a href="/skip/MedTools/31.html">呼吸商</a><br><a href="/skip/MedTools/32.html">通气效率</a><br><a href="/skip/MedTools/33.html">通气血流比</a><br><a href="/skip/MedTools/34.html">白球比</a><br><a href="/skip/MedTools/35.html">胆红素白蛋白比值</a><br><a href="/skip/MedTools/36.html">淀粉酶肌酐清除比值</a><br><a href="/skip/MedTools/37.html">酒精性肝炎Maddrey判别函数</a><br><a href="/skip/MedTools/38.html">钠排泌分数</a><br><a href="/skip/MedTools/39.html">尿素排泄分数</a><br><a href="/skip/MedTools/40.html">残余肾功能</a><br><a href="/skip/MedTools/41.html">蛋白质摄入量</a><br><a href="/skip/MedTools/42.html">内生肌酐清除率(测量法)</a><br><a href="/skip/MedTools/43.html">内生肌酐清除率（Cockcroft-Gault公式）</a><br><a href="/skip/MedTools/44.html">内生肌酐清除率（Durate公式）</a><br><a href="/skip/MedTools/45.html">肾小球滤过率（MDRD公式）</a><br><a href="/skip/MedTools/46.html">肾小球滤过率（MDRD简化公式）</a><br><a href="/skip/MedTools/47.html">补水量</a><br><a href="/skip/MedTools/48.html">血浆渗透压</a><br><a href="/skip/MedTools/49.html">阴离子间隙</a><br><a href="/skip/MedTools/50.html">校正阴离子间隙</a><br><a href="/skip/MedTools/51.html">尿阴离子间隙</a><br><a href="/skip/MedTools/52.html">低白蛋白血症钙浓度校正</a><br><a href="/skip/MedTools/53.html">低钠血症时补生理盐水</a><br><a href="/skip/MedTools/54.html">低钠血症时补氯化钠值</a><br><a href="/skip/MedTools/55.html">低钠血症时补钠值</a><br><a href="/skip/MedTools/56.html">高血糖的钠浓度校正</a><br><a href="/skip/MedTools/57.html">亚洲人骨质疏松自我筛查工具</a><br><a href="/skip/MedTools/58.html">血性脑脊液白细胞校正</a><br><a href="/skip/MedTools/59.html">房颤卒中风险评分(CHA2DS2-VASc score for AF, ESC 2010)</a><br><a href="/skip/MedTools/60.html">下肢深静脉血栓形成（DVT）诊断的Wells评分</a><br><a href="/skip/MedTools/61.html">Framingham心脏危险评分（男性）</a><br><a href="/skip/MedTools/62.html">Framingham心脏危险评分（女性）</a><br><a href="/skip/MedTools/63.html">ST段抬高型心肌梗死TIMI评分(TIMI risk index)</a><br><a href="/skip/MedTools/64.html">非ST段抬高型心肌梗死TIMI评分(TIMI risk score)</a><br><a href="/skip/MedTools/65.html">稳定性心绞痛分级（加拿大心血管学会,CCS）</a><br><a href="/skip/MedTools/66.html">NYHA心功能分级（慢性心衰）</a><br><a href="/skip/MedTools/67.html">Killip心功能分级（急性心梗）</a><br><a href="/skip/MedTools/68.html">慢性心衰分期（美国心脏病学会&#x2F;美国心脏协会,ACC-AHA）</a><br><a href="/skip/MedTools/69.html">高血压病分级和危险分层</a><br><a href="/skip/MedTools/70.html">社区获得性肺炎CURB-65严重程度评分</a><br><a href="/skip/MedTools/71.html">Untitled Document</a><br><a href="/skip/MedTools/72.html">肺栓塞Wells评分和Geneva校正分数(ESC, 2008)</a><br><a href="/skip/MedTools/73.html">成人社区获得性肺炎严重性评分PSI &#x2F; PORT评分</a><br><a href="/skip/MedTools/74.html">慢性阻塞性肺疾病(COPD)的综合评估(GOLD, 2011)</a><br><a href="/skip/MedTools/75.html">反流性食管炎GERD分级（Los Angeles分级系统）</a><br><a href="/skip/MedTools/76.html">急性胰腺炎CT严重程度指数CTSI</a><br><a href="/skip/MedTools/77.html">急性胰腺炎评分Ranson标准</a><br><a href="/skip/MedTools/78.html">Untitled Document</a><br><a href="/skip/MedTools/79.html">肝功能Child-Turcotte-Pugh(CTP)分级法</a><br><a href="/skip/MedTools/80.html">上消化道出血 Glasgow-Blatchford评分</a><br><a href="/skip/MedTools/81.html">非酒精性脂肪肝NAS积分</a><br><a href="/skip/MedTools/82.html">巴塞罗那（BCLC）肝癌分期</a><br><a href="/skip/MedTools/83.html">IgA肾病LEE分级（根据光镜表现）</a><br><a href="/skip/MedTools/84.html">急性肾损伤AKI诊断和分期标准(KDIGO, 2012)</a><br><a href="/skip/MedTools/85.html">慢性肾脏病CKD分期</a><br><a href="/skip/MedTools/86.html">肾囊性病变bosniak分级</a><br><a href="/skip/MedTools/87.html">霍奇金淋巴瘤HL分期（Ann Arbor分期系统）</a><br><a href="/skip/MedTools/88.html">国际淋巴瘤预后指数IPI</a><br><a href="/skip/MedTools/89.html">DIC诊断积分系统（ISTH-DIC, 2001）</a><br><a href="/skip/MedTools/90.html">糖尿病诊断标准（WHO）</a><br><a href="/skip/MedTools/91.html">糖尿病视网膜病变国际临床分类法</a><br><a href="/skip/MedTools/92.html">Untitled Document</a><br><a href="/skip/MedTools/93.html">Untitled Document</a><br><a href="/skip/MedTools/94.html">代谢综合征的诊断标准（国际糖尿病联盟,IDF）</a><br><a href="/skip/MedTools/95.html">代谢综合征诊断标准（中华医学会糖尿病学分会,CDS）</a><br><a href="/skip/MedTools/96.html">Untitled Document</a><br><a href="/skip/MedTools/97.html">骨质疏松症风险一分钟测试题（国际骨质疏松症基金会,IOF）</a><br><a href="/skip/MedTools/98.html">Graves眼病分级标准</a><br><a href="/skip/MedTools/99.html">Graves眼病病情活动评分CAS</a><br><a href="/skip/MedTools/100.html">系统性红斑狼疮诊断标准（美国风湿病协会,ACR）</a><br><a href="/skip/MedTools/101.html">狼疮性肾炎分型（国际肾脏病学会,ISN&#x2F;RPS）</a><br><a href="/skip/MedTools/102.html">类风湿关节炎诊断标准（美国风湿病协会,ACR）</a><br><a href="/skip/MedTools/103.html">Untitled Document</a><br><a href="/skip/MedTools/104.html">类风湿关节炎RA临床缓解标准</a><br><a href="/skip/MedTools/105.html">类风湿关节炎关节功能状态分级标准</a><br><a href="/skip/MedTools/106.html">膝关节骨关节炎诊断标准（临床表现）</a><br><a href="/skip/MedTools/107.html">膝关节骨关节炎诊断标准（临床+实验室+放射学）</a><br><a href="/skip/MedTools/108.html">手关节骨关节炎诊断标准</a><br><a href="/skip/MedTools/109.html">髋关节骨关节炎诊断标准（临床表现）</a><br><a href="/skip/MedTools/110.html">髋关节骨关节炎诊断标准（临床+实验室+放射学）</a><br><a href="/skip/MedTools/111.html">脊柱关节病诊断标准（Amor诊断标准）</a><br><a href="/skip/MedTools/112.html">强直性脊柱炎诊断标准</a><br><a href="/skip/MedTools/113.html">Untitled Document</a><br><a href="/skip/MedTools/114.html">MRC肌力分级</a><br><a href="/skip/MedTools/115.html">慢性下肢缺血-股腘动脉病变TASC分级（2007）</a><br><a href="/skip/MedTools/116.html">慢性下肢缺血-腘动脉以下病变TASC分级（2001）</a><br><a href="/skip/MedTools/117.html">慢性下肢缺血-主髂动脉病变TASC分级（2007）</a><br><a href="/skip/MedTools/118.html">Untitled Document</a><br><a href="/skip/MedTools/119.html">(慢性)下肢缺血Fontaine和Rutherford分级</a><br><a href="/skip/MedTools/120.html">JOA脊髓型颈椎病评分</a><br><a href="/skip/MedTools/121.html">JOA腰背痛疾病治疗成绩标准评分</a><br><a href="/skip/MedTools/122.html">脊髓损伤严重程度Frankel功能分级和ASIA分级</a><br><a href="/skip/MedTools/123.html">APGAR评分</a><br><a href="/skip/MedTools/124.html">短暂性脑缺血发作ABCD2 评分</a><br><a href="/skip/MedTools/125.html">格拉斯哥昏迷评分（GCS）</a><br><a href="/skip/MedTools/126.html">蛛网膜下腔出血HUNT-HESS分级</a><br><a href="/skip/MedTools/127.html">旧金山晕厥标准（San Francisco Syncope Rule, SFSR）</a><br><a href="/skip/MedTools/128.html">APACHE II评分</a><br><a href="/skip/MedTools/129.html">改良Bromage评分（运动阻滞评分）</a><br><a href="/skip/MedTools/130.html">镇静程度评分</a><br><a href="/skip/MedTools/131.html">国人未来10年缺血性心血管病（ICVD）的发病危险性评估(男性)</a><br><a href="/skip/MedTools/132.html">国人未来10年缺血性心血管病（ICVD）的发病危险性评估(女性)</a><br><a href="/skip/MedTools/133.html">上消化道出血病情严重程度分级</a><br><a href="/skip/MedTools/134.html">急性上消化道出血的Rockall评分</a><br><a href="/skip/MedTools/135.html">慢性胰腺炎(CP)诊断标准</a><br><a href="/skip/MedTools/136.html">Truelove和Witts溃疡性结肠炎分度</a><br><a href="/skip/MedTools/137.html">溃疡性结肠炎的Sutherland疾病活动指数</a><br><a href="/skip/MedTools/138.html">WHO推荐的克罗恩病诊断要点</a><br><a href="/skip/MedTools/139.html">克罗恩病活动指数（CDAI）简化计算法</a><br><a href="/skip/MedTools/140.html">2003年桐城共识H.pylori根除适应证</a><br><a href="/skip/MedTools/141.html">2007年庐山共识H.pylori根除适应证</a><br><a href="/skip/MedTools/142.html">H.pylori感染的诊断标准</a><br><a href="/skip/MedTools/143.html">H.pylori感染的根除标准</a><br><a href="/skip/MedTools/144.html">预期肺栓塞早期死亡率的风险分级</a><br><a href="/skip/MedTools/146.html">Borg呼吸困难分级指数</a><br><a href="/skip/MedTools/147.html">不同因素对膀胱癌复发与进展影响的评分</a><br><a href="/skip/MedTools/148.html">尿道损伤Goldman分类</a><br><a href="/skip/MedTools/149.html">尿道损伤欧洲泌尿外科协会(EAU)分类</a><br><a href="/skip/MedTools/150.html">国际前列腺症状(I-PSS)评分表</a><br><a href="/skip/MedTools/151.html">膀胱尿路上皮癌恶性程度分级系统</a><br><a href="/skip/MedTools/152.html">膀胱癌2009年TNM分期</a><br><a href="/skip/MedTools/153.html">子宫内膜癌旧FIGO分期</a><br><a href="/skip/MedTools/154.html">子宫内膜癌2009年FIGO分期</a><br><a href="/skip/MedTools/155.html">卵巢癌FIGO分期</a><br><a href="/skip/MedTools/156.html">宫颈癌FIGO分期</a><br><a href="/skip/MedTools/158.html">卵巢过度刺激综合征（OHSS）的分度与分级</a><br><a href="/skip/MedTools/159.html">先天性甲状腺功能减退症的血清甲状腺激素诊断标准</a><br><a href="/skip/MedTools/160.html">常用单位换算</a><br><a href="/skip/MedTools/161.html">卡铂剂量</a><br><a href="/skip/MedTools/163.html">休克指数</a><br><a href="/skip/MedTools/164.html">蛋白质-能量营养不良：尿羟脯氨酸指数</a><br><a href="/skip/MedTools/165.html">儿童补液</a><br><a href="/skip/MedTools/166.html">儿童终末期肝病PELD评分</a><br><a href="/skip/MedTools/167.html">理想身高</a><br><a href="/skip/MedTools/168.html">尿路钙排泄指数（钙&#x2F;肌酐比）</a><br><a href="/skip/MedTools/169.html">气管内插管尺寸（儿童）</a><br><a href="/skip/MedTools/170.html">维生素A缺乏：相对剂量反应试验</a><br><a href="/skip/MedTools/171.html">小儿基础代谢率</a><br><a href="/skip/MedTools/172.html">小儿体表面积公式</a><br><a href="/skip/MedTools/173.html">小儿体重计算</a><br><a href="/skip/MedTools/174.html">小儿药物计算公式1-按体表面积计算</a><br><a href="/skip/MedTools/175.html">小儿药物计算公式2-按年龄计算（董氏公式）</a><br><a href="/skip/MedTools/176.html">小儿药物计算公式3-按体重计算</a><br><a href="/skip/MedTools/177.html">锌缺乏：餐后血清锌浓度反应试验</a><br><a href="/skip/MedTools/178.html">类风湿关节炎体征分级</a><br><a href="/skip/MedTools/179.html">妊娠期糖尿病（GDM）诊断标准2014</a><br><a href="/skip/MedTools/180.html">非心脏手术术前心脏风险指数(改良Goldman评分)</a><br><a href="/skip/MedTools/181.html">非心脏手术术前心脏风险指数(改良Lee’s评分)</a><br><a href="/skip/MedTools/182.html">美国国立卫生院卒中量表(NIH Stroke Scale, NIHSS)</a><br><a href="/skip/MedTools/183.html">2012年共识H.pylori根除适应证</a><br><a href="/skip/MedTools/184.html">宫颈成熟度评分(Bishop 评分)</a><br><a href="/skip/MedTools/185.html">成人still病的Yamaguchi诊断标准(日本成人Still病研究委员会, 1992)</a><br><a href="/skip/MedTools/186.html">系统性红斑狼疮(SLE)的病情活动程度评分(SLEDAI)</a><br><a href="/skip/MedTools/187.html">链球菌咽炎的修正centor评分</a><br><a href="/skip/MedTools/188.html">临床肺部感染CPIS评分</a><br><a href="/skip/MedTools/189.html">慢性阻塞性肺病(COPD)的BODE指数</a><br><a href="/skip/MedTools/190.html">造影剂肾病危险因素评分</a><br><a href="/skip/MedTools/191.html">肝素诱导的血小板减少评分系统(HIT 4T’s score)</a><br><a href="/skip/MedTools/192.html">急性阑尾炎Alvarado评分</a><br><a href="/skip/MedTools/193.html">颅内血管动静脉畸形(AVM) Spetsler-Martin分级</a><br><a href="/skip/MedTools/194.html">欧洲心脏危险评估系统(EuroSCORE)</a><br><a href="/skip/MedTools/195.html">肝性脑病分级</a><br><a href="/skip/MedTools/196.html">溃疡性结肠炎活动性Mayo评分</a><br><a href="/skip/MedTools/197.html">消化道出血Forrest分级</a><br><a href="/skip/MedTools/198.html">PCI并发症风险评分(Mayo系统)</a><br><a href="/skip/MedTools/199.html">房颤患者卒中风险评分(CHADS2 score for AF，ACC&#x2F;AHA&#x2F;ESC 2006)</a><br><a href="/skip/MedTools/200.html">房颤症状评分(CCS-SAF symptom score for AF, CSS 2009)</a><br><a href="/skip/MedTools/201.html">华法林出血风险评分-老年患者(Warfarin bleeding risk-Elderly)</a><br><a href="/skip/MedTools/202.html">华法林出血风险评估-门诊病人出血风险指数ORBI(Warfarin Bleeding risk- Outpatients Bleeding Risk Index)</a><br><a href="/skip/MedTools/203.html">急性冠脉综合征GRACE风险评分(global registry of acute coronary events risk score)</a><br><a href="/skip/MedTools/204.html">急诊胸痛患者的HEART评分(HEART Score&#x2F;chest pain in the ER, ESC 2011)</a><br><a href="/skip/MedTools/205.html">口服抗凝出血风险评估HAS-BLED评分(OAC Bleeding Risk-HAS-BLED Score, ESC 2010）</a><br><a href="/skip/MedTools/206.html">慢性充血性心力衰竭Framingham诊断标准</a><br><a href="/skip/MedTools/207.html">慢性充血性心力衰竭的MUSIC危险评分</a><br><a href="/skip/MedTools/208.html">心衰Forrester分级</a><br><a href="/skip/MedTools/209.html">心衰VALIANT风险评分(VALIANT HF Risk Score)</a><br><a href="/skip/MedTools/210.html">多发性骨髓瘤(MM)Durie-Salmon分期</a><br><a href="/skip/MedTools/211.html">多发性骨髓瘤(MM)国际分期系统(ISS)</a><br><a href="/skip/MedTools/212.html">骨髓增生异常综合征(MDS)国际预后评分系统(IPSS)</a><br><a href="/skip/MedTools/213.html">骨髓增生异常综合征(MDS)基于WHO分类的预后评分系统(WPSS)</a><br><a href="/skip/MedTools/214.html">霍奇金淋巴瘤(HL)国际预后评分(Hasenclever IPS Score)</a><br><a href="/skip/MedTools/215.html">急性移植物抗宿主反应(GVHD)分级</a><br><a href="/skip/MedTools/219.html">Richmond躁动-镇静评分(RASS)</a><br><a href="/skip/MedTools/220.html">序贯性器官功能衰竭评分(SOFA脓毒症评分)</a><br><a href="/skip/MedTools/245.html">孕周查询</a><br><a href="/skip/MedTools/246.html">激素剂量换算</a><br><a href="/skip/MedTools/247.html">类风湿关节炎疾病活动性评分</a><br><a href="/skip/MedTools/248.html">肺龄</a><br><a href="/skip/MedTools/249.html">峰值流量预测值（成人）</a><br><a href="/skip/MedTools/250.html">跨管钾梯度</a><br><a href="/skip/MedTools/251.html">肾小管磷重吸收</a><br><a href="/skip/MedTools/252.html">糖化血红蛋白评估平均血糖</a><br><a href="/skip/MedTools/257.html">尿蛋白排泄量估计</a><br><a href="/skip/MedTools/258.html">肾衰指数</a><br><a href="/skip/MedTools/259.html">高脂血症的钠浓度校正</a><br><a href="/skip/MedTools/260.html">血浆容量</a><br><a href="/skip/MedTools/261.html">腹水血清白蛋白梯度</a><br><a href="/skip/MedTools/262.html">终末期肝病MELD评分</a><br><a href="/skip/MedTools/263.html">△脉压-补液试验反应预测</a><br><a href="/skip/MedTools/264.html">平板运动试验Duke评分</a><br><a href="/skip/MedTools/265.html">心瓣膜面积（Gorlin公式）</a><br><a href="/skip/MedTools/266.html">心输出量（超声）</a><br><a href="/skip/MedTools/267.html">Baden-Walker盆底器官膨出的阴道半程系统分级法</a><br><a href="/skip/MedTools/268.html">Insler宫颈雌激素作用程度评分法</a><br><a href="/skip/MedTools/269.html">不同妊娠周数的宫底高度及子宫长度</a><br><a href="/skip/MedTools/270.html">产褥期抑郁症诊断标准</a><br><a href="/skip/MedTools/271.html">外阴癌FIGO分期（2009年）</a><br><a href="/skip/MedTools/272.html">外阴皮肤疾病分类法（ISSVD，1987）</a><br><a href="/skip/MedTools/273.html">外阴阴道假丝酵母菌病（VVC）临床分类</a><br><a href="/skip/MedTools/274.html">外阴阴道假丝酵母菌病（VVC）临床表现的评分标准</a><br><a href="/skip/MedTools/275.html">外阴鳞状上皮内瘤变分类及特征（ISSVD，2004）</a><br><a href="/skip/MedTools/276.html">妊娠期糖尿病的分期与分级</a><br><a href="/skip/MedTools/277.html">妊娠期甲亢程度和用药剂量间的关系</a><br><a href="/skip/MedTools/278.html">妊娠期甲状腺功能实验室检查</a><br><a href="/skip/MedTools/279.html">妊娠高血压病的分类</a><br><a href="/skip/MedTools/280.html">妊娠高血压终止妊娠的指征</a><br><a href="/skip/MedTools/281.html">子宫内膜异位症的分期（R-AFS分期, 1985）</a><br><a href="/skip/MedTools/282.html">子宫肉瘤FIGO分期（2009年）</a><br><a href="/skip/MedTools/283.html">宫颈细胞学检查TBS分类2001版</a><br><a href="/skip/MedTools/284.html">常用孕妇用药对胎儿的影响</a><br><a href="/skip/MedTools/285.html">性发育Tanner分期</a><br><a href="/skip/MedTools/286.html">性早熟疾病的辅助检查结果</a><br><a href="/skip/MedTools/287.html">未成熟畸胎瘤的分级方法</a><br><a href="/skip/MedTools/288.html">正常恶露性状</a><br><a href="/skip/MedTools/289.html">滋养细胞肿瘤FIGO改良预后评分系统</a><br><a href="/skip/MedTools/290.html">滋养细胞肿瘤解剖学FIGO分期（2000年）</a><br><a href="/skip/MedTools/291.html">爱丁堡产后抑郁量表（EPDS）</a><br><a href="/skip/MedTools/292.html">盆腔器官脱垂分期（POP-Q分期法）</a><br><a href="/skip/MedTools/293.html">盆腔器官脱垂评估指示点（POP-Q分期）</a><br><a href="/skip/MedTools/294.html">盆腔炎性疾病（PID）诊断标准（2006年美国CDC标准）</a><br><a href="/skip/MedTools/295.html">紧急避孕药物剂量与方案</a><br><a href="/skip/MedTools/296.html">经前焦虑障碍PMDD诊断标准</a><br><a href="/skip/MedTools/297.html">胎儿成熟度的监测</a><br><a href="/skip/MedTools/298.html">胎儿生物物理监测Manning评分及处理原则</a><br><a href="/skip/MedTools/299.html">输卵管癌手术-病理FIGO分期（2000）</a><br><a href="/skip/MedTools/300.html">重度子痫前期的诊断</a><br><a href="/skip/MedTools/301.html">阴道分泌物革兰染色Nugent评分标准</a><br><a href="/skip/MedTools/302.html">阴道癌FIGO及UICC分期</a><br><a href="/skip/MedTools/303.html">阴道穹窿膨出Julian分级法</a><br><a href="/skip/MedTools/304.html">肺栓塞Geneva预后评分(ESC, 2008)</a><br><a href="/skip/MedTools/307.html">Essen卒中风险评分量表(Essen Stroke Risk Score, ESRS)</a><br><a href="/skip/MedTools/308.html">简易智能精神状态检查量表(MMSE)</a><br><a href="/skip/MedTools/309.html">CRUSADE出血风险评分量表(ESC, 2011)</a><br><a href="/skip/MedTools/311.html">TIMI血流分级</a><br><a href="/skip/MedTools/312.html">WHO-FC肺动脉高压功能分级(ESC, 2009)</a><br><a href="/skip/MedTools/313.html">房颤相关症状分级(EHRA积分)</a><br><a href="/skip/MedTools/316.html">系统性冠状动脉风险评估量表(SCORE Risk Charts, ESC&#x2F;EAS 2011)</a><br><a href="/skip/MedTools/317.html">心脏杂音Levine6级分级法</a><br><a href="/skip/MedTools/318.html">胎儿发育指数</a><br><a href="/skip/MedTools/319.html">肾小球滤过率（CKD-EPI公式）</a><br><a href="/skip/MedTools/320.html">动脉血氧分压预测值(根据年龄、体位估算)</a><br><a href="/skip/MedTools/321.html">校正网织红细胞计数</a><br><a href="/skip/MedTools/322.html">Pavlov比值测定</a><br><a href="/skip/MedTools/323.html">创伤时基础能耗估计</a><br><a href="/skip/MedTools/324.html">漏斗胸指数</a><br><a href="/skip/MedTools/325.html">左心室收缩&#x2F;舒张末期容积指数</a><br><a href="/skip/MedTools/326.html">不同给氧方法的氧流量和FiO2的关系</a><br><a href="/skip/MedTools/327.html">临床常用呼吸机参数设置</a><br><a href="/skip/MedTools/328.html">乳腺癌术后复发风险分组及全身辅助治疗选择(中国抗癌协会, 2009)</a><br><a href="/skip/MedTools/329.html">全身炎症反应综合征SIRS标准</a><br><a href="/skip/MedTools/330.html">动脉血气分析、肺最大通气量与肺功能的关系</a><br><a href="/skip/MedTools/331.html">呼吸机撤离呼吸参数标准</a><br><a href="/skip/MedTools/332.html">外科ICU(SICU)术前、术后病人高危标准</a><br><a href="/skip/MedTools/333.html">常用冬眠合剂及其特点</a><br><a href="/skip/MedTools/334.html">常用局麻药理化性质和麻醉效能</a><br><a href="/skip/MedTools/335.html">弥漫型恶性胸膜间皮瘤Butchart分期</a><br><a href="/skip/MedTools/336.html">美国麻醉医师协会健康状况分级(ASA手术分级)</a><br><a href="/skip/MedTools/337.html">机械通气适应证</a><br><a href="/skip/MedTools/338.html">烧伤严重程度分类(上海, 1970)</a><br><a href="/skip/MedTools/339.html">烧伤深度分级(三度四分法)</a><br><a href="/skip/MedTools/340.html">烧伤面积估计(新九分法)</a><br><a href="/skip/MedTools/341.html">硬膜外阻滞常用局麻药浓度的剂量</a><br><a href="/skip/MedTools/342.html">简化的急性生理功能评分系统(SAPS Ⅱ, 1993)</a><br><a href="/skip/MedTools/343.html">结直肠息肉分类</a><br><a href="/skip/MedTools/344.html">结直肠癌组织学Broders分级</a><br><a href="/skip/MedTools/345.html">肝损伤分级(AAST, 1994)</a><br><a href="/skip/MedTools/346.html">胃肠道间质瘤(GIST)切除术后风险分级(NIH, 2008)</a><br><a href="/skip/MedTools/347.html">蛛网膜下腔常用局麻药剂量及浓度</a><br><a href="/skip/MedTools/348.html">手术中失血量估计方法（红细胞压积法）</a><br><a href="/skip/MedTools/349.html">气胸肺压缩面积估算（三线法）</a><br><a href="/skip/MedTools/353.html">输液计算器</a><br><a href="/skip/MedTools/355.html">简易胎龄评估量表</a><br><a href="/skip/MedTools/356.html">我国0～18岁儿童身高、体重的百分位数标准值</a><br><a href="/skip/MedTools/357.html">Reid阴道镜评分标准（Reid colposcopic index，RCI）</a><br><a href="/skip/MedTools/358.html">妇女更年期症状评分标准（改良Kupperman指数）</a><br><a href="/skip/MedTools/359.html">更年期评定量表（Menopause Rating Scale，MRS）</a><br><a href="/skip/MedTools/360.html">Barthel指数评定</a><br><a href="/skip/MedTools/361.html">功能独立性评定（FIM）量表</a><br><a href="/skip/MedTools/362.html">简式McGill疼痛问卷</a><br><a href="/skip/MedTools/363.html">健康调查简表SF-36</a><br><a href="/skip/MedTools/364.html">OAA&#x2F;S评分法（Observer’s assessment alert&#x2F;Sedation,OAA&#x2F;S）</a><br><a href="/skip/MedTools/365.html">Prince-Henry评分法</a><br><a href="/skip/MedTools/366.html">PRST记分系统</a><br><a href="/skip/MedTools/367.html">Stewart苏醒评分法</a><br><a href="/skip/MedTools/368.html">Willson综合评定</a><br><a href="/skip/MedTools/369.html">改良Mallampati气道分级</a><br><a href="/skip/MedTools/370.html">麻醉后恢复期评分</a><br><a href="/skip/MedTools/371.html">Hachinski缺血指数量表（HIS）</a><br><a href="/skip/MedTools/372.html">汉密尔顿抑郁量表(Hamilton Depression Scale，HAMD)</a><br><a href="/skip/MedTools/373.html">简明精神病量表(Brief Psychiatric Rating Scale，BPRS)</a><br><a href="/skip/MedTools/374.html">创伤失血量的判定</a><br><a href="/skip/MedTools/375.html">SYNTAX Score（SYNTAX积分）</a><br><a href="/skip/MedTools/376.html">体能状态评分标准(KPS法与ZPS法)</a><br><a href="/skip/MedTools/379.html">临床常用液体成分及张力</a><br><a href="/skip/MedTools/380.html">儿童口服铁制剂的规格及剂量表</a><br><a href="/skip/MedTools/381.html">儿童各年龄血苯丙氨酸理想浓度控制范围</a><br><a href="/skip/MedTools/382.html">儿童每日不显性失水量</a><br><a href="/skip/MedTools/383.html">儿童碘缺乏诊断标准（尿碘浓度测定）</a><br><a href="/skip/MedTools/384.html">儿童铅中毒诊断标准(血铅水平测定)</a><br><a href="/skip/MedTools/385.html">先天性甲低的甲状腺素(L-T4)替代治疗剂量表</a><br><a href="/skip/MedTools/386.html">各种损失液每100ml所需补水和电解质液量</a><br><a href="/skip/MedTools/387.html">喉梗阻分度</a><br><a href="/skip/MedTools/388.html">噬血细胞综合征(HPS)诊断标准(HLH-2004)</a><br><a href="/skip/MedTools/389.html">外科病儿脱水补液量和补液张力</a><br><a href="/skip/MedTools/390.html">婴儿添加辅食的步骤和方法</a><br><a href="/skip/MedTools/391.html">婴儿营养素的需要</a><br><a href="/skip/MedTools/392.html">小儿出牙顺序</a><br><a href="/skip/MedTools/393.html">小儿各年龄动作及行为发育</a><br><a href="/skip/MedTools/394.html">小儿各年龄呼吸频率平均值</a><br><a href="/skip/MedTools/395.html">小儿各年龄平均血压</a><br><a href="/skip/MedTools/396.html">小儿各年龄心率平均值及范围</a><br><a href="/skip/MedTools/397.html">小儿囟门与颅缝闭合时间</a><br><a href="/skip/MedTools/398.html">小儿肠外营养(TPN)推荐用量表</a><br><a href="/skip/MedTools/399.html">小儿身体各部位比例</a><br><a href="/skip/MedTools/400.html">川崎病（KD）的诊断标准</a><br><a href="/skip/MedTools/401.html">新生儿常见疾病机械通气初调参数</a><br><a href="/skip/MedTools/402.html">新生儿缺氧缺血性脑病（HIE）诊断标准和临床分度（中华医学会儿科学分会, 2005）</a><br><a href="/skip/MedTools/403.html">新生儿肠外营养(TPN)推荐用量表</a><br><a href="/skip/MedTools/404.html">新生儿黄疸干预指征</a><br><a href="/skip/MedTools/405.html">朗格汉斯细胞组织细胞增生症(LCH)临床分型(级)(Lavin-Osband分级法)</a><br><a href="/skip/MedTools/406.html">生长激素缺乏症(GHD)诊断方法(药物激发试验)</a><br><a href="/skip/MedTools/407.html">风湿热Jones诊断标准(1992)</a><br><a href="/skip/MedTools/408.html">2002年中华医学会神经病学分会血管性痴呆诊断标准草案要点</a><br><a href="/skip/MedTools/409.html">2005年Wingerchuk推荐视神经脊髓炎诊断标准</a><br><a href="/skip/MedTools/410.html">Chiari畸形分型CT及MRI表现</a><br><a href="/skip/MedTools/411.html">Fugl-Meyer平衡功能评定</a><br><a href="/skip/MedTools/412.html">Poser(1983)多发性硬化诊断标准</a><br><a href="/skip/MedTools/413.html">不同部位脊髓疾病的好发部位及损害表现</a><br><a href="/skip/MedTools/414.html">丛集性头痛诊断标准</a><br><a href="/skip/MedTools/415.html">偏头痛诊断标准ⅠCHD-Ⅱ R1 </a><br><a href="/skip/MedTools/416.html">前庭周围性眩晕及前庭中枢性眩晕的鉴别</a><br><a href="/skip/MedTools/417.html">压迫性脊髓病的横向定位诊断</a><br><a href="/skip/MedTools/418.html">吞咽功能障碍饮水试验</a><br><a href="/skip/MedTools/419.html">吞咽障碍的饮食分级</a><br><a href="/skip/MedTools/420.html">国际抗癫痫联盟新的癫痫持续状态分类</a><br><a href="/skip/MedTools/421.html">多发性硬化McDonald诊断标准(2010)</a><br><a href="/skip/MedTools/422.html">多发性硬化的临床分型</a><br><a href="/skip/MedTools/423.html">小脑扁桃体下疝畸形（chiari畸形）分型</a><br><a href="/skip/MedTools/424.html">少发复发性紧张型头痛（IETTH）诊断标准</a><br><a href="/skip/MedTools/425.html">慢性紧张型头痛（CTTH）诊断标准</a><br><a href="/skip/MedTools/426.html">托吡酯加量方法（日剂量）</a><br><a href="/skip/MedTools/427.html">持续植物状态中美临床诊断标准</a><br><a href="/skip/MedTools/428.html">昏迷、植物状态、最低意识状态和闭锁综合征的临床特征比较</a><br><a href="/skip/MedTools/429.html">真性球麻痹和假性球麻痹的鉴别</a><br><a href="/skip/MedTools/430.html">神经性耳聋与传导性耳聋的鉴别</a><br><a href="/skip/MedTools/431.html">神经系统副肿瘤综合征（PNS）诊断标准</a><br><a href="/skip/MedTools/432.html">神经纤维瘤病NFⅠ和NFⅡ诊断标准</a><br><a href="/skip/MedTools/433.html">肌力评定Brunnstrom分期</a><br><a href="/skip/MedTools/434.html">肌痉挛评定改良Ashworth量表</a><br><a href="/skip/MedTools/435.html">脊髓空洞症Barnett分型</a><br><a href="/skip/MedTools/436.html">药物过度使用性头痛ⅠCHD-Ⅱ R1诊断标准</a><br><a href="/skip/MedTools/438.html">阿尔兹海默病临床诊断标准</a><br><a href="/skip/MedTools/439.html">雷诺现象的Taylor-Pelmear分期</a><br><a href="/skip/MedTools/440.html">雷诺病和雷诺现象鉴别</a><br><a href="/skip/MedTools/441.html">频发复发性紧张型头痛（FETTH）诊断标准</a><br><a href="/skip/MedTools/442.html">骨骼肌肌力检查方法</a><br><a href="/skip/MedTools/443.html">主动脉夹层DeBakey分型</a><br><a href="/skip/MedTools/444.html">主动脉夹层Stanford分型</a><br><a href="/skip/MedTools/445.html">人类精液变量参考值(WHO, 2011)</a><br><a href="/skip/MedTools/446.html">国际勃起功能评分5项(IIEF-5)</a><br><a href="/skip/MedTools/447.html">尿石的一般特征</a><br><a href="/skip/MedTools/448.html">开放性骨折Gustilo-Anderson分类</a><br><a href="/skip/MedTools/449.html">肌肉骨骼肿瘤Enneking外科分期</a><br><a href="/skip/MedTools/450.html">肝门部胆管癌Bismuth-Corlette分型</a><br><a href="/skip/MedTools/451.html">股骨转子间骨折改良Evans分类</a><br><a href="/skip/MedTools/452.html">胫骨平台骨折Schatzker分型</a><br><a href="/skip/MedTools/453.html">胫骨骨折改良Ellis分类</a><br><a href="/skip/MedTools/454.html">胰腺内分泌肿瘤(PEN)类型及相关临床综合征</a><br><a href="/skip/MedTools/455.html">胸腹主动脉瘤Crawford分型</a><br><a href="/skip/MedTools/456.html">脊髓休克和脊髓震荡的鉴别</a><br><a href="/skip/MedTools/457.html">腰椎间盘突出症的症状和体征</a><br><a href="/skip/MedTools/458.html">腹腔器官肿瘤标志物分类</a><br><a href="/skip/MedTools/459.html">腹部肿块的部位和常见疾病</a><br><a href="/skip/MedTools/460.html">跟骨骨折Sanders分类</a><br><a href="/skip/MedTools/461.html">踝关节骨折Danis-Weber分类</a><br><a href="/skip/MedTools/462.html">踝关节骨折Lauge-Hansen分类</a><br><a href="/skip/MedTools/463.html">运动瘫痪类型的鉴别</a><br><a href="/skip/MedTools/464.html">颈神经根受累的症状和体征</a><br><a href="/skip/MedTools/465.html">骨盆骨折Tile分型</a><br><a href="/skip/MedTools/466.html">骨盆骨折Young和Burgress分型</a><br><a href="/skip/MedTools/467.html">髋臼骨折AO分型</a><br><a href="/skip/MedTools/468.html">髋臼骨折Letournel-Judet分型</a><br><a href="/skip/MedTools/469.html">唇和口腔-美国癌症协会癌症分期手册第七版</a><br><a href="/skip/MedTools/470.html">咽-美国癌症协会癌症分期手册第七版</a><br><a href="/skip/MedTools/471.html">喉-美国癌症协会癌症分期手册第七版</a><br><a href="/skip/MedTools/472.html">鼻腔与鼻窦-美国癌症协会癌症分期手册第七版</a><br><a href="/skip/MedTools/473.html">大唾液腺-美国癌症协会癌症分期手册第七版</a><br><a href="/skip/MedTools/474.html">甲状腺-美国癌症协会癌症分期手册第七版</a><br><a href="/skip/MedTools/475.html">头颈部黑色素瘤-美国癌症协会癌症分期手册第七版</a><br><a href="/skip/MedTools/476.html">食管癌-美国癌症协会癌症分期手册第七版</a><br><a href="/skip/MedTools/477.html">胃癌-美国癌症协会癌症分期手册第七版</a><br><a href="/skip/MedTools/478.html">小肠肿瘤-美国癌症协会癌症分期手册第七版</a><br><a href="/skip/MedTools/479.html">阑尾肿瘤-美国癌症协会癌症分期手册第七版</a><br><a href="/skip/MedTools/480.html">结直肠癌-美国癌症协会癌症分期手册第七版</a><br><a href="/skip/MedTools/481.html">肛管癌-美国癌症协会癌症分期手册第七版</a><br><a href="/skip/MedTools/482.html">胃肠道间质瘤-美国癌症协会癌症分期手册第七版</a><br><a href="/skip/MedTools/483.html">神经内分泌瘤-美国癌症协会癌症分期手册第七版</a><br><a href="/skip/MedTools/484.html">肝癌-美国癌症协会癌症分期手册第七版</a><br><a href="/skip/MedTools/485.html">肝内胆管癌-美国癌症协会癌症分期手册第七版</a><br><a href="/skip/MedTools/486.html">胆囊癌-美国癌症协会癌症分期手册第七版</a><br><a href="/skip/MedTools/487.html">肝门胆管癌-美国癌症协会癌症分期手册第七版</a><br><a href="/skip/MedTools/488.html">远端胆管癌-美国癌症协会癌症分期手册第七版</a><br><a href="/skip/MedTools/489.html">Vater壶腹癌-美国癌症协会癌症分期手册第七版</a><br><a href="/skip/MedTools/490.html">胰腺癌-美国癌症协会癌症分期手册第七版</a><br><a href="/skip/MedTools/491.html">肺癌-美国癌症协会癌症分期手册第七版</a><br><a href="/skip/MedTools/492.html">胸膜间皮瘤-美国癌症协会癌症分期手册第七版</a><br><a href="/skip/MedTools/493.html">骨肿瘤-美国癌症协会癌症分期手册第七版</a><br><a href="/skip/MedTools/494.html">软组织肉瘤-美国癌症协会癌症分期手册第七版</a><br><a href="/skip/MedTools/495.html">皮肤鳞状细胞癌及其它皮肤肿瘤-美国癌症协会癌症分期手册第七版</a><br><a href="/skip/MedTools/496.html">Merkel细胞瘤-美国癌症协会癌症分期手册第七版</a><br><a href="/skip/MedTools/497.html">皮肤黑色素瘤-美国癌症协会癌症分期手册第七版</a><br><a href="/skip/MedTools/498.html">软组织肉瘤-美国癌症协会癌症分期手册第七版</a><br><a href="/skip/MedTools/499.html">外阴癌-美国癌症协会癌症分期手册第七版</a><br><a href="/skip/MedTools/500.html">阴道癌-美国癌症协会癌症分期手册第七版</a><br><a href="/skip/MedTools/501.html">宫颈癌-美国癌症协会癌症分期手册第七版</a><br><a href="/skip/MedTools/502.html">子宫体肿瘤-美国癌症协会癌症分期手册第七版</a><br><a href="/skip/MedTools/503.html">卵巢癌-美国癌症协会癌症分期手册第七版</a><br><a href="/skip/MedTools/504.html">输卵管肿瘤-美国癌症协会癌症分期手册第七版</a><br><a href="/skip/MedTools/505.html">妊娠滋养细胞肿瘤-美国癌症协会癌症分期手册第七版</a><br><a href="/skip/MedTools/506.html">阴茎癌-美国癌症协会癌症分期手册第七版</a><br><a href="/skip/MedTools/507.html">前列腺癌-美国癌症协会癌症分期手册第七版</a><br><a href="/skip/MedTools/508.html">睾丸肿瘤-美国癌症协会癌症分期手册第七版</a><br><a href="/skip/MedTools/509.html">肾癌-美国癌症协会癌症分期手册第七版</a><br><a href="/skip/MedTools/510.html">肾盂和输尿管肿瘤-美国癌症协会癌症分期手册第七版</a><br><a href="/skip/MedTools/511.html">膀胱肿瘤-美国癌症协会癌症分期手册第七版</a><br><a href="/skip/MedTools/512.html">尿道肿瘤-美国癌症协会癌症分期手册第七版</a><br><a href="/skip/MedTools/513.html">肾上腺肿瘤-美国癌症协会癌症分期手册第七版</a><br><a href="/skip/MedTools/514.html">霍奇金和非霍奇金淋巴瘤-美国癌症协会癌症分期手册第七版</a><br><a href="/skip/MedTools/515.html">原发性皮肤淋巴瘤-美国癌症协会癌症分期手册第七版</a><br><a href="/skip/MedTools/516.html">烧伤补液（Parkland 公式）</a><br><a href="/skip/MedTools/517.html">烧伤补液（Brooke公式）</a><br><a href="/skip/MedTools/518.html">烧伤补液（第三军医大学公式）</a><br><a href="/skip/MedTools/519.html">第三军医大学烧伤热量供应公式</a><br><a href="/skip/MedTools/534.html">体循环至肺循环分流型先心病推荐手术安全性的无创评估及心导管评估表</a><br><a href="/skip/MedTools/536.html">阻力指数和收缩期&#x2F;舒张期比值</a><br><a href="/skip/MedTools/538.html">贫血的分类</a><br><a href="/skip/MedTools/540.html">类风湿关节炎分类标准和评分系统(ACR&#x2F;EULAR, 2009)</a><br><a href="/skip/MedTools/542.html">自身免疫性肝炎的诊断标准与评分系统(国际AIH工作组, 1999)</a><br><a href="/skip/MedTools/544.html">纽约大学儿童心衰指数评分</a><br><a href="/skip/MedTools/546.html">短暂性脑缺血发作(TIA)的ABCD评分系统</a><br><a href="/skip/MedTools/548.html">乳腺影像报告数据系统(BI-RADS)</a><br><a href="/skip/MedTools/550.html">MODS评分</a><br><a href="/skip/MedTools/552.html">酸碱紊乱判断</a><br><a href="/skip/MedTools/554.html">Kt&#x2F;V(URR)透析有效性指数</a><br><a href="/skip/MedTools/555.html">预产期</a><br><a href="/skip/MedTools/557.html">6分钟步行试验</a><br><a href="/skip/MedTools/558.html">APACHE II评分</a><br><a href="/skip/MedTools/559.html">急性缺血性脑卒中的TOSAT分型</a><br><a href="/skip/MedTools/561.html">医院焦虑抑郁情绪测量表（HAD）</a><br><a href="/skip/MedTools/563.html">神经损伤 Seddon 分类</a><br><a href="/skip/MedTools/564.html">神经损伤 Seddon 分类</a><br><a href="/skip/MedTools/565.html">神经损伤 Seddon 分类</a><br><a href="/skip/MedTools/566.html">神经损伤 Seddon 分类</a><br><a href="/skip/MedTools/567.html">神经损伤 Seddon 分类</a><br><a href="/skip/MedTools/568.html">神经损伤 Sunderland 分类法</a><br><a href="/skip/MedTools/569.html">神经损伤 Sunderland 分类法</a><br><a href="/skip/MedTools/570.html">神经损伤 Sunderland 分类法</a><br><a href="/skip/MedTools/571.html">神经损伤 Sunderland 分类法</a><br><a href="/skip/MedTools/572.html">神经损伤 Sunderland 分类法</a><br><a href="/skip/MedTools/573.html">Frankel 脊髓损伤分级法</a><br><a href="/skip/MedTools/574.html">Karlsson 术后疗效评分标准</a><br><a href="/skip/MedTools/575.html">Lazzcano 术后疗效评分标准</a><br><a href="/skip/MedTools/576.html">Mcintyre 肱骨髁上骨折分类表</a><br><a href="/skip/MedTools/577.html">关节盂软骨内骨折 Ideberg 分型</a><br><a href="/skip/MedTools/578.html">复发性肩关节半脱位 Rockwood 分类</a><br><a href="/skip/MedTools/579.html">孟氏骨折（Monteggia骨折）Bado 分型</a><br><a href="/skip/MedTools/580.html">尺骨鹰嘴骨折 Delee 分型</a><br><a href="/skip/MedTools/581.html">屈曲压缩骨折 Ferguson 分型</a><br><a href="/skip/MedTools/582.html">开放性骨折 Anderson 分类</a><br><a href="/skip/MedTools/583.html">开放性骨折的 Gustilo-Anderson 分类</a><br><a href="/skip/MedTools/584.html">开放性骨折的朱通伯分类(中国分类)</a><br><a href="/skip/MedTools/585.html">开放性骨折的王亦璁分类(中国分类)</a><br><a href="/skip/MedTools/586.html">月骨周围脱位分期</a><br><a href="/skip/MedTools/587.html">月骨周围脱位根据损伤程度与位置分型</a><br><a href="/skip/MedTools/588.html">桡骨头骨折 Hotchkiss 分类</a><br><a href="/skip/MedTools/589.html">桡骨头骨折 Mason 分类</a><br><a href="/skip/MedTools/590.html">桡骨远端骨折 Fernanda 分类</a><br><a href="/skip/MedTools/591.html">桡骨远端骨折 Fryman 分类</a><br><a href="/skip/MedTools/592.html">桡骨远端骨折 Lidstrom 分度</a><br><a href="/skip/MedTools/593.html">桡骨远端骨折按关节面情况的分级</a><br><a href="/skip/MedTools/594.html">桡骨远端骨折（Smith 骨折）分类</a><br><a href="/skip/MedTools/595.html">爆裂骨折 Denis 分型</a><br><a href="/skip/MedTools/596.html">第一掌骨基底部骨折 Green 分类法</a><br><a href="/skip/MedTools/597.html">肘关节 Cassebaum 评分系统</a><br><a href="/skip/MedTools/598.html">肘关节尺骨冠状突骨折的 Regan 分型</a><br><a href="/skip/MedTools/599.html">肩关节不稳定(肩关节不稳定（shoulder instability, SI）)的 Thomas 分类</a><br><a href="/skip/MedTools/600.html">肩关节不稳定的 Silliman 分类</a><br><a href="/skip/MedTools/601.html">肩关节后方不稳定(Posterior shoulder instability, PSI)分类</a><br><a href="/skip/MedTools/602.html">肩关节后脱位分型</a><br><a href="/skip/MedTools/603.html">肩胛骨 Zdravkovic-Damholt 分型</a><br><a href="/skip/MedTools/604.html">肩胛骨喙突骨折 Eyres - Brooks 分型</a><br><a href="/skip/MedTools/605.html">肩胛骨骨折的 Miller 分类</a><br><a href="/skip/MedTools/606.html">肩锁关节的损伤 Tossy 的分类</a><br><a href="/skip/MedTools/607.html">肩胛骨 Zdravkovic-Damholt 分型</a><br><a href="/skip/MedTools/608.html">肩锁关节脱位 Rockwood 分类法</a><br><a href="/skip/MedTools/609.html">肩锁关节脱位的 Tossi 分型</a><br><a href="/skip/MedTools/610.html">肱骨内上髁骨折分度</a><br><a href="/skip/MedTools/611.html">肱骨外髁骨折北京积水潭医院分型</a><br><a href="/skip/MedTools/612.html">肱骨小头骨折（Kocher骨折）Mehdian 分型标准</a><br><a href="/skip/MedTools/613.html">肱骨近端骨折 AO 分类</a><br><a href="/skip/MedTools/614.html">肱骨近端骨折 Codman 分类</a><br><a href="/skip/MedTools/615.html">肱骨近端骨折 Kocher 分类</a><br><a href="/skip/MedTools/616.html">肱骨近端骨折 Neer 分类</a><br><a href="/skip/MedTools/617.html">肱骨近端骨折 Watson－Jones 分类</a><br><a href="/skip/MedTools/618.html">肩胛骨 Zdravkovic-Damholt 分型</a><br><a href="/skip/MedTools/619.html">肱骨髁上骨折分类</a><br><a href="/skip/MedTools/620.html">肱骨髁间骨折 Riseborough 分型</a><br><a href="/skip/MedTools/621.html">肱骨髁间骨折机制分型</a><br><a href="/skip/MedTools/622.html">脊柱骨折 Denis 分类</a><br><a href="/skip/MedTools/623.html">腕舟骨骨折</a><br><a href="/skip/MedTools/624.html">舟月不稳定的分级</a><br><a href="/skip/MedTools/625.html">舟骨骨折 AO 分型</a><br><a href="/skip/MedTools/626.html">舟骨骨折的 herbert 分型</a><br><a href="/skip/MedTools/627.html">锁骨远端骨折 Neer 分型</a><br><a href="/skip/MedTools/628.html">锁骨骨折分类</a><br><a href="/skip/MedTools/629.html">骨不愈合和延迟愈合的 Weber-Cech 分类</a><br><a href="/skip/MedTools/630.html">腕管综合征功能评定表</a><br><a href="/skip/MedTools/631.html">腕管综合征功能评定表</a><br><a href="/skip/MedTools/632.html">Rancho Los Amigos 认知功能分级表</a><br><a href="/skip/MedTools/633.html">Rh 和 ABO 溶血病的比较</a><br><a href="/skip/MedTools/634.html">不同日龄及不同出生体重儿的最适温度</a><br><a href="/skip/MedTools/635.html">不同时龄足月新生儿黄疸干预标准</a><br><a href="/skip/MedTools/636.html">不同给氧方式与气浓度的关系</a><br><a href="/skip/MedTools/637.html">不同肺顺应性状态下呼吸机各种参数的初调值</a><br><a href="/skip/MedTools/638.html">不同胎龄&#x2F;出生体重早产儿黄疸干预标准(总胆红素 μmol&#x2F;L)</a><br><a href="/skip/MedTools/639.html">各胎龄新生儿神经、肌肉、成熟度</a><br><a href="/skip/MedTools/640.html">新生儿热能的需要量</a><br><a href="/skip/MedTools/641.html">新生儿电解质、矿物质、微量元素及维生素需要量</a><br><a href="/skip/MedTools/642.html">新生儿窒息复苏常用药物表</a><br><a href="/skip/MedTools/643.html">早产儿体重增长速度</a><br><a href="/skip/MedTools/644.html">气管插管型号的选择</a><br><a href="/skip/MedTools/645.html">小儿骨骺损伤 S-H(Smlen-Harris) 分类法</a><br><a href="/skip/MedTools/646.html">各类型颅内出血鉴别诊断</a><br><a href="/skip/MedTools/647.html">帕金森病分级标准</a><br><a href="/skip/MedTools/648.html">痴呆的诊断标准</a><br><a href="/skip/MedTools/649.html">进行性肌营养不良的功能分组</a><br><a href="/skip/MedTools/650.html">VAS 评分（疼痛视觉模拟评分系统）</a><br><a href="/skip/MedTools/651.html">改良 Ashworth 分级评定标准</a><br><a href="/skip/MedTools/653.html">Barthel 指数量表（BI）</a><br><a href="/skip/MedTools/654.html">Conners’ 简明症状问卷</a><br><a href="/skip/MedTools/655.html">FLACC 行为评分</a><br><a href="/skip/MedTools/656.html">HSS 膝关节评分</a><br><a href="/skip/MedTools/657.html">Karnofsky（卡氏，KPS）功能状态评分（百分法）</a><br><a href="/skip/MedTools/658.html">POSSUM 评分系统</a><br><a href="/skip/MedTools/659.html">Roland-Morris 腰椎功能障碍问卷</a><br><a href="/skip/MedTools/660.html">Tarlov 神经功能评分标准</a><br><a href="/skip/MedTools/661.html">胸腰椎损伤分类及损伤程度评分（TLICS）</a><br><a href="/skip/MedTools/662.html">中华骨科学会脊柱学组腰背痛手术评分标准</a><br><a href="/skip/MedTools/663.html">中国脑卒中患者临床神经功能缺损评分</a><br><a href="/skip/MedTools/664.html">体力状况 ECOG 评分标准（ZPS）</a><br><a href="/skip/MedTools/665.html">克莱顿皇家医院行为量表</a><br><a href="/skip/MedTools/666.html">全麻效果评级标准</a><br><a href="/skip/MedTools/667.html">内脏牵拉反应</a><br><a href="/skip/MedTools/668.html">动脉导管未闭评分标准</a><br><a href="/skip/MedTools/669.html">化疗后骨髓抑制的分度</a><br><a href="/skip/MedTools/670.html">匹兹堡脑干评分（PBSS）</a><br><a href="/skip/MedTools/671.html">婴儿心衰分级评分表</a><br><a href="/skip/MedTools/672.html">寒战分级</a><br><a href="/skip/MedTools/673.html">急性髓系白血病的危险度分级</a><br><a href="/skip/MedTools/674.html">持续性植物状态评分表（Persistent Vegetative State，PVS表）</a><br><a href="/skip/MedTools/675.html">改良 Rankin 量表</a><br><a href="/skip/MedTools/676.html">改良马氏评分</a><br><a href="/skip/MedTools/677.html">斯堪地那维亚卒中量表</a><br><a href="/skip/MedTools/678.html">新生儿休克评分表</a></p>]]></content>
    
    
    <categories>
      
      <category>医学</category>
      
      <category>工具</category>
      
    </categories>
    
    
    <tags>
      
      <tag>医学</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Vercel DNS 记录的修改</title>
    <link href="/2020/05/verceldns/"/>
    <url>/2020/05/verceldns/</url>
    
    <content type="html"><![CDATA[<blockquote><p>用通过 Vercel CLI 工具修改绑定到 Vercel 上的域名的 DNS 记录</p></blockquote><span id="more"></span><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>自从将 GitHub Pages 上的博客导入 Vercel 后，成功绑定了自定义域名，网站访问速度快了不少（ Vercel 提供免费 CDN 加速，但速度比起码云还是略逊色一点）</p><p>但是随之而来出现一个问题，域名的 DNS 服务器改成 Vercel 的 DNS 服务器后，就不能在阿里云修改 DNS 记录了（我的域名是阿里云购买的），只能用 Vercel 提供的 CLI 工具修改 DNS 记录</p><p>下面，就记录一下使用 Vercel CLI 修改 DNS 记录的方法</p><h2 id="安装-Vercel-CLI"><a href="#安装-Vercel-CLI" class="headerlink" title="安装 Vercel CLI"></a>安装 Vercel CLI</h2><h3 id="安装-Nodejs"><a href="#安装-Nodejs" class="headerlink" title="安装 Nodejs"></a>安装 Nodejs</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">curl -sL https://deb.nodesource.com/setup_12.x | <span class="hljs-built_in">sudo</span> -E bash -<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-built_in">sudo</span> apt install nodejs<br></code></pre></td></tr></table></figure><h3 id="安装-Vercel-CLI-1"><a href="#安装-Vercel-CLI-1" class="headerlink" title="安装 Vercel CLI"></a>安装 Vercel CLI</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-built_in">sudo</span> npm i -g vercel<br></code></pre></td></tr></table></figure><h2 id="登录-Vercel-CLI"><a href="#登录-Vercel-CLI" class="headerlink" title="登录 Vercel CLI"></a>登录 Vercel CLI</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">vercel login<br></code></pre></td></tr></table></figure><p>会让你输入 Vercel 邮箱名，实际上就是 GitHub 的邮箱名</p><p>然后会发送一封邮件到你的邮箱，打开邮箱确认即可登录</p><h2 id="查看-DNS-记录"><a href="#查看-DNS-记录" class="headerlink" title="查看 DNS 记录"></a>查看 DNS 记录</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">vercel dns <span class="hljs-built_in">ls</span><br></code></pre></td></tr></table></figure><p>会出现类似的内容输出</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs Bash">ubuntu@instance-2:~$ vercel dns <span class="hljs-built_in">ls</span><br>Vercel CLI 19.0.1<br>&gt; Records found under jupitersh [386ms]<br><br>(你的域名).(顶级域名)<br>                                          <span class="hljs-built_in">id</span>    name        <span class="hljs-built_in">type</span>        value                               created<br>                                                            CAA         0 issue <span class="hljs-string">&quot;xxxxxxxxxxx.org&quot;</span>           default<br>                                                            ALIAS       cname.vercel-dns.com.               default<br>                                                *           CNAME       cname.vercel-dns.com.               default<br><br></code></pre></td></tr></table></figure><h2 id="添加-DNS-记录"><a href="#添加-DNS-记录" class="headerlink" title="添加 DNS 记录"></a>添加 DNS 记录</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">vercel dns add [domain] [subdomain] [A || AAAA || ALIAS || CNAME || TXT] [value]<br></code></pre></td></tr></table></figure><p>举个例子，假设你的域名是 <code>example.com</code>，你想添加 <code>name.example.com</code> 到 <code>127.0.0.1</code> 的 <code>A</code> 记录，那么就输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">vercel dns add example.com name A 127.0.0.1<br></code></pre></td></tr></table></figure><p>加入你想添加 <code>ga.example.com</code> 到 <code>domain.com</code> 的 <code>CNAME</code> 记录，那么输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">vercel dns add example.com name CNAME domain.com<br></code></pre></td></tr></table></figure><h2 id="删除-DNS-记录"><a href="#删除-DNS-记录" class="headerlink" title="删除 DNS 记录"></a>删除 DNS 记录</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">vercel dns <span class="hljs-built_in">rm</span> [record-id]<br></code></pre></td></tr></table></figure><p>按照上文 <code>vercel dns ls</code> 后会获得 DNS 记录的 <code>id</code>，假设 <code>id</code> 为 <code>rec_679p3f94d98cc8233844c9dp</code>，那么输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">vercel dns <span class="hljs-built_in">rm</span> rec_679p3f94d98cc8233844c9dp<br></code></pre></td></tr></table></figure><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><a href="https://vercel.com/docs/cli">Vercel CLI Reference</a><br><a href="https://vercel.com/knowledge/pointing-subdomains-to-external-services">How do I point a subdomain to a service outside of Vercel?</a></p>]]></content>
    
    
    <categories>
      
      <category>IT</category>
      
      <category>其他</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Vercel</tag>
      
      <tag>DNS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Dockers 安装 Rocket.Chat</title>
    <link href="/2020/05/rocketchat/"/>
    <url>/2020/05/rocketchat/</url>
    
    <content type="html"><![CDATA[<blockquote><p>本教程用 Docker 安装 Rocket.Chat 聊天软件服务器版，搭建自己的安全聊天系统</p></blockquote><span id="more"></span><h2 id="安装-Docker"><a href="#安装-Docker" class="headerlink" title="安装 Docker"></a>安装 Docker</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-built_in">sudo</span> apt install docker.io<br></code></pre></td></tr></table></figure><h2 id="为-Docker-配置中科大源加速"><a href="#为-Docker-配置中科大源加速" class="headerlink" title="为 Docker 配置中科大源加速"></a>为 Docker 配置中科大源加速</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-built_in">sudo</span> vi /etc/docker/daemon.json<br></code></pre></td></tr></table></figure><p>加入以下内容：</p><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs prolog">&#123;<br>  <span class="hljs-string">&quot;registry-mirrors&quot;</span>: [<span class="hljs-string">&quot;https://docker.mirrors.ustc.edu.cn&quot;</span>]<br>&#125;<br></code></pre></td></tr></table></figure><p>然后重启 Docker 服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-built_in">sudo</span> systemctl daemon-reload<br><span class="hljs-built_in">sudo</span> systemctl restart docker<br></code></pre></td></tr></table></figure><h2 id="拉取镜像"><a href="#拉取镜像" class="headerlink" title="拉取镜像"></a>拉取镜像</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-built_in">sudo</span> docker pull mongo:4.0<br><span class="hljs-built_in">sudo</span> docker pull rocket.chat<br></code></pre></td></tr></table></figure><p>拉取时间根据网速而定</p><h2 id="运行容器"><a href="#运行容器" class="headerlink" title="运行容器"></a>运行容器</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-built_in">sudo</span> docker run --name db -d mongo:4.0 --smallfiles --replSet rs0 --oplogSize 128<br><span class="hljs-built_in">sudo</span> docker <span class="hljs-built_in">exec</span> -ti db mongo --<span class="hljs-built_in">eval</span> <span class="hljs-string">&quot;printjson(rs.initiate())&quot;</span><br><span class="hljs-built_in">sudo</span> docker run --name rocketchat -p 80:3000 --<span class="hljs-built_in">link</span> db --<span class="hljs-built_in">env</span> ROOT_URL=http://0.0.0.0 --<span class="hljs-built_in">env</span> MONGO_OPLOG_URL=mongodb://db:27017/local -d rocket.chat<br></code></pre></td></tr></table></figure><blockquote><p>第三行的 <code>80</code> 可以改成别的端口，如果你访问是不想在网站后加上端口号，就保持默认的 <code>80</code> 端口<br>第三行 <code>0.0.0.0</code> 改成你服务器的公网 IP 或域名（如果在公网使用的话）或者改成你的内网 IP（如果你内网使用的话）</p></blockquote><h2 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h2><p>打开浏览器输入 <code>http://IP地址:端口号</code> 或 <code>http://域名:端口号</code> 即可根据向导设置<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="设置的端口是 `80`，那么可以不用输入端口号，直接访问 `http://IP地址` 或 `http://域名` 即可">[1]</span></a></sup></p><h2 id="脚注"><a href="#脚注" class="headerlink" title="脚注"></a>脚注</h2><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span>设置的端口是 <code>80</code>，那么可以不用输入端口号，直接访问 <code>http://IP地址</code> 或 <code>http://域名</code> 即可<a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>IT</category>
      
      <category>Docker</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Docker</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>自动每日更换 Hexo 博客壁纸</title>
    <link href="/2020/05/autochangepic/"/>
    <url>/2020/05/autochangepic/</url>
    
    <content type="html"><![CDATA[<blockquote><p>本教程利用 Python 的爬虫自动爬取图片后移动到 Hexo 博客的相应目录</p></blockquote><span id="more"></span><h2 id="爬虫代码"><a href="#爬虫代码" class="headerlink" title="爬虫代码"></a>爬虫代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-comment">#!/usr/bin/python3</span><br><span class="hljs-comment"># -*- coding:utf-8*-</span><br><br><span class="hljs-comment">#########################</span><br><span class="hljs-comment">###  每天更换主页壁纸  ###</span><br><span class="hljs-comment">#########################</span><br><br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> os<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">DownloadPic</span>():<br>    picture = requests.get(<span class="hljs-string">&#x27;https://picsum.photos/1280/720&#x27;</span>)<br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;pic.png&#x27;</span>, <span class="hljs-string">&#x27;wb&#x27;</span>) <span class="hljs-keyword">as</span> f: <br>        f.write(picture.content)<br><br>    os.system(<span class="hljs-string">&#x27;mv pic.png ~/hexo/source/img/default.png&#x27;</span>) <span class="hljs-comment"># 这里的地址修改为你的 Hexo 博客地址即可</span><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    DownloadPic()<br></code></pre></td></tr></table></figure><h2 id="自动部署"><a href="#自动部署" class="headerlink" title="自动部署"></a>自动部署</h2><p>利用 Linux Cron 或者 Python 的 apscheduler 模块每天自动运行一次上述脚本和部署 Hexo 博客的脚本即可，这部分比较简单，就不敷述了</p>]]></content>
    
    
    <categories>
      
      <category>IT</category>
      
      <category>Blogging</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>博客</tag>
      
      <tag>Python</tag>
      
      <tag>爬虫</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>利用 Python 批量合并 Word 文档</title>
    <link href="/2020/05/pythoncombineword/"/>
    <url>/2020/05/pythoncombineword/</url>
    
    <content type="html"><![CDATA[<p>最近一个亲戚的工作要求经常性的合并大量 Word 文档为一个文档，手动合并耗时且易错，所以到网上搜罗了一些代码，帮他写了一个 Python 脚本</p><span id="more"></span><p>使用前请安装好 Python 和成功配置相应的环境变量，我的 Python 版本为 <code>3.8.2</code></p><h2 id="需要额外安装的模块"><a href="#需要额外安装的模块" class="headerlink" title="需要额外安装的模块"></a>需要额外安装的模块</h2><p>需要额外安装 <code>win32com</code>、<code>docx</code>、<code>docxcompose</code>，分别输入以下代码安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Bash">pip install pypiwin32<br>pip install python-docx<br>pip install docxcompose<br></code></pre></td></tr></table></figure><h2 id="脚本内容"><a href="#脚本内容" class="headerlink" title="脚本内容"></a>脚本内容</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">from</span> glob <span class="hljs-keyword">import</span> glob<br><span class="hljs-keyword">from</span> win32com <span class="hljs-keyword">import</span> client <span class="hljs-keyword">as</span> wc<br><span class="hljs-keyword">from</span> docx <span class="hljs-keyword">import</span> Document<br><span class="hljs-keyword">from</span> docxcompose.composer <span class="hljs-keyword">import</span> Composer<br><br>cwd = os.getcwd()<br><br><span class="hljs-comment">#获取doc </span><br>doc_files = glob(cwd+<span class="hljs-string">&quot;\\Word\\*.doc*&quot;</span>)<br>doc_files.sort()<br><br><span class="hljs-comment"># 将doc文件转化为docx</span><br>word = wc.Dispatch(<span class="hljs-string">&quot;Word.Application&quot;</span>) <span class="hljs-comment"># 打开word应用程序</span><br><span class="hljs-keyword">for</span> file <span class="hljs-keyword">in</span> doc_files:<br>    doc = word.Documents.Open(file) <span class="hljs-comment"># 打开word文件</span><br>    doc.SaveAs(<span class="hljs-string">&quot;&#123;&#125;x&quot;</span>.<span class="hljs-built_in">format</span>(file), <span class="hljs-number">12</span>) <span class="hljs-comment"># 另存为后缀为&quot;.docx&quot;的文件</span><br>    doc.Close() <span class="hljs-comment"># 关闭原来word文件</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;.docx&#x27;</span> <span class="hljs-keyword">in</span> file:<br>        os.remove(file)<br>        os.rename(file + <span class="hljs-string">&#x27;x&#x27;</span>, file)<br>word.Quit()<br><br><span class="hljs-comment"># 合并docx</span><br><br>result=[]<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">search</span>(<span class="hljs-params">path=<span class="hljs-string">&quot;.&quot;</span>, name=<span class="hljs-string">&quot;&quot;</span></span>):<br>    <span class="hljs-keyword">for</span> item <span class="hljs-keyword">in</span> os.listdir(path):<br>        item_path = os.path.join(path, item)<br>        <span class="hljs-keyword">if</span> os.path.isdir(item_path):<br>            search(item_path, name)<br>        <span class="hljs-keyword">elif</span> os.path.isfile(item_path):<br>            <span class="hljs-keyword">if</span> name <span class="hljs-keyword">in</span> item:<br>                <span class="hljs-keyword">global</span> result<br>                result.append(item_path)<br>                <span class="hljs-built_in">print</span> (item_path)<br><br>search(path=cwd+<span class="hljs-string">&#x27;\\Word&#x27;</span>, name=<span class="hljs-string">&quot;.docx&quot;</span>)<br><br>files = result<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">combine_all_docx</span>(<span class="hljs-params">filename_master,files_list</span>):<br>    number_of_sections=<span class="hljs-built_in">len</span>(files_list)<br>    master = Document(filename_master)<br>    master.add_page_break() <span class="hljs-comment"># 强制新一页</span><br>    composer = Composer(master)<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, number_of_sections):<br>        doc_temp = Document(files_list[i])<br>        doc_temp.add_page_break() <span class="hljs-comment"># 强制新一页</span><br>        composer.append(doc_temp)<br>    composer.save(<span class="hljs-string">&quot;合并结果.docx&quot;</span>)<br><br>combine_all_docx(result[<span class="hljs-number">0</span>],result)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;...合并完成...&quot;</span>)<br></code></pre></td></tr></table></figure><h2 id="后续操作"><a href="#后续操作" class="headerlink" title="后续操作"></a>后续操作</h2><p>在该脚本的目录下创建一个 <code>Word</code> 文件夹，然后将需要合并的 Word 文档复制（最好是复制进去，保留原文档）到该文件夹中</p><p>默认的合并顺序是按文件名排序，如果想自定义顺序的话，将文档名字前面添加 <code>01</code>、<code>02</code>、<code>03</code>、<code>...</code> 即可</p><p>最后运行该脚本，即可将文档合并为 <code>合并结果.docx</code> 的文档</p>]]></content>
    
    
    <categories>
      
      <category>IT</category>
      
      <category>Python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>利用 GitHub Action 部署 Hexo 博客</title>
    <link href="/2020/05/githubactionforhexo/"/>
    <url>/2020/05/githubactionforhexo/</url>
    
    <content type="html"><![CDATA[<blockquote><p>自动部署博客到 GitHub 和码云，并实现码云的自动更新，不需要再登录网页点击按钮<br>在使用本教程前，请确保本地部署 Hexo 博客到 GitHub 及码云已成功<br>参考文献：<a href="https://hexo.fluid-dev.com/posts/actions-deploy/"><strong>利用 GitHub Actions 自动部署 Hexo 博客</strong></a></p></blockquote><span id="more"></span><h2 id="创建-Workflow-文件"><a href="#创建-Workflow-文件" class="headerlink" title="创建 Workflow 文件"></a>创建 Workflow 文件</h2><p>在博客目录下创建 <code>.github/workflows/main.yml</code> 文件，文件内容为：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs YAML"><span class="hljs-attr">name:</span> <span class="hljs-string">Blog</span>                                                      <span class="hljs-comment"># Actions 显示的名字，随意设置</span><br><br><span class="hljs-attr">on:</span> [<span class="hljs-string">push</span>]<br><br><span class="hljs-attr">jobs:</span><br>  <span class="hljs-attr">build:</span><br><br>    <span class="hljs-attr">runs-on:</span> <span class="hljs-string">ubuntu-latest</span><br><br>    <span class="hljs-attr">steps:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Checkout</span><br>      <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/checkout@v2</span><br>      <span class="hljs-attr">with:</span><br>        <span class="hljs-attr">ref:</span> <span class="hljs-string">master</span><br><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Setup</span> <span class="hljs-string">Node</span><br>      <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/setup-node@v1</span><br>      <span class="hljs-attr">with:</span><br>        <span class="hljs-attr">node-version:</span> <span class="hljs-string">&quot;10.x&quot;</span><br><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Hexo</span> <span class="hljs-string">Generate</span><br>      <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">        rm -f .yarnclean</span><br><span class="hljs-string">        yarn --frozen-lockfile --ignore-engines --ignore-optional --non-interactive --silent --ignore-scripts --production=false</span><br><span class="hljs-string">        rm -rf ./public</span><br><span class="hljs-string">        yarn run hexo clean</span><br><span class="hljs-string">        yarn run hexo generate</span><br><span class="hljs-string"></span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Hexo</span> <span class="hljs-string">Deploy</span><br>      <span class="hljs-attr">env:</span><br>        <span class="hljs-attr">SSH_PRIVATE:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">secrets.SSH_PRIVATE</span> <span class="hljs-string">&#125;&#125;</span><br>        <span class="hljs-attr">GIT_NAME:</span> <span class="hljs-string">XXX</span>                                           <span class="hljs-comment"># 你 GitHub 用户名  </span><br>        <span class="hljs-attr">GIT_EMAIL:</span> <span class="hljs-string">XXX@email.com</span>                                <span class="hljs-comment"># 你 GitHub 邮箱</span><br>      <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">        mkdir -p ~/.ssh/</span><br><span class="hljs-string">        echo &quot;$SSH_PRIVATE&quot; | tr -d &#x27;\r&#x27; &gt; ~/.ssh/id_rsa</span><br><span class="hljs-string">        chmod 600 ~/.ssh/id_rsa</span><br><span class="hljs-string">        ssh-keyscan gitee.com &gt;&gt; ~/.ssh/known_hosts</span><br><span class="hljs-string">        ssh-keyscan github.com &gt;&gt; ~/.ssh/known_hosts</span><br><span class="hljs-string">        git config --global user.name &quot;$GIT_NAME&quot;</span><br><span class="hljs-string">        git config --global user.email &quot;$GIT_EMAIL&quot;</span><br><span class="hljs-string">        yarn run hexo deploy</span><br><span class="hljs-string"></span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Build</span> <span class="hljs-string">Gitee</span> <span class="hljs-string">Pages</span><br>      <span class="hljs-attr">uses:</span> <span class="hljs-string">yanglbme/gitee-pages-action@master</span><br>      <span class="hljs-attr">with:</span><br>          <span class="hljs-attr">gitee-username:</span> <span class="hljs-string">arxhd.love@qq.com</span>                     <span class="hljs-comment"># 你的 Gitee 用户名</span><br>          <span class="hljs-attr">gitee-password:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">secrets.GITEE_PASSWORD</span> <span class="hljs-string">&#125;&#125;</span><br>          <span class="hljs-attr">gitee-repo:</span> <span class="hljs-string">jupitersh/jupitersh</span>                       <span class="hljs-comment"># 你的 Gitee 仓库</span><br></code></pre></td></tr></table></figure><p>有 <code>#</code> 注释的部分修改为你自己的，其他保持默认即可</p><h2 id="新建-GitHub-仓库"><a href="#新建-GitHub-仓库" class="headerlink" title="新建 GitHub 仓库"></a>新建 GitHub 仓库</h2><p>新建一个 GitHub 仓库，在下图的位置的添加两个 <code>Secrets</code> ，分别名为 <code>GITEE_PASSWORD</code> 和 <code>SSH_PRIVATE</code> ，其中 <code>GITEE_PASSWORD</code> 是你码云的登陆密码，<code>SSH_PRIVATE</code> 是你之前部署用的私钥</p><p><img src="/img/article_image/2020/2020-05-24/01.webp"></p><p>将本地的博客文件夹提交到该仓库中，该仓库至少包括：<code>.github</code>、<code>source</code>、<code>themes</code>、<code>_config.yml</code>、<code>package.json</code> 这五个文件夹或文件</p><h2 id="部署成功"><a href="#部署成功" class="headerlink" title="部署成功"></a>部署成功</h2><p>以后每次有新内容只要更改后提交到刚刚新建的仓库即可，或者可以在 GitHub 网页版直接写博客</p><p>进入Action选项卡，出现一个勾勾就代表成功了，同时打开自己的 GitHub 和码云博客看看是否成功更新内容吧</p><p><img src="/img/article_image/2020/2020-05-24/02.webp"></p>]]></content>
    
    
    <categories>
      
      <category>IT</category>
      
      <category>Blogging</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>博客</tag>
      
      <tag>码云</tag>
      
      <tag>GitHub</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>饥荒联机版孤儿列表</title>
    <link href="/dstgriefer/"/>
    <url>/dstgriefer/</url>
    
    <content type="html"><![CDATA[<p>构建一个没有烧家熊孩子的游戏环境</p><span id="more"></span><p>此网页用于 Mod <a href="https://steamcommunity.com/sharedfiles/filedetails/?id=2019474125">全服通缉-天下无熊</a>的访问。在此页面更新的列表即为 Mod 调用的黑名单，项目地址：<a href="https://gitee.com/jupitersh/dstgriefer">饥荒联机版孤儿列表</a>。</p><p>This website servers as a database for the Mod of <a href="https://steamcommunity.com/sharedfiles/filedetails/?id=2019474125">No Griefer</a>. The list below is the blacklist on which the Mod bases. Gitee Project: <a href="https://gitee.com/jupitersh/dstgriefer">饥荒联机版孤儿列表</a>.</p><br/><table><thead><tr><th>孤儿ID</th><th>孤儿ID</th><th>孤儿ID</th><th>孤儿ID</th></tr></thead><tbody><tr><td>KU_3Dirn3ky</td><td>KU_3Dirn2AY</td><td>KU_NmrN-vfm</td><td>KU_pvwb-fhj</td></tr><tr><td>KU_A0x_UJRZ</td><td>76561199028593386</td><td>76561199010584560</td><td>76561198992534421</td></tr><tr><td>76561198992316442</td><td>76561198986553968</td><td>76561198963351986</td><td>76561198929340408</td></tr><tr><td>76561198901313063</td><td>76561198882590134</td><td>76561198863218237</td><td>76561198980630816</td></tr><tr><td>76561198861168198</td><td>76561198856955119</td><td>76561198841866218</td><td>76561198835739844</td></tr><tr><td>76561198824673627</td><td>76561198822588587</td><td>76561198229985584</td><td>76561198821601145</td></tr><tr><td>76561198805250116</td><td>76561198802192309</td><td>76561198799841170</td><td>76561198760987526</td></tr><tr><td>76561198449089141</td><td>76561198448400527</td><td>76561198448291800</td><td>76561198445838968</td></tr><tr><td>76561198443940664</td><td>76561198442350109</td><td>76561198439971919</td><td>76561198439419768</td></tr><tr><td>76561198436009640</td><td>76561198435734771</td><td>76561198432561013</td><td>76561198427852413</td></tr><tr><td>76561198427578907</td><td>76561198426134976</td><td>76561198426002331</td><td>76561198420173391</td></tr><tr><td>76561198411608604</td><td>76561198411508260</td><td>76561198402542117</td><td>76561198401963287</td></tr><tr><td>76561198401827605</td><td>76561198399516897</td><td>76561198396815889</td><td>76561198395082554</td></tr><tr><td>76561198389646833</td><td>76561198384496116</td><td>76561198380447518</td><td>76561198378835447</td></tr><tr><td>76561198373411286</td><td>76561198373258533</td><td>76561198371575389</td><td>76561198365719361</td></tr><tr><td>76561198360200700</td><td>76561198359432248</td><td>76561198358308769</td><td>76561198353713646</td></tr><tr><td>76561198350492465</td><td>76561198349554206</td><td>76561198347943698</td><td>76561198344888750</td></tr><tr><td>76561198344053010</td><td>76561198341891490</td><td>76561198340750880</td><td>76561198339302519</td></tr><tr><td>76561198333354639</td><td>76561198328204910</td><td>76561198323565922</td><td>76561198319729186</td></tr><tr><td>76561198315504555</td><td>76561198313721292</td><td>76561198301710429</td><td>76561198286689762</td></tr><tr><td>76561198285746172</td><td>76561198282314150</td><td>76561198281904766</td><td>76561198276738766</td></tr><tr><td>76561198275358974</td><td>76561198274610120</td><td>76561198272309775</td><td>76561198255210115</td></tr><tr><td>76561198250529136</td><td>76561198247485560</td><td>76561198236254770</td><td>76561198213974149</td></tr><tr><td>76561198210896512</td><td>76561198209393933</td><td>76561198194633403</td><td>76561198192077062</td></tr><tr><td>76561198180954303</td><td>76561198176543833</td><td>76561198168099320</td><td>76561198165651196</td></tr><tr><td>76561198155651901</td><td>76561198154253770</td><td>76561198135151190</td><td>76561198124691155</td></tr><tr><td>76561198114380758</td><td>76561198113361690</td><td>76561198097904098</td><td>76561198091705333</td></tr><tr><td>76561198074593812</td><td>76561198034194854</td><td>76561198033023213</td><td>76561198006678168</td></tr><tr><td>76561198005887853</td><td>76561197998903484</td><td>KU_tvX4yWm6</td><td>KU_3DiroPzS</td></tr><tr><td>KU_tvX4ycU1</td><td>KU_zDb_qqAZ</td><td>KU_ibiDWhUR</td><td>KU_p3AjSGYy</td></tr><tr><td>KU_n0fXOURs</td><td>76561199042742553</td><td>KU_Ve0KdzTu</td><td>KU_0vPtVmoE</td></tr><tr><td>KU_kTIVBNqe</td><td>KU_F4GEmukK</td><td>76561199014138890</td><td>76561198307210875</td></tr><tr><td>76561198895030854</td><td>76561199003426942</td><td>KU_A0x_UJRZ</td><td>KU_3xJ73GQD</td></tr><tr><td>KU_SJvhQ85k</td><td>KU_SJvhQ85k</td><td>KU_F4GEmlCw</td><td>76561198430805987</td></tr><tr><td>KU_pvwb-QIY</td><td>KU_kTIVBPgO</td><td>76561199032256758</td><td>KU_CKFre7xO</td></tr><tr><td>KU_l26xzUbr</td><td>KU__9qL1-ne</td><td>KU_HDjLJFjn</td><td>KU_CKFre6rs</td></tr><tr><td>76561198401121545</td><td>76561199080776777</td><td>76561198822332121</td><td>KU_BmnF41tF</td></tr><tr><td>KU_3RvV88NC</td><td>KU_0cJfzg61</td><td>KU_0cJfzqIu</td><td>KU_Qvt-jM9U</td></tr><tr><td>KU_Zzh0_OUi</td><td>KU_GLJ5k4y1</td><td>KU_XE0s3UIh</td><td>KU_Qvt-jdwB</td></tr><tr><td>KU_3RvV9fV4</td><td>KU_FzX9zPc6</td><td>KU_xI2uphav</td><td>KU_oX0uXq21</td></tr><tr><td>KU_3prf2gb0</td><td>KU_q7g66f7v</td><td>KU_QSHhEez-</td><td>76561198887212214</td></tr><tr><td>KU_3DiroNSj</td><td>76561199079741333</td><td>KU_Qvt-jcGJ</td><td>76561198813547473</td></tr><tr><td>KU_2i1Lqy_f</td><td>KU_UJWCheBU</td><td>KU_OtxIwog6</td><td>KU_gwdm4sAF</td></tr><tr><td>KU_j8yEjBo2</td><td>KU_0j0lUOdf</td><td>KU_HQp7BVOe</td><td>KU_dwt6dupD</td></tr><tr><td>KU_hjXTcnhk</td><td>KU_54sjcuOa</td><td>KU_MAFS6cQ9</td><td>KU_2duLJZmE</td></tr><tr><td>KU_MAFS6dDI</td><td>KU_hjXTc5e9</td><td>KU_5rwXX_CF</td><td>KU_SFlxKJGp</td></tr><tr><td>KU_V_O7lXRb</td><td>KU_WijUQfOS</td><td>KU_hjXTc7_3</td><td>KU_RxpQoig6</td></tr><tr><td>KU_hjXTc3r4</td><td></td><td></td><td></td></tr></tbody></table>]]></content>
    
    
    <categories>
      
      <category>游戏</category>
      
      <category>饥荒</category>
      
    </categories>
    
    
    <tags>
      
      <tag>饥荒</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>利用 Aria2 及 h5ai 在服务器上搭建影音中心</title>
    <link href="/2020/03/aria2h5ai/"/>
    <url>/2020/03/aria2h5ai/</url>
    
    <content type="html"><![CDATA[<blockquote><p>最近买了一台带宽5m的服务器，利用闲置的带宽来搭建个人影音中心<br>基于腾讯云Ubuntu Server 16</p></blockquote><span id="more"></span><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>H5ai是一款功能强大 php 文件目录列表程序，由德国开发者 Lars Jung 主导开发，它提供多种文件目录列表呈现方式，支持多种主流 Web 服务器，例如 Nginx、Apache、Cherokee、Lighttpd 等，支持多国语言，可以使用本程序在线预览文本、图片、音频、视频等。<a href="https://www.xzymoe.com/h5ai/">1</a></p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>更新软件源及软件包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-built_in">sudo</span> apt update<br><span class="hljs-built_in">sudo</span> apt upgrade<br><span class="hljs-built_in">sudo</span> apt dist-upgrade<br></code></pre></td></tr></table></figure><h2 id="安装aria2"><a href="#安装aria2" class="headerlink" title="安装aria2"></a>安装aria2</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-built_in">sudo</span> apt install -y aria2<br></code></pre></td></tr></table></figure><h2 id="配置aria2"><a href="#配置aria2" class="headerlink" title="配置aria2"></a>配置aria2</h2><h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><p>创建aria2的配置文件夹及文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-built_in">mkdir</span> /home/ubuntu/.aria2<br>vi /home/ubuntu/.aria2/aria2.conf<br></code></pre></td></tr></table></figure><p>在新文件中写入以下内容并保存（第2行的<code>rpc-secret</code>你想设置的密钥）</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-comment">#设置加密的密钥</span><br><span class="hljs-attr">rpc-secret</span>= <span class="hljs-number">123456789</span><br><span class="hljs-comment">#允许rpc</span><br><span class="hljs-attr">enable-rpc</span>=<span class="hljs-literal">true</span><br><span class="hljs-comment">#允许所有来源, web界面跨域权限需要</span><br><span class="hljs-attr">rpc-allow-origin-all</span>=<span class="hljs-literal">true</span><br><span class="hljs-comment">#是否启用https加密，启用之后要设置公钥,私钥的文件路径</span><br><span class="hljs-comment">#rpc-secure=true</span><br><span class="hljs-comment">#启用加密设置公钥</span><br><span class="hljs-comment">#rpc-certificate=/home/name/.config/aria2/example.crt</span><br><span class="hljs-comment">#启用加密设置私钥</span><br><span class="hljs-comment">#rpc-private-key=/home/name/.config/aria2/example.key</span><br><span class="hljs-comment">#允许外部访问，false的话只监听本地端口</span><br><span class="hljs-attr">rpc-listen-all</span>=<span class="hljs-literal">true</span><br><span class="hljs-comment">#RPC端口, 仅当默认端口被占用时修改</span><br><span class="hljs-comment">#rpc-listen-port=6800</span><br><span class="hljs-comment">#最大同时下载数(任务数), 路由建议值: 3</span><br><span class="hljs-attr">max-concurrent-downloads</span>=<span class="hljs-number">5</span><br><span class="hljs-comment">#断点续传</span><br><span class="hljs-attr">continue</span>=<span class="hljs-literal">true</span><br><span class="hljs-comment">#同服务器连接数</span><br><span class="hljs-attr">max-connection-per-server</span>=<span class="hljs-number">5</span><br><span class="hljs-comment">#最小文件分片大小, 下载线程数上限取决于能分出多少片, 对于小文件重要</span><br><span class="hljs-attr">min-split-size</span>=<span class="hljs-number">10</span>M<br><span class="hljs-comment">#单文件最大线程数, 路由建议值: 5</span><br><span class="hljs-attr">split</span>=<span class="hljs-number">10</span><br><span class="hljs-comment">#下载速度限制</span><br><span class="hljs-attr">max-overall-download-limit</span>=<span class="hljs-number">0</span><br><span class="hljs-comment">#单文件速度限制</span><br><span class="hljs-attr">max-download-limit</span>=<span class="hljs-number">0</span><br><span class="hljs-comment">#上传速度限制</span><br><span class="hljs-attr">max-overall-upload-limit</span>=<span class="hljs-number">0</span><br><span class="hljs-comment">#单文件速度限制</span><br><span class="hljs-attr">max-upload-limit</span>=<span class="hljs-number">0</span><br><span class="hljs-comment">#断开速度过慢的连接</span><br><span class="hljs-comment">#lowest-speed-limit=0</span><br><span class="hljs-comment">#验证用，需要1.16.1之后的release版本</span><br><span class="hljs-comment">#referer=*</span><br><span class="hljs-comment">#文件保存路径, 默认为当前启动位置</span><br><span class="hljs-attr">dir</span>=/home/ubuntu/webroot/download<br><span class="hljs-comment">#文件缓存, 使用内置的文件缓存, 如果你不相信Linux内核文件缓存和磁盘内置缓存时使用, 需要1.16及以上版本</span><br><span class="hljs-comment">#disk-cache=0</span><br><span class="hljs-comment">#另一种Linux文件缓存方式, 使用前确保您使用的内核支持此选项, 需要1.15及以上版本(?)</span><br><span class="hljs-comment">#enable-mmap=true</span><br><span class="hljs-comment">#文件预分配, 能有效降低文件碎片, 提高磁盘性能. 缺点是预分配时间较长</span><br><span class="hljs-comment">#所需时间 none &lt; falloc ? trunc &lt;&lt; prealloc, falloc和trunc需要文件系统和内核支持</span><br><span class="hljs-attr">file-allocation</span>=prealloc<br><span class="hljs-comment">#不进行证书校验</span><br><span class="hljs-attr">check-certificate</span>=<span class="hljs-literal">false</span><br></code></pre></td></tr></table></figure><h3 id="运行aria2"><a href="#运行aria2" class="headerlink" title="运行aria2"></a>运行aria2</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">aria2c --conf-path=/home/ubuntu/.aria2/aria2.conf -D<br></code></pre></td></tr></table></figure><h3 id="设置aria2开机自动启动"><a href="#设置aria2开机自动启动" class="headerlink" title="设置aria2开机自动启动"></a>设置aria2开机自动启动</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-built_in">sudo</span> vi /etc/rc.local<br></code></pre></td></tr></table></figure><p>在最下面加入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">aria2c --conf-path=/home/ubuntu/.aria2/aria2.conf -D &amp;<br></code></pre></td></tr></table></figure><h2 id="安装AriaNg"><a href="#安装AriaNg" class="headerlink" title="安装AriaNg"></a>安装AriaNg</h2><h3 id="先要安装http服务"><a href="#先要安装http服务" class="headerlink" title="先要安装http服务"></a>先要安装http服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-built_in">sudo</span> apt install -y apache2<br></code></pre></td></tr></table></figure><h3 id="修改apache2默认文件夹"><a href="#修改apache2默认文件夹" class="headerlink" title="修改apache2默认文件夹"></a>修改apache2默认文件夹</h3><p>apache2的默认文件夹在<code>/var/www/html</code>，平时使用不方便，因而改为<code>/home/ubuntu/webroot</code>，方法如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-built_in">mkdir</span> ~/webroot<br><span class="hljs-built_in">sudo</span> vi /etc/apache2/apache2.conf<br></code></pre></td></tr></table></figure><p>找到</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs HTML"><span class="hljs-tag">&lt;<span class="hljs-name">Directory</span> /<span class="hljs-attr">var</span>/<span class="hljs-attr">www</span>/&gt;</span><br>        Options Indexes FollowSymLinks<br>        AllowOverride None<br>        Require all granted<br><span class="hljs-tag">&lt;/<span class="hljs-name">Directory</span>&gt;</span><br></code></pre></td></tr></table></figure><p>在其下方添加以下内容并保存退出</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs HTML"><span class="hljs-tag">&lt;<span class="hljs-name">Directory</span> /<span class="hljs-attr">home</span>/<span class="hljs-attr">ubuntu</span>/<span class="hljs-attr">webroot</span>&gt;</span><br>        Options Indexes FollowSymLinks MultiViews<br>        AllowOverride All<br>        Require all granted<br><span class="hljs-tag">&lt;/<span class="hljs-name">Directory</span>&gt;</span><br></code></pre></td></tr></table></figure><p>然后修改<code>000-default.conf</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-built_in">sudo</span> vi /etc/apache2/sites-available/000-default.conf<br></code></pre></td></tr></table></figure><p>找到<code>DocumentRoot /var/www/html</code>，改为<code>DocumentRoot /home/ubuntu/webroot</code>即可</p><h3 id="下载AriaNg"><a href="#下载AriaNg" class="headerlink" title="下载AriaNg"></a>下载AriaNg</h3><p>AriaNg 是一个让 aria2 更容易使用的现代 Web 前端</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-built_in">cd</span> ~/webroot<br><span class="hljs-built_in">mkdir</span> AriaNg<br><span class="hljs-built_in">cd</span> AriaNg<br>wget https://github.com/mayswind/AriaNg/releases/download/1.1.4/AriaNg-1.1.4.zip<br>unzip AriaNg-1.1.4.zip<br><span class="hljs-built_in">rm</span> AriaNg-1.1.4.zip<br></code></pre></td></tr></table></figure><h2 id="搭建h5ai"><a href="#搭建h5ai" class="headerlink" title="搭建h5ai"></a>搭建h5ai</h2><h3 id="安装php服务"><a href="#安装php服务" class="headerlink" title="安装php服务"></a>安装php服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-built_in">sudo</span> apt install -y php libapache2-mod-php<br><span class="hljs-built_in">sudo</span> /etc/init.d/apache2 restart<br></code></pre></td></tr></table></figure><h3 id="下载h5ai"><a href="#下载h5ai" class="headerlink" title="下载h5ai"></a>下载h5ai</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-built_in">cd</span> ~/webroot<br>wget https://release.larsjung.de/h5ai/h5ai-0.29.2.zip<br>unzip h5ai-0.29.2.zip<br><span class="hljs-built_in">rm</span> h5ai-0.29.2.zip<br></code></pre></td></tr></table></figure><h3 id="修改-apache-配置文件"><a href="#修改-apache-配置文件" class="headerlink" title="修改 apache 配置文件"></a>修改 apache 配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-built_in">sudo</span> vi /etc/apache2/mods-available/dir.conf<br></code></pre></td></tr></table></figure><p>将<code>DirectoryIndex index.html index.cgi index.pl index.php index.xhtml index.htm</code>改成：</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs axapta">DirectoryIndex <span class="hljs-keyword">index</span> <span class="hljs-keyword">index</span>.html <span class="hljs-keyword">index</span>.php /_h5ai/<span class="hljs-keyword">public</span>/<span class="hljs-keyword">index</span>.php<br></code></pre></td></tr></table></figure><h3 id="添加用户名和密码"><a href="#添加用户名和密码" class="headerlink" title="添加用户名和密码"></a>添加用户名和密码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">vi /home/ubuntu/webroot/_h5ai/public/index.php<br></code></pre></td></tr></table></figure><p>在第二行，也就是<code>&lt;?php</code>下面添加一行，内容为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs PHP"><span class="hljs-title function_ invoke__">passwd</span>();<br></code></pre></td></tr></table></figure><p>在最下面另起一行添加以下内容：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs PHP"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">passwd</span>(<span class="hljs-params"></span>)</span>&#123;<br>    <span class="hljs-variable">$user</span>=<span class="hljs-keyword">array</span>(<span class="hljs-string">&#x27;用户名&#x27;</span>,<span class="hljs-string">&#x27;密码&#x27;</span>);<br>    <span class="hljs-keyword">if</span>(!(<span class="hljs-variable">$user</span>[<span class="hljs-number">0</span>]===<span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&#x27;PHP_AUTH_USER&#x27;</span>] &amp;&amp; <span class="hljs-variable">$user</span>[<span class="hljs-number">1</span>]===<span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&#x27;PHP_AUTH_PW&#x27;</span>]))&#123;<br>        <span class="hljs-title function_ invoke__">header</span>(<span class="hljs-string">&#x27;WWW-Authenticate: Basic realm=&quot;138vps&quot;&#x27;</span>);<br>        <span class="hljs-title function_ invoke__">header</span>(<span class="hljs-string">&#x27;HTTP/1.0 401 Unauthorized&#x27;</span>);<br>        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;please login&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>其中用户名和密码改为你自己的，此为登陆h5ai之用</p><h3 id="修改相关权限"><a href="#修改相关权限" class="headerlink" title="修改相关权限"></a>修改相关权限</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-built_in">sudo</span> <span class="hljs-built_in">chmod</span> 777 -R /home/ubuntu/webroot<br></code></pre></td></tr></table></figure><h3 id="重启apache服务器"><a href="#重启apache服务器" class="headerlink" title="重启apache服务器"></a>重启apache服务器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-built_in">sudo</span> /etc/init.d/apache2 restart<br></code></pre></td></tr></table></figure><p>至此，服务上的配置完毕</p><h2 id="网页使用h5ai及AriaNg教程"><a href="#网页使用h5ai及AriaNg教程" class="headerlink" title="网页使用h5ai及AriaNg教程"></a>网页使用h5ai及AriaNg教程</h2><h2 id="h5ai"><a href="#h5ai" class="headerlink" title="h5ai"></a>h5ai</h2><p>在浏览器中直接输入你服务器的 ip，在以下弹窗中输入<a href="#添加用户名和密码">上面</a>设置的用户名及密码即可进入 h5ai 界面</p><p><img src="/img/article_image/2020/2020-03-06/01.webp" alt="登陆界面"></p><p>登陆后界面如下：</p><p><img src="/img/article_image/2020/2020-03-06/02.webp" alt="h5ai界面"></p><p><code>download</code> 文件夹为下载的电影</p><h2 id="AriaNg"><a href="#AriaNg" class="headerlink" title="AriaNg"></a>AriaNg</h2><p>点击页面上的 <code>AriaNg</code> 即可跳转进入 AriaNg 页面</p><p>点击AriaNg页面左边的 <code>AriaNg设置</code>，切换到 <code>RPC</code> 选项卡，找到下面的 <code>Aria2 RPC密钥</code>，填入<a href="#修改配置文件">修改配置文件</a>设置的密钥，然后点击页面右上角的 <code>重新加载AriaNg</code> 即可</p><p>连接成功后，尽情下载影片，然后打开h5ai的download文件夹在线看电影吧</p>]]></content>
    
    
    <categories>
      
      <category>IT</category>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>Aria2</tag>
      
      <tag>h5ai</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Ubuntu Server 安装 Jupyter Notebook</title>
    <link href="/2020/03/ubuntujupyter/"/>
    <url>/2020/03/ubuntujupyter/</url>
    
    <content type="html"><![CDATA[<blockquote><p>记录 Ubuntu Server 安装 Jupyter Notebook 的过程<br>基于阿里云 Ubuntu Server 18<br>参考文献：<a href="https://yq.aliyun.com/articles/441132"><strong>远程访问jupyter notebook</strong></a></p></blockquote><span id="more"></span><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>输入<code>python3 -V</code>确认Python版本是否大于3.5，并安装pip3</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-built_in">sudo</span> apt install python3-pip<br></code></pre></td></tr></table></figure><h2 id="安装Jupyter-Notebook"><a href="#安装Jupyter-Notebook" class="headerlink" title="安装Jupyter Notebook"></a>安装Jupyter Notebook</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-built_in">sudo</span> pip3 install jupyter<br></code></pre></td></tr></table></figure><h2 id="配置Python"><a href="#配置Python" class="headerlink" title="配置Python"></a>配置Python</h2><h3 id="生成配置文件"><a href="#生成配置文件" class="headerlink" title="生成配置文件"></a>生成配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">jupyter notebook --generate-config<br></code></pre></td></tr></table></figure><h3 id="生成密码"><a href="#生成密码" class="headerlink" title="生成密码"></a>生成密码</h3><p>输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">python3<br></code></pre></td></tr></table></figure><p>并在python命令行中输入：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">from</span> notebook.auth <span class="hljs-keyword">import</span> passwd<br>passwd()<br></code></pre></td></tr></table></figure><p>然后输入两次设定的密码</p><p>把生成的密文<code>sha1:6e7b1d14fec9:4117f11a1fc7bf6613fcca869c2c3d99a4fb7cf6</code>复制下来</p><h3 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">vi ~/.jupyter/jupyter_notebook_config.py<br></code></pre></td></tr></table></figure><p>并找到以下条目并修改：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs Python">c.NotebookApp.ip=<span class="hljs-string">&#x27;*&#x27;</span><br>c.NotebookApp.password = <span class="hljs-string">u&#x27;sha:6e...刚才复制的那个密文&#x27;</span><br>c.NotebookApp.open_browser = <span class="hljs-literal">False</span><br>c.NotebookApp.port =<span class="hljs-number">8888</span> <span class="hljs-comment">#随便指定一个端口，不要是443和80等重要端口</span><br></code></pre></td></tr></table></figure><h3 id="添加自动补全功能的插件"><a href="#添加自动补全功能的插件" class="headerlink" title="添加自动补全功能的插件"></a>添加自动补全功能的插件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs Bash">pip install jupyter_contrib_nbextensions<br>jupyter contrib nbextension install<br>pip install jupyter_nbextensions_configurator<br>jupyter nbextensions_configurator <span class="hljs-built_in">enable</span><br></code></pre></td></tr></table></figure><h3 id="启动Jupyter-Notebook"><a href="#启动Jupyter-Notebook" class="headerlink" title="启动Jupyter Notebook"></a>启动Jupyter Notebook</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">jupyter notebook<br></code></pre></td></tr></table></figure><p>如果是用的root账户，用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">jupyter notebook --allow-root<br></code></pre></td></tr></table></figure><h3 id="启用补全功能"><a href="#启用补全功能" class="headerlink" title="启用补全功能"></a>启用补全功能</h3><p>在阿里云中打开相应端口即可通过<code>ip:端口</code>访问Jupyter Notebook</p><p>能看到增加了一个 <code>Nbextensions</code> 标签页，在这个页面里，勾选 <code>Hinterland</code> 即可</p>]]></content>
    
    
    <categories>
      
      <category>IT</category>
      
      <category>Python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>Python</tag>
      
      <tag>Jupyter</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>饥荒联机版 WX-78 雷击超载时间计算公式</title>
    <link href="/2020/02/wx78lightning/"/>
    <url>/2020/02/wx78lightning/</url>
    
    <content type="html"><![CDATA[<h2 id="WX-78被雷击之后超载时间一直是个谜"><a href="#WX-78被雷击之后超载时间一直是个谜" class="headerlink" title="WX-78被雷击之后超载时间一直是个谜"></a>WX-78被雷击之后超载时间一直是个谜</h2><p>博主提取饥荒联机版内部<code>Lua</code>代码，写了一个计算超载时间的公式，点击下面按钮输入雷击天数即可</p><span id="more"></span><p><strong>注意</strong>：</p><ul><li>每次雷击后获得的时间是一个范围内的<strong>随机数</strong>，故我们得到的是<strong>平均值</strong>和<strong>上下范围</strong></li><li>此方法从未超载状态算起</li></ul><script>function get_times() {    var lightning = prompt("请输入WX-78的雷击次数","");    if (lightning != null){        lightning = Number(lightning);     　 if (!isNaN(lightning)){            function CalcDiminishingReturns0(current, basedelta) {                var dampen = 3 * basedelta / (current + 3 * basedelta);                var dcharge = dampen * basedelta * .5;                return current + dcharge;            }            function CalcDiminishingReturns1(current, basedelta) {                var dampen = 3 * basedelta / (current + 3 * basedelta);                var dcharge = dampen * basedelta * .5 * (1 + dampen);                return current + dcharge;            }            var output0 = 0;            var output1 = 0;            var i;            for (i = 0; i < lightning; i++) {                output0 = CalcDiminishingReturns0(output0,480);                output1 = CalcDiminishingReturns1(output1,480);            }            var output = (output0 + output1) / 2;            text = 'WX78被雷击'+lightning+'次后获得约'+Math.round(output/480)+'天的负载（'+Math.round(output)+'秒）\n范围为'+Math.round(output0)+'至'+Math.round(output1)+'秒';            alert(text);        }else{            alert("请输入数字");        }    }}</script><input type="button" onClick="get_times()" value="点击按钮"><h2 id="另附表格"><a href="#另附表格" class="headerlink" title="另附表格"></a>另附表格</h2><table><thead><tr><th>雷击次数</th><th>平均超载天数</th><th>平均超载秒数</th><th>最少超载秒数</th><th>最多超载秒数</th></tr></thead><tbody><tr><td>10</td><td>4</td><td>1922</td><td>1602</td><td>2242</td></tr><tr><td>20</td><td>6</td><td>2973</td><td>2593</td><td>3353</td></tr><tr><td>30</td><td>8</td><td>3793</td><td>3381</td><td>4206</td></tr><tr><td>40</td><td>9</td><td>4490</td><td>4055</td><td>4925</td></tr><tr><td>50</td><td>11</td><td>5106</td><td>4655</td><td>5557</td></tr><tr><td>60</td><td>12</td><td>5664</td><td>5200</td><td>6128</td></tr><tr><td>70</td><td>13</td><td>6178</td><td>5703</td><td>6652</td></tr><tr><td>80</td><td>14</td><td>6657</td><td>6173</td><td>7140</td></tr><tr><td>90</td><td>15</td><td>7107</td><td>6616</td><td>7598</td></tr><tr><td>100</td><td>16</td><td>7533</td><td>7035</td><td>8031</td></tr><tr><td>110</td><td>17</td><td>7938</td><td>7434</td><td>8442</td></tr><tr><td>120</td><td>17</td><td>8325</td><td>7816</td><td>8835</td></tr><tr><td>130</td><td>18</td><td>8697</td><td>8183</td><td>9211</td></tr><tr><td>140</td><td>19</td><td>9055</td><td>8536</td><td>9573</td></tr><tr><td>150</td><td>20</td><td>9400</td><td>8877</td><td>9923</td></tr><tr><td>160</td><td>20</td><td>9734</td><td>9208</td><td>10260</td></tr><tr><td>170</td><td>21</td><td>10058</td><td>9528</td><td>10588</td></tr><tr><td>180</td><td>22</td><td>10372</td><td>9839</td><td>10905</td></tr><tr><td>190</td><td>22</td><td>10678</td><td>10142</td><td>11214</td></tr><tr><td>200</td><td>23</td><td>10976</td><td>10437</td><td>11515</td></tr><tr><td>210</td><td>23</td><td>11266</td><td>10725</td><td>11808</td></tr><tr><td>220</td><td>24</td><td>11550</td><td>11006</td><td>12094</td></tr><tr><td>230</td><td>25</td><td>11827</td><td>11281</td><td>12374</td></tr><tr><td>240</td><td>25</td><td>12099</td><td>11550</td><td>12647</td></tr><tr><td>250</td><td>26</td><td>12364</td><td>11814</td><td>12915</td></tr><tr><td>260</td><td>26</td><td>12625</td><td>12072</td><td>13178</td></tr><tr><td>270</td><td>27</td><td>12880</td><td>12326</td><td>13435</td></tr><tr><td>280</td><td>27</td><td>13131</td><td>12575</td><td>13688</td></tr><tr><td>290</td><td>28</td><td>13378</td><td>12819</td><td>13936</td></tr><tr><td>300</td><td>28</td><td>13620</td><td>13060</td><td>14180</td></tr><tr><td>310</td><td>29</td><td>13858</td><td>13297</td><td>14420</td></tr><tr><td>320</td><td>29</td><td>14093</td><td>13529</td><td>14656</td></tr><tr><td>330</td><td>30</td><td>14323</td><td>13759</td><td>14888</td></tr><tr><td>340</td><td>30</td><td>14551</td><td>13985</td><td>15117</td></tr><tr><td>350</td><td>31</td><td>14775</td><td>14207</td><td>15342</td></tr><tr><td>360</td><td>31</td><td>14996</td><td>14427</td><td>15564</td></tr><tr><td>370</td><td>32</td><td>15213</td><td>14643</td><td>15784</td></tr><tr><td>380</td><td>32</td><td>15428</td><td>14857</td><td>16000</td></tr><tr><td>390</td><td>33</td><td>15640</td><td>15068</td><td>16213</td></tr><tr><td>400</td><td>33</td><td>15850</td><td>15276</td><td>16423</td></tr><tr><td>410</td><td>33</td><td>16056</td><td>15481</td><td>16631</td></tr><tr><td>420</td><td>34</td><td>16261</td><td>15685</td><td>16837</td></tr><tr><td>430</td><td>34</td><td>16462</td><td>15885</td><td>17040</td></tr><tr><td>440</td><td>35</td><td>16662</td><td>16084</td><td>17240</td></tr><tr><td>450</td><td>35</td><td>16859</td><td>16280</td><td>17438</td></tr><tr><td>460</td><td>36</td><td>17054</td><td>16474</td><td>17634</td></tr><tr><td>470</td><td>36</td><td>17247</td><td>16666</td><td>17828</td></tr><tr><td>480</td><td>36</td><td>17438</td><td>16856</td><td>18020</td></tr><tr><td>490</td><td>37</td><td>17627</td><td>17044</td><td>18210</td></tr><tr><td>500</td><td>37</td><td>17814</td><td>17230</td><td>18398</td></tr><tr><td>510</td><td>37</td><td>17999</td><td>17414</td><td>18584</td></tr><tr><td>520</td><td>38</td><td>18183</td><td>17597</td><td>18768</td></tr><tr><td>530</td><td>38</td><td>18364</td><td>17778</td><td>18951</td></tr><tr><td>540</td><td>39</td><td>18544</td><td>17957</td><td>19131</td></tr><tr><td>550</td><td>39</td><td>18722</td><td>18134</td><td>19310</td></tr><tr><td>560</td><td>39</td><td>18899</td><td>18310</td><td>19488</td></tr><tr><td>570</td><td>40</td><td>19074</td><td>18484</td><td>19663</td></tr><tr><td>580</td><td>40</td><td>19247</td><td>18657</td><td>19838</td></tr><tr><td>590</td><td>40</td><td>19419</td><td>18828</td><td>20010</td></tr><tr><td>600</td><td>41</td><td>19590</td><td>18998</td><td>20182</td></tr><tr><td>610</td><td>41</td><td>19759</td><td>19167</td><td>20352</td></tr><tr><td>620</td><td>42</td><td>19927</td><td>19334</td><td>20520</td></tr><tr><td>630</td><td>42</td><td>20093</td><td>19500</td><td>20687</td></tr><tr><td>640</td><td>42</td><td>20259</td><td>19664</td><td>20853</td></tr><tr><td>650</td><td>43</td><td>20422</td><td>19827</td><td>21017</td></tr><tr><td>660</td><td>43</td><td>20585</td><td>19989</td><td>21181</td></tr><tr><td>670</td><td>43</td><td>20746</td><td>20150</td><td>21342</td></tr><tr><td>680</td><td>44</td><td>20906</td><td>20310</td><td>21503</td></tr><tr><td>690</td><td>44</td><td>21065</td><td>20468</td><td>21663</td></tr><tr><td>700</td><td>44</td><td>21223</td><td>20625</td><td>21821</td></tr><tr><td>710</td><td>45</td><td>21380</td><td>20781</td><td>21978</td></tr><tr><td>720</td><td>45</td><td>21535</td><td>20936</td><td>22135</td></tr><tr><td>730</td><td>45</td><td>21690</td><td>21090</td><td>22290</td></tr><tr><td>740</td><td>46</td><td>21843</td><td>21243</td><td>22444</td></tr><tr><td>750</td><td>46</td><td>21996</td><td>21395</td><td>22597</td></tr><tr><td>760</td><td>46</td><td>22147</td><td>21546</td><td>22749</td></tr><tr><td>770</td><td>46</td><td>22298</td><td>21696</td><td>22899</td></tr><tr><td>780</td><td>47</td><td>22447</td><td>21845</td><td>23049</td></tr><tr><td>790</td><td>47</td><td>22596</td><td>21993</td><td>23198</td></tr><tr><td>800</td><td>47</td><td>22743</td><td>22140</td><td>23346</td></tr><tr><td>810</td><td>48</td><td>22890</td><td>22286</td><td>23494</td></tr><tr><td>820</td><td>48</td><td>23036</td><td>22431</td><td>23640</td></tr><tr><td>830</td><td>48</td><td>23180</td><td>22576</td><td>23785</td></tr><tr><td>840</td><td>49</td><td>23324</td><td>22719</td><td>23930</td></tr><tr><td>850</td><td>49</td><td>23468</td><td>22862</td><td>24073</td></tr><tr><td>860</td><td>49</td><td>23610</td><td>23004</td><td>24216</td></tr><tr><td>870</td><td>49</td><td>23751</td><td>23145</td><td>24358</td></tr><tr><td>880</td><td>50</td><td>23892</td><td>23285</td><td>24499</td></tr><tr><td>890</td><td>50</td><td>24032</td><td>23424</td><td>24639</td></tr><tr><td>900</td><td>50</td><td>24171</td><td>23563</td><td>24779</td></tr><tr><td>910</td><td>51</td><td>24309</td><td>23701</td><td>24917</td></tr><tr><td>920</td><td>51</td><td>24447</td><td>23838</td><td>25055</td></tr><tr><td>930</td><td>51</td><td>24583</td><td>23975</td><td>25192</td></tr><tr><td>940</td><td>51</td><td>24720</td><td>24110</td><td>25329</td></tr><tr><td>950</td><td>52</td><td>24855</td><td>24245</td><td>25465</td></tr><tr><td>960</td><td>52</td><td>24989</td><td>24379</td><td>25600</td></tr><tr><td>970</td><td>52</td><td>25123</td><td>24513</td><td>25734</td></tr><tr><td>980</td><td>53</td><td>25257</td><td>24646</td><td>25868</td></tr><tr><td>990</td><td>53</td><td>25389</td><td>24778</td><td>26000</td></tr><tr><td>1000</td><td>53</td><td>25521</td><td>24909</td><td>26133</td></tr><tr><td>1010</td><td>53</td><td>25652</td><td>25040</td><td>26264</td></tr><tr><td>1020</td><td>54</td><td>25783</td><td>25171</td><td>26395</td></tr><tr><td>1030</td><td>54</td><td>25913</td><td>25300</td><td>26526</td></tr><tr><td>1040</td><td>54</td><td>26042</td><td>25429</td><td>26655</td></tr><tr><td>1050</td><td>55</td><td>26171</td><td>25557</td><td>26784</td></tr><tr><td>1060</td><td>55</td><td>26299</td><td>25685</td><td>26913</td></tr><tr><td>1070</td><td>55</td><td>26426</td><td>25812</td><td>27040</td></tr><tr><td>1080</td><td>55</td><td>26553</td><td>25939</td><td>27168</td></tr><tr><td>1090</td><td>56</td><td>26680</td><td>26065</td><td>27294</td></tr><tr><td>1100</td><td>56</td><td>26805</td><td>26190</td><td>27420</td></tr><tr><td>1110</td><td>56</td><td>26930</td><td>26315</td><td>27546</td></tr><tr><td>1120</td><td>56</td><td>27055</td><td>26439</td><td>27671</td></tr><tr><td>1130</td><td>57</td><td>27179</td><td>26563</td><td>27795</td></tr><tr><td>1140</td><td>57</td><td>27303</td><td>26686</td><td>27919</td></tr><tr><td>1150</td><td>57</td><td>27425</td><td>26809</td><td>28042</td></tr><tr><td>1160</td><td>57</td><td>27548</td><td>26931</td><td>28165</td></tr><tr><td>1170</td><td>58</td><td>27670</td><td>27053</td><td>28287</td></tr><tr><td>1180</td><td>58</td><td>27791</td><td>27174</td><td>28409</td></tr><tr><td>1190</td><td>58</td><td>27912</td><td>27294</td><td>28530</td></tr><tr><td>1200</td><td>58</td><td>28032</td><td>27414</td><td>28650</td></tr><tr><td>1210</td><td>59</td><td>28152</td><td>27534</td><td>28771</td></tr><tr><td>1220</td><td>59</td><td>28271</td><td>27653</td><td>28890</td></tr><tr><td>1230</td><td>59</td><td>28390</td><td>27771</td><td>29009</td></tr><tr><td>1240</td><td>59</td><td>28509</td><td>27889</td><td>29128</td></tr><tr><td>1250</td><td>60</td><td>28627</td><td>28007</td><td>29246</td></tr><tr><td>1260</td><td>60</td><td>28744</td><td>28124</td><td>29364</td></tr><tr><td>1270</td><td>60</td><td>28861</td><td>28241</td><td>29481</td></tr><tr><td>1280</td><td>60</td><td>28977</td><td>28357</td><td>29598</td></tr><tr><td>1290</td><td>61</td><td>29094</td><td>28473</td><td>29714</td></tr><tr><td>1300</td><td>61</td><td>29209</td><td>28588</td><td>29830</td></tr><tr><td>1310</td><td>61</td><td>29324</td><td>28703</td><td>29945</td></tr><tr><td>1320</td><td>61</td><td>29439</td><td>28818</td><td>30060</td></tr><tr><td>1330</td><td>62</td><td>29553</td><td>28932</td><td>30175</td></tr><tr><td>1340</td><td>62</td><td>29667</td><td>29045</td><td>30289</td></tr><tr><td>1350</td><td>62</td><td>29781</td><td>29158</td><td>30403</td></tr><tr><td>1360</td><td>62</td><td>29894</td><td>29271</td><td>30516</td></tr><tr><td>1370</td><td>63</td><td>30006</td><td>29384</td><td>30629</td></tr><tr><td>1380</td><td>63</td><td>30118</td><td>29495</td><td>30741</td></tr><tr><td>1390</td><td>63</td><td>30230</td><td>29607</td><td>30853</td></tr><tr><td>1400</td><td>63</td><td>30341</td><td>29718</td><td>30965</td></tr><tr><td>1410</td><td>63</td><td>30452</td><td>29829</td><td>31076</td></tr><tr><td>1420</td><td>64</td><td>30563</td><td>29939</td><td>31187</td></tr><tr><td>1430</td><td>64</td><td>30673</td><td>30049</td><td>31297</td></tr><tr><td>1440</td><td>64</td><td>30783</td><td>30159</td><td>31407</td></tr><tr><td>1450</td><td>64</td><td>30892</td><td>30268</td><td>31517</td></tr><tr><td>1460</td><td>65</td><td>31002</td><td>30377</td><td>31626</td></tr><tr><td>1470</td><td>65</td><td>31110</td><td>30485</td><td>31735</td></tr><tr><td>1480</td><td>65</td><td>31219</td><td>30593</td><td>31844</td></tr><tr><td>1490</td><td>65</td><td>31326</td><td>30701</td><td>31952</td></tr><tr><td>1500</td><td>65</td><td>31434</td><td>30808</td><td>32060</td></tr><tr><td>1510</td><td>66</td><td>31541</td><td>30915</td><td>32167</td></tr><tr><td>1520</td><td>66</td><td>31648</td><td>31022</td><td>32274</td></tr><tr><td>1530</td><td>66</td><td>31755</td><td>31128</td><td>32381</td></tr><tr><td>1540</td><td>66</td><td>31861</td><td>31234</td><td>32487</td></tr><tr><td>1550</td><td>67</td><td>31967</td><td>31340</td><td>32593</td></tr><tr><td>1560</td><td>67</td><td>32072</td><td>31445</td><td>32699</td></tr><tr><td>1570</td><td>67</td><td>32177</td><td>31550</td><td>32804</td></tr><tr><td>1580</td><td>67</td><td>32282</td><td>31655</td><td>32909</td></tr><tr><td>1590</td><td>67</td><td>32387</td><td>31759</td><td>33014</td></tr><tr><td>1600</td><td>68</td><td>32491</td><td>31863</td><td>33118</td></tr><tr><td>1610</td><td>68</td><td>32595</td><td>31967</td><td>33222</td></tr><tr><td>1620</td><td>68</td><td>32698</td><td>32070</td><td>33326</td></tr><tr><td>1630</td><td>68</td><td>32801</td><td>32173</td><td>33429</td></tr><tr><td>1640</td><td>69</td><td>32904</td><td>32276</td><td>33533</td></tr><tr><td>1650</td><td>69</td><td>33007</td><td>32378</td><td>33635</td></tr><tr><td>1660</td><td>69</td><td>33109</td><td>32480</td><td>33738</td></tr><tr><td>1670</td><td>69</td><td>33211</td><td>32582</td><td>33840</td></tr><tr><td>1680</td><td>69</td><td>33312</td><td>32683</td><td>33942</td></tr><tr><td>1690</td><td>70</td><td>33414</td><td>32784</td><td>34043</td></tr><tr><td>1700</td><td>70</td><td>33515</td><td>32885</td><td>34144</td></tr><tr><td>1710</td><td>70</td><td>33616</td><td>32986</td><td>34245</td></tr><tr><td>1720</td><td>70</td><td>33716</td><td>33086</td><td>34346</td></tr><tr><td>1730</td><td>70</td><td>33816</td><td>33186</td><td>34446</td></tr><tr><td>1740</td><td>71</td><td>33916</td><td>33286</td><td>34546</td></tr><tr><td>1750</td><td>71</td><td>34016</td><td>33385</td><td>34646</td></tr><tr><td>1760</td><td>71</td><td>34115</td><td>33484</td><td>34746</td></tr><tr><td>1770</td><td>71</td><td>34214</td><td>33583</td><td>34845</td></tr><tr><td>1780</td><td>71</td><td>34313</td><td>33682</td><td>34944</td></tr><tr><td>1790</td><td>72</td><td>34411</td><td>33780</td><td>35042</td></tr><tr><td>1800</td><td>72</td><td>34509</td><td>33878</td><td>35141</td></tr><tr><td>1810</td><td>72</td><td>34607</td><td>33976</td><td>35239</td></tr><tr><td>1820</td><td>72</td><td>34705</td><td>34073</td><td>35336</td></tr><tr><td>1830</td><td>73</td><td>34802</td><td>34170</td><td>35434</td></tr><tr><td>1840</td><td>73</td><td>34899</td><td>34267</td><td>35531</td></tr><tr><td>1850</td><td>73</td><td>34996</td><td>34364</td><td>35628</td></tr><tr><td>1860</td><td>73</td><td>35093</td><td>34460</td><td>35725</td></tr><tr><td>1870</td><td>73</td><td>35189</td><td>34556</td><td>35821</td></tr><tr><td>1880</td><td>74</td><td>35285</td><td>34652</td><td>35918</td></tr><tr><td>1890</td><td>74</td><td>35381</td><td>34748</td><td>36014</td></tr><tr><td>1900</td><td>74</td><td>35476</td><td>34843</td><td>36109</td></tr><tr><td>1910</td><td>74</td><td>35572</td><td>34939</td><td>36205</td></tr><tr><td>1920</td><td>74</td><td>35667</td><td>35033</td><td>36300</td></tr><tr><td>1930</td><td>75</td><td>35762</td><td>35128</td><td>36395</td></tr><tr><td>1940</td><td>75</td><td>35856</td><td>35222</td><td>36490</td></tr><tr><td>1950</td><td>75</td><td>35950</td><td>35317</td><td>36584</td></tr><tr><td>1960</td><td>75</td><td>36044</td><td>35411</td><td>36678</td></tr><tr><td>1970</td><td>75</td><td>36138</td><td>35504</td><td>36772</td></tr><tr><td>1980</td><td>75</td><td>36232</td><td>35598</td><td>36866</td></tr><tr><td>1990</td><td>76</td><td>36325</td><td>35691</td><td>36960</td></tr><tr><td>2000</td><td>76</td><td>36418</td><td>35784</td><td>37053</td></tr></tbody></table>]]></content>
    
    
    <categories>
      
      <category>游戏</category>
      
      <category>饥荒</category>
      
    </categories>
    
    
    <tags>
      
      <tag>饥荒</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>饥荒『荒野求生』服务器箱子等容器记录</title>
    <link href="/chest/"/>
    <url>/chest/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>以下记录各个世界所有的箱子等容器的变化，正数为放入箱子，负数为从箱子取出，望各位互相监督（文件通过 Python 自动生成）</p><span id="more"></span><script>    function getDay(num, str) {        var today = new Date();        var nowTime = today.getTime();        var ms = 24*3600*1000*num;        today.setTime(parseInt(nowTime + ms));        var oYear = today.getFullYear();        var oMoth = (today.getMonth() + 1).toString();        if (oMoth.length <= 1) oMoth = '0' + oMoth;        var oDay = today.getDate().toString();        if (oDay.length <= 1) oDay = '0' + oDay;        return oYear + str + oMoth + str + oDay;    }</script><script>window.onload = function(){    document.getElementById('datePicker').value=getDay(-1, '-')    document.getElementById('datePicker').max=getDay(-1, '-')    document.getElementById('datePicker').min=getDay(-30, '-')};</script><script>    function doit() {        var the_date = document.getElementById('datePicker').value        window.open('/attachments/chestrecord/' + the_date + '.xlsx')    }</script><div>    <p>请在下方选择要访问的日期</p>    <input type="date" id = "datePicker" value="" /></div><br><div>      <input type="button" onClick="doit()" value="获取记录" style = "display: inline-block; padding: 5px 15px; cursor: pointer; text-align: center; text-decoration: none; outline: none; color: #fff; background-color: #4CAF50; border: none; border-radius: 15px; box-shadow: 0 4px #999;"></div>]]></content>
    
    
    <categories>
      
      <category>游戏</category>
      
      <category>饥荒</category>
      
    </categories>
    
    
    <tags>
      
      <tag>饥荒</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python 码云自动更新脚本</title>
    <link href="/2020/02/giteeautoupdate/"/>
    <url>/2020/02/giteeautoupdate/</url>
    
    <content type="html"><![CDATA[<blockquote><p>最近每日需要更新饥荒游戏服务器的一些信息，用crontab自动运行hexo命令后，因为码云需要登陆网页手动点击更新，又不想花钱充码云Pro，所以就用python写了一个自动点击更新的脚本，每天自动运行即可<br>基于Ubuntu18</p></blockquote><span id="more"></span><h2 id="Python的前提要求"><a href="#Python的前提要求" class="headerlink" title="Python的前提要求"></a>Python的前提要求</h2><p>因为是用Python的selenium模块，该模块要求Python3.5以上。</p><p>Ubuntu 16+的系统预装的是Python3.5+，故已达标；如果是其他Linux发行版本请输入<code>python3 -V</code>确认Python版本，若未达标请自行安装</p><h2 id="安装pip3"><a href="#安装pip3" class="headerlink" title="安装pip3"></a>安装pip3</h2><p><code>pip3</code>是安装Python模块的工具，输入 <code>pip3 -V</code> 确认是否安装，如未安装，请先安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-built_in">sudo</span> apt install python3-pip<br></code></pre></td></tr></table></figure><h2 id="安装selenium模块"><a href="#安装selenium模块" class="headerlink" title="安装selenium模块"></a>安装selenium模块</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-built_in">sudo</span> pip3 install selenium<br></code></pre></td></tr></table></figure><h2 id="安装火狐"><a href="#安装火狐" class="headerlink" title="安装火狐"></a>安装火狐</h2><p><code>selenium</code>模块需要调用火狐浏览器来访问网页，输入<code>firefox -V</code>确认火狐是否安装，如未安装，请先安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-built_in">sudo</span> apt install firefox<br></code></pre></td></tr></table></figure><h2 id="Geckodriver"><a href="#Geckodriver" class="headerlink" title="Geckodriver"></a>Geckodriver</h2><p><code>Geckdriver</code>是把Python和火狐浏览器联动起来的文件，去<a href="https://github.com/mozilla/geckodriver/releases">Geckodriver的Github项目</a>根据你的火狐浏览器版本下载</p><p>我用的是<code>Firefox 72.0.2</code>因此我下载<code>0.26.0</code>版本的<code>geckodriver</code>：输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">wget https://github.com/mozilla/geckodriver/releases/download/v0.26.0/geckodriver-v0.26.0-linux64.tar.gz<br></code></pre></td></tr></table></figure><p>然后解压</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">tar xzf geckodriver*.tar.gz<br></code></pre></td></tr></table></figure><p>移动到环境变量目录，这里我选择<code>/usr/local/bin</code>目录，输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-built_in">sudo</span> <span class="hljs-built_in">mv</span> geckodriver /usr/local/bin/<br></code></pre></td></tr></table></figure><h2 id="测试环境部署是否成功"><a href="#测试环境部署是否成功" class="headerlink" title="测试环境部署是否成功"></a>测试环境部署是否成功</h2><p>输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">python3<br></code></pre></td></tr></table></figure><p>在python命令行中依次输入</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">from</span> selenium <span class="hljs-keyword">import</span> webdriver<br><span class="hljs-keyword">from</span> selenium.webdriver.firefox.options <span class="hljs-keyword">import</span> Options<br>firefox_options = Options()<br>firefox_options.add_argument(<span class="hljs-string">&#x27;-headless&#x27;</span>)<br>driver = webdriver.Firefox(options=firefox_options)<br></code></pre></td></tr></table></figure><p>如果没有报错，说明环境部署成功</p><h2 id="获取Cookie"><a href="#获取Cookie" class="headerlink" title="获取Cookie"></a>获取Cookie</h2><p>获取Cookie后，以后可以用Cookie自动登陆码云，不需再输入密码及验证码，步骤如下：</p><p>打开浏览器（火狐和chrome都可以，我本地计算机安装的是Chrome，这里就以chrome为例），打开码云，登陆后进入码云自动部署页面的链接，就是你的项目里点服务-&gt;Gitee Pages进入的页面，页面中有一个橙色的<code>更新</code>按钮就对了，网址一般为<code>https://gitee.com/xxxxx/xxxxxx/pages</code></p><p>点击地址栏左边的锁一样的标志，选择<code>Cookie</code></p><p>在弹出的窗口中展开<code>gitee.com</code>，再展开<code>Cookie</code>，找到并点击一个名为<code>gitee-session-n</code>的项目，复制它的<code>内容</code>，然后把下面这段代码的内容替换成你复制出来的内容即可</p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arcade">&#123;<span class="hljs-string">&#x27;domain&#x27;</span>: <span class="hljs-string">&#x27;.gitee.com&#x27;</span>, <span class="hljs-string">&#x27;httpOnly&#x27;</span>: <span class="hljs-literal">True</span>, <span class="hljs-string">&#x27;name&#x27;</span>: <span class="hljs-string">&#x27;gitee-session-n&#x27;</span>, <span class="hljs-string">&#x27;path&#x27;</span>: <span class="hljs-string">&#x27;/&#x27;</span>, <span class="hljs-string">&#x27;secure&#x27;</span>: <span class="hljs-literal">False</span>, <span class="hljs-string">&#x27;value&#x27;</span>: <span class="hljs-string">&#x27;内容&#x27;</span>&#125;<br></code></pre></td></tr></table></figure><p>上面这个就是你获取的Cookie了</p><h2 id="一键部署脚本"><a href="#一键部署脚本" class="headerlink" title="一键部署脚本"></a>一键部署脚本</h2><p>一键部署脚本内容如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-comment">#!/usr/bin/python3</span><br><span class="hljs-comment"># -*- coding:utf-8*-</span><br><span class="hljs-keyword">from</span> selenium <span class="hljs-keyword">import</span> webdriver<br><span class="hljs-keyword">from</span> selenium.webdriver.firefox.options <span class="hljs-keyword">import</span> Options<br><span class="hljs-keyword">from</span> selenium.webdriver.common.keys <span class="hljs-keyword">import</span> Keys<br><span class="hljs-keyword">import</span> time<br><span class="hljs-keyword">import</span> os<br><br>my_cookie = 填入上一步获取的Cookie<br>firefox_options = Options()<br><span class="hljs-comment"># 启动Firebox无界面模式</span><br>firefox_options.add_argument(<span class="hljs-string">&#x27;-headless&#x27;</span>)<br><span class="hljs-comment"># 不加载图片, 提升速度</span><br>firefox_options.set_preference(<span class="hljs-string">&quot;permissions.default.image&quot;</span>,<span class="hljs-number">2</span>)<br><span class="hljs-comment">#打开浏览器</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Launch browser&#x27;</span>)<br>driver = webdriver.Firefox(options=firefox_options)<br><span class="hljs-comment">#删除缓存</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Delete cookies&#x27;</span>)<br>driver.delete_all_cookies()<br><span class="hljs-comment">#访问网页</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Visit website&#x27;</span>)<br>driver.get(<span class="hljs-string">&quot;https://gitee.com/xxxxx/xxxxxx/pages&quot;</span>) <span class="hljs-comment">#这里为码云自动部署页面的链接，就是你的项目里点服务-&gt;Gitee Pages进入的页面，页面中有一个橙色的更新按钮就对了</span><br>time.sleep(<span class="hljs-number">10</span>)<br><span class="hljs-comment">#加载cookie</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Add cookie&#x27;</span>)<br>driver.add_cookie(my_cookie)<br><span class="hljs-comment">#刷新</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Refresh&#x27;</span>)<br>driver.refresh()<br>time.sleep(<span class="hljs-number">10</span>)<br><span class="hljs-comment">#点击部署按钮</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Click the &quot;Update&quot; button&#x27;</span>)<br>driver.find_element_by_xpath(<span class="hljs-string">&#x27;//*[@id=&quot;pages-branch&quot;]/div[7]&#x27;</span>).click()<br>time.sleep(<span class="hljs-number">5</span>)<br><span class="hljs-comment">#弹窗确定</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Click the &quot;Accept&quot; button&#x27;</span>)<br>al = driver.switch_to.alert<br>al.accept()<br>time.sleep(<span class="hljs-number">60</span>)<br><span class="hljs-comment">#关闭程序</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Turn off the program&#x27;</span>)<br>driver.quit()<br></code></pre></td></tr></table></figure><p>根据上面的代码修改自己的cookie和码云的地址，保存成<code>gitee.py</code>，输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-built_in">chmod</span> +x gitee.py<br></code></pre></td></tr></table></figure><p>以后只要运行该脚本就可以自动更新码云pages，不需要再手动打开网页点击更新</p>]]></content>
    
    
    <categories>
      
      <category>IT</category>
      
      <category>Python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>码云</tag>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>饥荒『荒野求生』服务器规定试行版</title>
    <link href="/rules/"/>
    <url>/rules/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>所谓国有国法，家有家规。服务器也有服规。现拟实行如下服务器规定，违者警告，乃至封禁。</p><span id="more"></span><h2 id="基本规定"><a href="#基本规定" class="headerlink" title="基本规定"></a>基本规定</h2><ul><li>文明用语，禁止人身攻击，吵架先挑事者负全责</li><li>和谐游戏，禁止私搞小团体孤立其他玩家</li><li>安全世界、宜居世界、和平世界、洞窟冒险、深渊冒险仅允许修建一个主基地，其余基地需报备辣椒小皇纸或半存，否则安全性将得不到保障</li><li>物资为大量工作获得，玩家应少拿，减少物资浪费</li><li>雕像、骨架为卡位专用，请勿移动</li></ul><h2 id="回档规定"><a href="#回档规定" class="headerlink" title="回档规定"></a>回档规定</h2><p>任何情况下，回档需获得服务器内正在游戏的大多数玩家同意。理论上，以下几种情况可以回档：</p><ul><li>主基地大面积被拆&#x2F;烧的。具体表现为:五件及以上需boss掉落物制作的建筑失能，或超过15个箱子被摧毁，或基地面积30%以上被摧毁</li><li>玩家的坎普斯背包被偷或者掉到虚空中遗失</li><li>某些大型不可逆操作，具体如：眼球阵被毁、修建蜂后触手阵错误等（该项需报备辣椒小皇纸或半存报备，因此不建议半夜进行大型工程修建）</li></ul><p>除上述情况外，若征得其他人同意，可以酌情回档。造成玩家损失的，需由主要责任人进行适当补偿。</p><p><strong>注意：萌新天堂、萌新地洞和冒险世界的基地被毁原则上不予回档，因为前两者本就是为了筛选玩家之用，而不是建家。</strong></p><h2 id="管理员规定"><a href="#管理员规定" class="headerlink" title="管理员规定"></a>管理员规定</h2><p>管理员是日常帮助维护服务器游戏秩序、制止恶劣游戏行为的管理者。管理员日常工作为：</p><ul><li>封禁恶劣游戏行为人，具体表现为：破坏主基地、与其他玩家多次发生冲突、或多次破坏他人游戏体验者</li><li>封禁“爷新”，具体表现为：乱动物资、不肯学不肯听、引火狗&#x2F;巨鹿&#x2F;蚁狮拆家达到三次者</li><li>临时kill挂机者</li><li>回档，要求见上一节『回档规定』</li></ul><p>管理员严禁权限滥用，权限滥用表现如下：</p><ul><li>无正当原因kill或者ban&#x2F;kban其他玩家</li><li>未说明原因并征得其他大部分玩家同意就直接rollback</li></ul><p>管理员进行的kban&#x2F;ban操作需上报辣椒小皇纸或半存，最好能亲眼见到破坏行为。封禁前请先观察游戏天数，并公屏询问。</p><p>滥用权限者及超过两个月时间不玩游戏者将被收回权限。管理权限请所有玩家共同监督，发现滥用者请上报辣椒小皇纸或半存。</p><h2 id="仓库规定"><a href="#仓库规定" class="headerlink" title="仓库规定"></a>仓库规定</h2><p>鉴于开启私人仓库后，家里的资源经常不翼而飞，特此规定：仓库内禁止私藏大量物资，如果发现搬运外面世界基地的东西会仓库，一律封禁</p><p>为营造良好的游戏环境，请大家不要私藏大量重要物资。</p>]]></content>
    
    
    <categories>
      
      <category>游戏</category>
      
      <category>饥荒</category>
      
    </categories>
    
    
    <tags>
      
      <tag>饥荒</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>自定义饥荒服务器后台命令</title>
    <link href="/2019/11/dstcustomcmd/"/>
    <url>/2019/11/dstcustomcmd/</url>
    
    <content type="html"><![CDATA[<blockquote><p>本教程适用Linux、Windows及Mac OS创建的专属服务器(Dedicated Server)，也适用于客户端</p></blockquote><span id="more"></span><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>饥荒自带了很多命令，比如：<code>c_save()</code>、<code>c_rollback()</code>、<code>TheNet:Ban()</code>等等，详情请参见<a href="https://dontstarve.fandom.com/wiki/Console/Don%27t_Starve_Together_Commands"><strong>Console&#x2F;Don’t Starve Together Commands</strong></a></p><p>但是这些命令并不能满足我们的需求，这里我介绍一种不需要mod而添加自定义命令的方法，特别适用于纯净服</p><h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><ul><li>找到饥荒的存档目录，找到对应<code>Cluster</code>下的<code>Master</code>及<code>Caves</code>文件夹</li><li>在<code>Master</code>及<code>Caves</code>文件夹下分别创建<code>customcommands.lua</code></li><li>在<code>customcommands.lua</code>内写入你想要添加的命令</li></ul><h2 id="举例"><a href="#举例" class="headerlink" title="举例"></a>举例</h2><h3 id="复活所有玩家"><a href="#复活所有玩家" class="headerlink" title="复活所有玩家"></a>复活所有玩家</h3><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Lua"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">res</span><span class="hljs-params">()</span></span><br>    <span class="hljs-keyword">for</span> i, v <span class="hljs-keyword">in</span> <span class="hljs-built_in">ipairs</span>(AllPlayers) <span class="hljs-keyword">do</span> v:PushEvent(<span class="hljs-string">&#x27;respawnfromghost&#x27;</span>) <span class="hljs-keyword">end</span><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><blockquote><p>你在服务器后台或者游戏内控制台输入<code>res()</code>即可复活当前世界的所有玩家<br>注意：地面和地洞是分开的两个世界，在地面世界输入命令只对地面有效，地洞的玩家不会复活</p></blockquote><h3 id="清理一半的物品"><a href="#清理一半的物品" class="headerlink" title="清理一半的物品"></a>清理一半的物品</h3><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs Lua"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">rmhalf</span><span class="hljs-params">(name)</span></span><br>    <span class="hljs-keyword">local</span> count = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">for</span> k,v <span class="hljs-keyword">in</span> <span class="hljs-built_in">pairs</span>(Ents) <span class="hljs-keyword">do</span><br>        <span class="hljs-keyword">if</span> v.prefab == name <span class="hljs-keyword">then</span><br>            <span class="hljs-keyword">if</span> <span class="hljs-built_in">math</span>.<span class="hljs-built_in">random</span>() &lt; <span class="hljs-number">0.5</span> <span class="hljs-keyword">then</span><br>                v:Remove()<br>                count = count + <span class="hljs-number">1</span><br>            <span class="hljs-keyword">end</span><br>        <span class="hljs-keyword">end</span><br>    <span class="hljs-keyword">end</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;removed&quot;</span>, count, name)<br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><blockquote><p>比如，输入<code>rmhalf(&quot;beefalo&quot;)</code>，就可以清理一半的牛群</p></blockquote><h3 id="按百分比清理物品"><a href="#按百分比清理物品" class="headerlink" title="按百分比清理物品"></a>按百分比清理物品</h3><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs Lua"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">rmpart</span><span class="hljs-params">(name,percent)</span></span><br>    <span class="hljs-keyword">local</span> count = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">for</span> k,v <span class="hljs-keyword">in</span> <span class="hljs-built_in">pairs</span>(Ents) <span class="hljs-keyword">do</span><br>        <span class="hljs-keyword">if</span> v.prefab == name <span class="hljs-keyword">then</span><br>            <span class="hljs-keyword">if</span> percent <span class="hljs-keyword">and</span> <span class="hljs-built_in">math</span>.<span class="hljs-built_in">random</span>() &lt; percent <span class="hljs-keyword">then</span><br>                v:Remove()<br>                count = count + <span class="hljs-number">1</span><br>            <span class="hljs-keyword">end</span><br>        <span class="hljs-keyword">end</span><br>    <span class="hljs-keyword">end</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;removed&quot;</span>, count, name)<br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><blockquote><p>比如，输入<code>rmhalf(&quot;evergreen&quot;,0.8)</code>，就可以清理80%的常青树</p></blockquote><h3 id="清理地面的物品"><a href="#清理地面的物品" class="headerlink" title="清理地面的物品"></a>清理地面的物品</h3><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs Lua"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">rmog</span><span class="hljs-params">(name)</span></span><br>    <span class="hljs-keyword">local</span> count = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">for</span> k,v <span class="hljs-keyword">in</span> <span class="hljs-built_in">pairs</span>(Ents) <span class="hljs-keyword">do</span><br>        <span class="hljs-keyword">if</span> v.prefab == name <span class="hljs-keyword">then</span><br>            <span class="hljs-keyword">if</span> v.components.inventoryitem <span class="hljs-keyword">then</span><br>                <span class="hljs-keyword">if</span> v.components.inventoryitem.owner == <span class="hljs-literal">nil</span> <span class="hljs-keyword">then</span><br>                    v:Remove()<br>                    count = count + <span class="hljs-number">1</span><br>                <span class="hljs-keyword">end</span><br>            <span class="hljs-keyword">else</span><br>                    v:Remove()<br>                    count = count + <span class="hljs-number">1</span><br>            <span class="hljs-keyword">end</span><br>        <span class="hljs-keyword">end</span><br>    <span class="hljs-keyword">end</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;removed&quot;</span>, count, name)<br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><blockquote><p>比如，输入<code>rmog(&quot;spoiled_food&quot;)</code>，就可以清理地面上所有的腐烂的食物</p></blockquote><h3 id="清理烧毁的建筑及植物"><a href="#清理烧毁的建筑及植物" class="headerlink" title="清理烧毁的建筑及植物"></a>清理烧毁的建筑及植物</h3><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs Lua"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">rmbt</span><span class="hljs-params">(name)</span></span><br>    <span class="hljs-keyword">local</span> count = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">for</span> k,v <span class="hljs-keyword">in</span> <span class="hljs-built_in">pairs</span>(Ents) <span class="hljs-keyword">do</span><br>        <span class="hljs-keyword">if</span> v.prefab == name <span class="hljs-keyword">and</span> v:HasTag(<span class="hljs-string">&quot;burnt&quot;</span>) <span class="hljs-keyword">then</span><br>            v:Remove()<br>            count = count + <span class="hljs-number">1</span><br>        <span class="hljs-keyword">end</span><br>    <span class="hljs-keyword">end</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;removed&quot;</span>, count, <span class="hljs-string">&quot;burnt&quot;</span>, name)<br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><blockquote><p>比如，输入<code>rmbt(&quot;treasurechest&quot;)</code>即可清理所有烧毁的箱子</p></blockquote><h3 id="清理虫木种在地上的作物腐烂后及枯萎后"><a href="#清理虫木种在地上的作物腐烂后及枯萎后" class="headerlink" title="清理虫木种在地上的作物腐烂后及枯萎后"></a>清理虫木种在地上的作物腐烂后及枯萎后</h3><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs Lua"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">rmcrop</span><span class="hljs-params">()</span></span><br>    <span class="hljs-keyword">local</span> count = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">for</span> k,v <span class="hljs-keyword">in</span> <span class="hljs-built_in">pairs</span>(Ents) <span class="hljs-keyword">do</span><br>        <span class="hljs-keyword">if</span> v.prefab == <span class="hljs-string">&quot;plant_normal_ground&quot;</span> <span class="hljs-keyword">then</span><br>            <span class="hljs-keyword">if</span> v:HasTag(<span class="hljs-string">&quot;rotten&quot;</span>) <span class="hljs-keyword">or</span> v:HasTag(<span class="hljs-string">&quot;withered&quot;</span>) <span class="hljs-keyword">then</span><br>                v:Remove()<br>                count = count + <span class="hljs-number">1</span><br>            <span class="hljs-keyword">end</span><br>        <span class="hljs-keyword">end</span><br>    <span class="hljs-keyword">end</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;removed&quot;</span>, count, <span class="hljs-string">&quot;plant_normal_ground&quot;</span>)<br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><blockquote><p>直接输入<code>rmcrop()</code>即可</p></blockquote><h3 id="显示当前世界的玩家"><a href="#显示当前世界的玩家" class="headerlink" title="显示当前世界的玩家"></a>显示当前世界的玩家</h3><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs Lua"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">list</span><span class="hljs-params">()</span></span><br>    <span class="hljs-keyword">for</span> i, v <span class="hljs-keyword">in</span> <span class="hljs-built_in">ipairs</span>(AllPlayers) <span class="hljs-keyword">do</span><br>        <span class="hljs-built_in">print</span>(<span class="hljs-built_in">string</span>.<span class="hljs-built_in">format</span>(<span class="hljs-string">&quot;[%d] (%s) %s &lt;%s&gt;&quot;</span>, i, v.userid, v.name, v.prefab))<br>    <span class="hljs-keyword">end</span><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><blockquote><p>输入<code>list()</code>即可，注意：地面与地洞分开</p></blockquote><h3 id="显示当前服务器的所有玩家"><a href="#显示当前服务器的所有玩家" class="headerlink" title="显示当前服务器的所有玩家"></a>显示当前服务器的所有玩家</h3><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs Lua"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">show</span><span class="hljs-params">()</span></span><br>    <span class="hljs-keyword">local</span> index = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">for</span> i, v <span class="hljs-keyword">in</span> <span class="hljs-built_in">ipairs</span>(TheNet:GetClientTable()) <span class="hljs-keyword">do</span><br>        <span class="hljs-keyword">if</span> index ~= <span class="hljs-number">0</span> <span class="hljs-keyword">then</span><br>            <span class="hljs-comment">--print(&#x27; [&#x27;..index..&#x27;] &#123;&#x27;..string.format(&#x27;%03d&#x27;, v.playerage)..&#x27;&#125; (&#x27;..v.userid..&#x27;) &#x27;..v.name..&#x27; &lt;&#x27;..v.prefab..&#x27;&gt;&#x27;)</span><br>            <span class="hljs-built_in">print</span>(<span class="hljs-built_in">string</span>.<span class="hljs-built_in">format</span>(<span class="hljs-string">&quot;[%d] &#123;%s&#125; (%s) %s &lt;%s&gt;&quot;</span>, index, <span class="hljs-built_in">string</span>.<span class="hljs-built_in">format</span>(<span class="hljs-string">&#x27;%03d&#x27;</span>, v.playerage), v.userid, v.name, v.prefab))<br>        <span class="hljs-keyword">end</span><br>        index = index + <span class="hljs-number">1</span><br>    <span class="hljs-keyword">end</span><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><blockquote><p>输入<code>show()</code>即可，输出结果<code>[]</code>内的为玩家的存活天数</p></blockquote><h3 id="服务器宣告"><a href="#服务器宣告" class="headerlink" title="服务器宣告"></a>服务器宣告</h3><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs Lua"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">say</span><span class="hljs-params">(msg, interval, category)</span></span><br>    <span class="hljs-keyword">if</span> msg == <span class="hljs-literal">nil</span> <span class="hljs-keyword">then</span><br>        <span class="hljs-keyword">if</span> TheWorld.__announcementtask ~= <span class="hljs-literal">nil</span> <span class="hljs-keyword">then</span><br>            TheWorld.__announcementtask:Cancel()<br>            TheWorld.__announcementtask = <span class="hljs-literal">nil</span><br>        <span class="hljs-keyword">end</span><br>    <span class="hljs-keyword">elseif</span> interval == <span class="hljs-literal">nil</span> <span class="hljs-keyword">or</span> interval &lt;= <span class="hljs-number">0</span> <span class="hljs-keyword">then</span><br>        <span class="hljs-keyword">if</span> category == <span class="hljs-string">&quot;system&quot;</span> <span class="hljs-keyword">then</span><br>            TheNet:SystemMessage(msg)<br>        <span class="hljs-keyword">else</span><br>            TheNet:Announce(msg, <span class="hljs-literal">nil</span>, <span class="hljs-literal">nil</span>, category)<br>        <span class="hljs-keyword">end</span><br>    <span class="hljs-keyword">else</span><br>        <span class="hljs-keyword">if</span> TheWorld.__announcementtask ~= <span class="hljs-literal">nil</span> <span class="hljs-keyword">then</span><br>            TheWorld.__announcementtask:Cancel()<br>        <span class="hljs-keyword">end</span><br>        TheWorld.__announcementtask =<br>            TheWorld:DoPeriodicTask(<br>                interval,<br>                category == <span class="hljs-string">&quot;system&quot;</span> <span class="hljs-keyword">and</span><br>                <span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">()</span></span> TheNet:SystemMessage(msg) <span class="hljs-keyword">end</span> <span class="hljs-keyword">or</span><br>                <span class="hljs-function"><span class="hljs-keyword">function</span><span class="hljs-params">()</span></span> TheNet:Announce(msg, <span class="hljs-literal">nil</span>, <span class="hljs-literal">nil</span>, category) <span class="hljs-keyword">end</span>,<br>                <span class="hljs-number">0</span><br>            )<br>    <span class="hljs-keyword">end</span><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><blockquote><p>输入<code>say(&quot;欢迎加入&quot;)</code>即可发出相应内容的公告</p></blockquote><h3 id="计数"><a href="#计数" class="headerlink" title="计数"></a>计数</h3><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs Lua"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">count</span><span class="hljs-params">(prefab, noprint)</span></span><br>    <span class="hljs-keyword">local</span> count = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">for</span> k,v <span class="hljs-keyword">in</span> <span class="hljs-built_in">pairs</span>(Ents) <span class="hljs-keyword">do</span><br>        <span class="hljs-keyword">if</span> v.prefab == prefab <span class="hljs-keyword">then</span><br>            count = count + <span class="hljs-number">1</span><br>        <span class="hljs-keyword">end</span><br>    <span class="hljs-keyword">end</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> noprint <span class="hljs-keyword">then</span><br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;There are &quot;</span>, count, prefab..<span class="hljs-string">&quot;s in the world.&quot;</span>)<br>    <span class="hljs-keyword">end</span><br>    <span class="hljs-keyword">return</span> count<br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><blockquote><p>输入<code>count(&quot;flint&quot;)</code>即可打印出碎石的数量</p></blockquote><h3 id="计数所有物品"><a href="#计数所有物品" class="headerlink" title="计数所有物品"></a>计数所有物品</h3><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs Lua"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">countall</span><span class="hljs-params">()</span></span><br>    <span class="hljs-keyword">local</span> total = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">local</span> unk = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">local</span> counted = &#123;&#125;<br>    <span class="hljs-keyword">for</span> k,v <span class="hljs-keyword">in</span> <span class="hljs-built_in">pairs</span>(Ents) <span class="hljs-keyword">do</span><br>        <span class="hljs-keyword">if</span> v.prefab ~= <span class="hljs-literal">nil</span> <span class="hljs-keyword">then</span><br>            <span class="hljs-keyword">if</span> counted[v.prefab] == <span class="hljs-literal">nil</span> <span class="hljs-keyword">then</span><br>                counted[v.prefab] = <span class="hljs-number">1</span><br>            <span class="hljs-keyword">else</span><br>                counted[v.prefab] = counted[v.prefab] + <span class="hljs-number">1</span><br>            <span class="hljs-keyword">end</span><br>            total = total + <span class="hljs-number">1</span><br>        <span class="hljs-keyword">else</span><br>            unk = unk + <span class="hljs-number">1</span><br>        <span class="hljs-keyword">end</span><br>    <span class="hljs-keyword">end</span><br><br>    <span class="hljs-keyword">local</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">pairsByKeys</span> <span class="hljs-params">(t, f)</span></span><br>      <span class="hljs-keyword">local</span> a = &#123;&#125;<br>      <span class="hljs-keyword">for</span> n <span class="hljs-keyword">in</span> <span class="hljs-built_in">pairs</span>(t) <span class="hljs-keyword">do</span> <span class="hljs-built_in">table</span>.<span class="hljs-built_in">insert</span>(a, n) <span class="hljs-keyword">end</span><br>      <span class="hljs-built_in">table</span>.<span class="hljs-built_in">sort</span>(a, f)<br>      <span class="hljs-keyword">local</span> i = <span class="hljs-number">0</span>      <span class="hljs-comment">-- iterator variable</span><br>      <span class="hljs-keyword">local</span> iter = <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-params">()</span></span>   <span class="hljs-comment">-- iterator function</span><br>        i = i + <span class="hljs-number">1</span><br>        <span class="hljs-keyword">if</span> a[i] == <span class="hljs-literal">nil</span> <span class="hljs-keyword">then</span> <span class="hljs-keyword">return</span> <span class="hljs-literal">nil</span><br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> a[i], t[a[i]]<br>        <span class="hljs-keyword">end</span><br>      <span class="hljs-keyword">end</span><br>      <span class="hljs-keyword">return</span> iter<br>    <span class="hljs-keyword">end</span><br><br>    <span class="hljs-keyword">for</span> k,v <span class="hljs-keyword">in</span> pairsByKeys(counted) <span class="hljs-keyword">do</span><br>        <span class="hljs-built_in">print</span>(k, v)<br>    <span class="hljs-keyword">end</span><br><br>    <span class="hljs-built_in">print</span>(<span class="hljs-built_in">string</span>.<span class="hljs-built_in">format</span>(<span class="hljs-string">&quot;There are %d different prefabs in the world, %d total (and %d unknown)&quot;</span>, GetTableSize(counted), total, unk))<br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><blockquote><p>输入<code>countall()</code>即可</p></blockquote><h3 id="计数所有在地面的物品"><a href="#计数所有在地面的物品" class="headerlink" title="计数所有在地面的物品"></a>计数所有在地面的物品</h3><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs Lua"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">countog</span><span class="hljs-params">()</span></span><br>    <span class="hljs-keyword">local</span> total = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">local</span> unk = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">local</span> counted = &#123;&#125;<br>    <span class="hljs-keyword">for</span> k,v <span class="hljs-keyword">in</span> <span class="hljs-built_in">pairs</span>(Ents) <span class="hljs-keyword">do</span><br>        <span class="hljs-keyword">if</span> v.prefab ~= <span class="hljs-literal">nil</span> <span class="hljs-keyword">then</span><br>            <span class="hljs-keyword">if</span> v.components.inventoryitem <span class="hljs-keyword">then</span><br>                <span class="hljs-keyword">if</span> v.components.inventoryitem.owner == <span class="hljs-literal">nil</span> <span class="hljs-keyword">then</span><br>                    <span class="hljs-keyword">if</span> counted[v.prefab] == <span class="hljs-literal">nil</span> <span class="hljs-keyword">then</span><br>                        counted[v.prefab] = <span class="hljs-number">1</span><br>                    <span class="hljs-keyword">else</span><br>                        counted[v.prefab] = counted[v.prefab] + <span class="hljs-number">1</span><br>                    <span class="hljs-keyword">end</span><br>                    total = total + <span class="hljs-number">1</span><br>                <span class="hljs-keyword">end</span><br>            <span class="hljs-keyword">else</span><br>                    <span class="hljs-keyword">if</span> counted[v.prefab] == <span class="hljs-literal">nil</span> <span class="hljs-keyword">then</span><br>                        counted[v.prefab] = <span class="hljs-number">1</span><br>                    <span class="hljs-keyword">else</span><br>                        counted[v.prefab] = counted[v.prefab] + <span class="hljs-number">1</span><br>                    <span class="hljs-keyword">end</span><br>                    total = total + <span class="hljs-number">1</span><br>            <span class="hljs-keyword">end</span><br>        <span class="hljs-keyword">else</span><br>            unk = unk + <span class="hljs-number">1</span><br>        <span class="hljs-keyword">end</span><br>    <span class="hljs-keyword">end</span><br><br>    <span class="hljs-keyword">local</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">pairsByKeys</span> <span class="hljs-params">(t, f)</span></span><br>      <span class="hljs-keyword">local</span> a = &#123;&#125;<br>      <span class="hljs-keyword">for</span> n <span class="hljs-keyword">in</span> <span class="hljs-built_in">pairs</span>(t) <span class="hljs-keyword">do</span> <span class="hljs-built_in">table</span>.<span class="hljs-built_in">insert</span>(a, n) <span class="hljs-keyword">end</span><br>      <span class="hljs-built_in">table</span>.<span class="hljs-built_in">sort</span>(a, f)<br>      <span class="hljs-keyword">local</span> i = <span class="hljs-number">0</span>      <span class="hljs-comment">-- iterator variable</span><br>      <span class="hljs-keyword">local</span> iter = <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-params">()</span></span>   <span class="hljs-comment">-- iterator function</span><br>        i = i + <span class="hljs-number">1</span><br>        <span class="hljs-keyword">if</span> a[i] == <span class="hljs-literal">nil</span> <span class="hljs-keyword">then</span> <span class="hljs-keyword">return</span> <span class="hljs-literal">nil</span><br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> a[i], t[a[i]]<br>        <span class="hljs-keyword">end</span><br>      <span class="hljs-keyword">end</span><br>      <span class="hljs-keyword">return</span> iter<br>    <span class="hljs-keyword">end</span><br><br>    <span class="hljs-keyword">for</span> k,v <span class="hljs-keyword">in</span> pairsByKeys(counted) <span class="hljs-keyword">do</span><br>        <span class="hljs-built_in">print</span>(k, v)<br>    <span class="hljs-keyword">end</span><br><br>    <span class="hljs-built_in">print</span>(<span class="hljs-built_in">string</span>.<span class="hljs-built_in">format</span>(<span class="hljs-string">&quot;There are %d different prefabs on the ground, %d total (and %d unknown)&quot;</span>, GetTableSize(counted), total, unk))<br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><blockquote><p>输入<code>countog()</code>即可打印所有在地面的物品、建筑及动植物（即不包括箱子里和玩家身上的物品）</p></blockquote><h3 id="显示世界天数即季节"><a href="#显示世界天数即季节" class="headerlink" title="显示世界天数即季节"></a>显示世界天数即季节</h3><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs Lua"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">day</span><span class="hljs-params">()</span></span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;World Day:&#x27;</span>, TheWorld.state.cycles + <span class="hljs-number">1</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Season:&#x27;</span>, TheWorld.state.season)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Days Left in the Season:&#x27;</span>,TheWorld.state.remainingdaysinseason)<br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><blockquote><p>输入<code>day()</code>即可</p></blockquote><h3 id="按照自定义设置清理服务器"><a href="#按照自定义设置清理服务器" class="headerlink" title="按照自定义设置清理服务器"></a>按照自定义设置清理服务器</h3><blockquote><p>这条命令比较复杂，实现了类似其他服务器清理mod的功能，故不需要再订阅服务器清理mod</p></blockquote><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br></pre></td><td class="code"><pre><code class="hljs Lua"><span class="hljs-keyword">local</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">count_current</span><span class="hljs-params">(prefab)</span></span><br>    <span class="hljs-keyword">local</span> count = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">for</span> k,v <span class="hljs-keyword">in</span> <span class="hljs-built_in">pairs</span>(Ents) <span class="hljs-keyword">do</span><br>        <span class="hljs-keyword">if</span> v.prefab == prefab <span class="hljs-keyword">then</span><br>            <span class="hljs-keyword">if</span> v.components.inventoryitem <span class="hljs-keyword">then</span><br>                <span class="hljs-keyword">if</span> v.components.inventoryitem.owner == <span class="hljs-literal">nil</span> <span class="hljs-keyword">then</span><br>                    count = count + <span class="hljs-number">1</span><br>                <span class="hljs-keyword">end</span><br>            <span class="hljs-keyword">else</span><br>                    count = count + <span class="hljs-number">1</span><br>            <span class="hljs-keyword">end</span><br>        <span class="hljs-keyword">end</span><br>    <span class="hljs-keyword">end</span><br>    <span class="hljs-keyword">return</span> count<br><span class="hljs-keyword">end</span><br><br><span class="hljs-keyword">local</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">s_rmognum</span><span class="hljs-params">(name,maxnum)</span></span><br>    <span class="hljs-keyword">local</span> count = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">for</span> k,v <span class="hljs-keyword">in</span> <span class="hljs-built_in">pairs</span>(Ents) <span class="hljs-keyword">do</span><br>        <span class="hljs-keyword">if</span> v.prefab == name <span class="hljs-keyword">then</span><br>            <span class="hljs-keyword">if</span> v.components.inventoryitem <span class="hljs-keyword">then</span><br>                <span class="hljs-keyword">if</span> v.components.inventoryitem.owner == <span class="hljs-literal">nil</span> <span class="hljs-keyword">and</span> count_current(name) &gt; maxnum <span class="hljs-keyword">then</span><br>                    v:Remove()<br>                    count = count + <span class="hljs-number">1</span><br>                <span class="hljs-keyword">end</span><br>            <span class="hljs-keyword">else</span><br>                <span class="hljs-keyword">if</span> count_current(name) &gt; maxnum <span class="hljs-keyword">then</span><br>                    v:Remove()<br>                    count = count + <span class="hljs-number">1</span><br>                <span class="hljs-keyword">end</span><br>            <span class="hljs-keyword">end</span><br>        <span class="hljs-keyword">end</span><br>    <span class="hljs-keyword">end</span><br>    <span class="hljs-keyword">if</span> count ~= <span class="hljs-number">0</span> <span class="hljs-keyword">then</span><br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;removed&quot;</span>, count, name)<br>    <span class="hljs-keyword">end</span><br><span class="hljs-keyword">end</span><br><br><span class="hljs-keyword">local</span> rmlist = &#123;<br>    <span class="hljs-comment">------------------------  动      物  ------------------------</span><br>    &#123;<span class="hljs-string">&quot;hound&quot;</span>, <span class="hljs-number">30</span>&#125;,                                      <span class="hljs-comment">-- 狗</span><br>    &#123;<span class="hljs-string">&quot;firehound&quot;</span>, <span class="hljs-number">10</span>&#125;,                                  <span class="hljs-comment">-- 火狗</span><br>    &#123;<span class="hljs-string">&quot;icehound&quot;</span>, <span class="hljs-number">10</span>&#125;,                                   <span class="hljs-comment">-- 冰狗</span><br>    &#123;<span class="hljs-string">&quot;spider_warrior&quot;</span>, <span class="hljs-number">10</span>&#125;,                             <span class="hljs-comment">-- 蜘蛛战士</span><br>    &#123;<span class="hljs-string">&quot;spider&quot;</span>, <span class="hljs-number">10</span>&#125;,                                     <span class="hljs-comment">-- 蜘蛛</span><br>    &#123;<span class="hljs-string">&quot;flies&quot;</span>, <span class="hljs-number">10</span>&#125;,                                      <span class="hljs-comment">-- 苍蝇</span><br>    &#123;<span class="hljs-string">&quot;mosquito&quot;</span>, <span class="hljs-number">10</span>&#125;,                                   <span class="hljs-comment">-- 蚊子</span><br>    &#123;<span class="hljs-string">&quot;bee&quot;</span>, <span class="hljs-number">10</span>&#125;,                                        <span class="hljs-comment">-- 蜜蜂</span><br>    &#123;<span class="hljs-string">&quot;killerbee&quot;</span>, <span class="hljs-number">10</span>&#125;,                                  <span class="hljs-comment">-- 杀人蜂</span><br>    &#123;<span class="hljs-string">&quot;frog&quot;</span>, <span class="hljs-number">20</span>&#125;,                                       <span class="hljs-comment">-- 青蛙</span><br>    &#123;<span class="hljs-string">&quot;beefalo&quot;</span>, <span class="hljs-number">50</span>&#125;,                                    <span class="hljs-comment">-- 牛</span><br>    &#123;<span class="hljs-string">&quot;grassgekko&quot;</span>, <span class="hljs-number">15</span>&#125;,                                 <span class="hljs-comment">-- 草蜥蜴</span><br>    &#123;<span class="hljs-string">&quot;lightninggoat&quot;</span>, <span class="hljs-number">50</span>&#125;,                              <span class="hljs-comment">-- 羊</span><br>    &#123;<span class="hljs-string">&quot;deer&quot;</span>, <span class="hljs-number">50</span>&#125;,                                       <span class="hljs-comment">-- 鹿</span><br>    <span class="hljs-comment">------------------------  地面  物体  ------------------------</span><br>    &#123;<span class="hljs-string">&quot;evergreen_sparse&quot;</span>, <span class="hljs-number">250</span>&#125;,                          <span class="hljs-comment">-- 常青树</span><br>    &#123;<span class="hljs-string">&quot;twiggytree&quot;</span>, <span class="hljs-number">150</span>&#125;,                                <span class="hljs-comment">-- 树枝树</span><br>    &#123;<span class="hljs-string">&quot;marsh_tree&quot;</span>, <span class="hljs-number">100</span>&#125;,                                <span class="hljs-comment">-- 针刺树</span><br>    &#123;<span class="hljs-string">&quot;rock_petrified_tree&quot;</span>, <span class="hljs-number">1000</span>&#125;,                      <span class="hljs-comment">-- 石化树</span><br>    &#123;<span class="hljs-string">&quot;skeleton_player&quot;</span>, <span class="hljs-number">50</span>&#125;,                            <span class="hljs-comment">-- 玩家尸体</span><br>    &#123;<span class="hljs-string">&quot;spiderden&quot;</span>, <span class="hljs-number">80</span>&#125;,                                  <span class="hljs-comment">-- 蜘蛛巢</span><br>    &#123;<span class="hljs-string">&quot;burntground&quot;</span>, <span class="hljs-number">50</span>&#125;,                                <span class="hljs-comment">-- 陨石痕跡</span><br>    <span class="hljs-comment">------------------------  可拾取物品  ------------------------</span><br>    <span class="hljs-comment">--&#123;&quot;seeds&quot;, 0&#125;,                                     -- 种子</span><br>    <span class="hljs-comment">--&#123;&quot;log&quot;, 0&#125;,                                       -- 木头</span><br>    <span class="hljs-comment">--&#123;&quot;pinecone&quot;, 0&#125;,                                  -- 松果</span><br>    <span class="hljs-comment">--&#123;&quot;twiggy_nut&quot;, 0&#125;,                                -- 多枝树的果实</span><br>    <span class="hljs-comment">--&#123;&quot;cutgrass&quot;, 0&#125;,                                  -- 草</span><br>    <span class="hljs-comment">--&#123;&quot;twigs&quot;, 0&#125;,                                     -- 树枝</span><br>    <span class="hljs-comment">--&#123;&quot;rocks&quot;, 100&#125;,                                   -- 石头</span><br>    <span class="hljs-comment">--&#123;&quot;nitre&quot;, 100&#125;,                                   -- 硝石</span><br>    <span class="hljs-comment">--&#123;&quot;flint&quot;, 100&#125;,                                   -- 燧石</span><br>    &#123;<span class="hljs-string">&quot;poop&quot;</span>, <span class="hljs-number">0</span>&#125;,                                        <span class="hljs-comment">-- 屎</span><br>    &#123;<span class="hljs-string">&quot;guano&quot;</span>, <span class="hljs-number">0</span>&#125;,                                       <span class="hljs-comment">-- 鸟屎</span><br>    &#123;<span class="hljs-string">&quot;manrabbit_tail&quot;</span>, <span class="hljs-number">0</span>&#125;,                              <span class="hljs-comment">-- 兔毛</span><br>    &#123;<span class="hljs-string">&quot;silk&quot;</span>, <span class="hljs-number">50</span>&#125;,                                       <span class="hljs-comment">-- 蜘蛛丝</span><br>    &#123;<span class="hljs-string">&quot;spidergland&quot;</span>, <span class="hljs-number">50</span>&#125;,                                <span class="hljs-comment">-- 蜘蛛腺体</span><br>    &#123;<span class="hljs-string">&quot;stinger&quot;</span>, <span class="hljs-number">0</span>&#125;,                                     <span class="hljs-comment">-- 蜂刺</span><br>    &#123;<span class="hljs-string">&quot;houndstooth&quot;</span>, <span class="hljs-number">0</span>&#125;,                                 <span class="hljs-comment">-- 狗牙</span><br>    &#123;<span class="hljs-string">&quot;mosquitosack&quot;</span>, <span class="hljs-number">0</span>&#125;,                                <span class="hljs-comment">-- 蚊子血袋</span><br>    <span class="hljs-comment">--&#123;&quot;glommerfuel&quot;, 0&#125;,                               -- 格罗姆粘液</span><br>    &#123;<span class="hljs-string">&quot;slurtleslime&quot;</span>, <span class="hljs-number">0</span>&#125;,                                <span class="hljs-comment">-- 鼻涕虫粘液</span><br>    &#123;<span class="hljs-string">&quot;slurtle_shellpieces&quot;</span>, <span class="hljs-number">0</span>&#125;,                         <span class="hljs-comment">-- 鼻涕虫壳碎片</span><br>    &#123;<span class="hljs-string">&quot;charcoal&quot;</span>, <span class="hljs-number">0</span>&#125;,                                    <span class="hljs-comment">-- 炭</span><br>    &#123;<span class="hljs-string">&quot;rottenegg&quot;</span>, <span class="hljs-number">0</span>&#125;,                                   <span class="hljs-comment">-- 坏蛋</span><br>    &#123;<span class="hljs-string">&quot;horn&quot;</span>, <span class="hljs-number">5</span>&#125;,                                        <span class="hljs-comment">-- 牛角</span><br>    &#123;<span class="hljs-string">&quot;beardhair&quot;</span>, <span class="hljs-number">0</span>&#125;,                                   <span class="hljs-comment">-- 胡须</span><br>    &#123;<span class="hljs-string">&quot;beefalowool&quot;</span>, <span class="hljs-number">0</span>&#125;,                                 <span class="hljs-comment">-- 牛毛</span><br>    &#123;<span class="hljs-string">&quot;feather_crow&quot;</span>, <span class="hljs-number">0</span>&#125;,                                <span class="hljs-comment">-- 羽毛</span><br>    &#123;<span class="hljs-string">&quot;feather_robin&quot;</span>, <span class="hljs-number">0</span>&#125;,                               <span class="hljs-comment">-- 羽毛</span><br>    &#123;<span class="hljs-string">&quot;feather_robin_winter&quot;</span>, <span class="hljs-number">0</span>&#125;,                        <span class="hljs-comment">-- 羽毛</span><br>    &#123;<span class="hljs-string">&quot;spoiled_food&quot;</span>, <span class="hljs-number">0</span>&#125;,                                <span class="hljs-comment">-- 腐烂食物</span><br>    &#123;<span class="hljs-string">&quot;sketch&quot;</span>, <span class="hljs-number">0</span>&#125;,                                      <span class="hljs-comment">-- 草图</span><br>    &#123;<span class="hljs-string">&quot;blueprint&quot;</span>, <span class="hljs-number">0</span>&#125;,                                   <span class="hljs-comment">-- 蓝图</span><br>    &#123;<span class="hljs-string">&quot;backpack&quot;</span>, <span class="hljs-number">0</span>&#125;,                                    <span class="hljs-comment">-- 背包</span><br>    &#123;<span class="hljs-string">&quot;piggyback&quot;</span>, <span class="hljs-number">0</span>&#125;,                                   <span class="hljs-comment">-- 小猪包</span><br>    &#123;<span class="hljs-string">&quot;candybag&quot;</span>, <span class="hljs-number">0</span>&#125;,                                    <span class="hljs-comment">-- 糖果包</span><br>    &#123;<span class="hljs-string">&quot;compass&quot;</span>, <span class="hljs-number">0</span>&#125;,                                     <span class="hljs-comment">-- 指南針</span><br>    &#123;<span class="hljs-string">&quot;bedroll_furry&quot;</span>, <span class="hljs-number">0</span>&#125;,                               <span class="hljs-comment">-- 兔毛席子            </span><br>    &#123;<span class="hljs-string">&quot;bedroll_straw&quot;</span>, <span class="hljs-number">0</span>&#125;,                               <span class="hljs-comment">-- 草席            </span><br>    &#123;<span class="hljs-string">&quot;axe&quot;</span>, <span class="hljs-number">3</span>&#125;,                                         <span class="hljs-comment">-- 斧子</span><br>    &#123;<span class="hljs-string">&quot;goldenaxe&quot;</span>, <span class="hljs-number">3</span>&#125;,                                   <span class="hljs-comment">-- 黄金斧子</span><br>    &#123;<span class="hljs-string">&quot;torch&quot;</span>, <span class="hljs-number">0</span>&#125;,                                       <span class="hljs-comment">-- 火炬</span><br>    &#123;<span class="hljs-string">&quot;pickaxe&quot;</span>, <span class="hljs-number">3</span>&#125;,                                     <span class="hljs-comment">-- 镐子</span><br>    &#123;<span class="hljs-string">&quot;goldenpickaxe&quot;</span>, <span class="hljs-number">3</span>&#125;,                               <span class="hljs-comment">-- 黄金镐子</span><br>    &#123;<span class="hljs-string">&quot;hammer&quot;</span>, <span class="hljs-number">3</span>&#125;,                                      <span class="hljs-comment">-- 锤子</span><br>    &#123;<span class="hljs-string">&quot;shovel&quot;</span>, <span class="hljs-number">3</span>&#125;,                                      <span class="hljs-comment">-- 铲子</span><br>    &#123;<span class="hljs-string">&quot;goldenshovel&quot;</span>, <span class="hljs-number">3</span>&#125;,                                <span class="hljs-comment">-- 黄金铲子</span><br>    &#123;<span class="hljs-string">&quot;razor&quot;</span>, <span class="hljs-number">1</span>&#125;,                                       <span class="hljs-comment">-- 剃刀</span><br>    &#123;<span class="hljs-string">&quot;pitchfork&quot;</span>, <span class="hljs-number">0</span>&#125;,                                   <span class="hljs-comment">-- 草叉</span><br>    &#123;<span class="hljs-string">&quot;bugnet&quot;</span>, <span class="hljs-number">0</span>&#125;,                                      <span class="hljs-comment">-- 捕虫网</span><br>    &#123;<span class="hljs-string">&quot;fishingrod&quot;</span>, <span class="hljs-number">0</span>&#125;,                                  <span class="hljs-comment">-- 鱼竿</span><br>    &#123;<span class="hljs-string">&quot;umbrella&quot;</span>, <span class="hljs-number">0</span>&#125;,                                    <span class="hljs-comment">-- 雨伞</span><br>    &#123;<span class="hljs-string">&quot;earmuffshat&quot;</span>, <span class="hljs-number">0</span>&#125;,                                 <span class="hljs-comment">-- 兔耳罩</span><br>    &#123;<span class="hljs-string">&quot;winterhat&quot;</span>, <span class="hljs-number">0</span>&#125;,                                   <span class="hljs-comment">-- 冬帽</span><br>    <span class="hljs-comment">--&#123;&quot;heatrock&quot;, 5&#125;,                                  -- 热能石</span><br>    &#123;<span class="hljs-string">&quot;strawhat&quot;</span>, <span class="hljs-number">0</span>&#125;,                                    <span class="hljs-comment">-- 草帽</span><br>    &#123;<span class="hljs-string">&quot;tophat&quot;</span>, <span class="hljs-number">0</span>&#125;,                                      <span class="hljs-comment">-- 高礼帽</span><br>    &#123;<span class="hljs-string">&quot;featherhat&quot;</span>, <span class="hljs-number">0</span>&#125;,                                  <span class="hljs-comment">-- 羽毛帽</span><br>    &#123;<span class="hljs-string">&quot;beehat&quot;</span>, <span class="hljs-number">0</span>&#125;,                                      <span class="hljs-comment">-- 蜜蜂帽</span><br>    &#123;<span class="hljs-string">&quot;spiderhat&quot;</span>, <span class="hljs-number">0</span>&#125;,                                   <span class="hljs-comment">-- 女王帽</span><br>    &#123;<span class="hljs-string">&quot;bushhat&quot;</span>, <span class="hljs-number">0</span>&#125;,                                     <span class="hljs-comment">-- 浆果丛帽</span><br>    &#123;<span class="hljs-string">&quot;trap&quot;</span>, <span class="hljs-number">10</span>&#125;,                                       <span class="hljs-comment">-- 动物陷阱</span><br>    &#123;<span class="hljs-string">&quot;birdtrap&quot;</span>, <span class="hljs-number">3</span>&#125;,                                    <span class="hljs-comment">-- 鸟陷阱</span><br>    &#123;<span class="hljs-string">&quot;spear&quot;</span>, <span class="hljs-number">0</span>&#125;,                                       <span class="hljs-comment">-- 矛</span><br>    &#123;<span class="hljs-string">&quot;boomerang&quot;</span>, <span class="hljs-number">0</span>&#125;,                                   <span class="hljs-comment">-- 回旋镖</span><br>    <span class="hljs-comment">--&#123;&quot;nightsword&quot;, 10&#125;,                               -- 影刀</span><br>    &#123;<span class="hljs-string">&quot;ruins_bat&quot;</span>, <span class="hljs-number">0</span>&#125;,                                   <span class="hljs-comment">-- 铥矿棒</span><br>    <span class="hljs-comment">--&#123;&quot;spear_wathgrithr&quot;, 0&#125;,                          -- 女武神长矛</span><br>    &#123;<span class="hljs-string">&quot;armorgrass&quot;</span>, <span class="hljs-number">0</span>&#125;,                                  <span class="hljs-comment">-- 草甲</span><br>    &#123;<span class="hljs-string">&quot;armormarble&quot;</span>, <span class="hljs-number">0</span>&#125;,                                 <span class="hljs-comment">-- 大理石甲</span><br>    <span class="hljs-comment">--&#123;&quot;armor_sanity&quot;, 10&#125;,                             -- 影甲</span><br>    &#123;<span class="hljs-string">&quot;armorsnurtleshell&quot;</span>, <span class="hljs-number">0</span>&#125;,                           <span class="hljs-comment">-- 蜗牛甲</span><br>    &#123;<span class="hljs-string">&quot;armorwood&quot;</span>, <span class="hljs-number">0</span>&#125;,                                   <span class="hljs-comment">-- 木甲</span><br>    &#123;<span class="hljs-string">&quot;armordragonfly&quot;</span>, <span class="hljs-number">0</span>&#125;,                              <span class="hljs-comment">-- 蜻蜓甲</span><br>    &#123;<span class="hljs-string">&quot;armor_bramble&quot;</span>, <span class="hljs-number">0</span>&#125;,                               <span class="hljs-comment">-- 荆棘甲</span><br>    &#123;<span class="hljs-string">&quot;footballhat&quot;</span>, <span class="hljs-number">0</span>&#125;,                                 <span class="hljs-comment">-- 猪皮帽</span><br>    &#123;<span class="hljs-string">&quot;slurtlehat&quot;</span>, <span class="hljs-number">0</span>&#125;,                                  <span class="hljs-comment">-- 蜗牛帽</span><br>    <span class="hljs-comment">--&#123;&quot;wathgrithrhat&quot;, 0&#125;,                             -- 女武神头盔</span><br>    <span class="hljs-comment">--&#123;&quot;firestaff&quot;, 0&#125;,                                 -- 火魔杖</span><br>    <span class="hljs-comment">--&#123;&quot;icestaff&quot;, 0&#125;,                                  -- 冰魔杖</span><br>    &#123;<span class="hljs-string">&quot;chesspiece_deerclops_sketch&quot;</span>, <span class="hljs-number">0</span>&#125;,                 <span class="hljs-comment">-- 四季 boss 棋子图</span><br>    &#123;<span class="hljs-string">&quot;chesspiece_bearger_sketch&quot;</span>, <span class="hljs-number">0</span>&#125;,<br>    &#123;<span class="hljs-string">&quot;chesspiece_moosegoose_sketch&quot;</span>, <span class="hljs-number">0</span>&#125;,<br>    &#123;<span class="hljs-string">&quot;chesspiece_dragonfly_sketch&quot;</span>, <span class="hljs-number">0</span>&#125;,<br>    <span class="hljs-comment">--&#123;&quot;shadowheart&quot;, 3&#125;,                               -- 影心</span><br>    &#123;<span class="hljs-string">&quot;oar&quot;</span>, <span class="hljs-number">0</span>&#125;,                                         <span class="hljs-comment">-- 桨</span><br>    &#123;<span class="hljs-string">&quot;oar_driftwood&quot;</span>, <span class="hljs-number">0</span>&#125;,                                         <span class="hljs-comment">-- 桨</span><br>    &#123;<span class="hljs-string">&quot;antliontrinket&quot;</span>, <span class="hljs-number">0</span>&#125;,                              <span class="hljs-comment">-- 蚁狮掉落物</span><br>    <span class="hljs-comment">------------------------  厨师的物品  ------------------------</span><br>    &#123;<span class="hljs-string">&quot;portablecookpot_item&quot;</span>, <span class="hljs-number">0</span>&#125;,<br>    &#123;<span class="hljs-string">&quot;portableblender_item&quot;</span>, <span class="hljs-number">0</span>&#125;,<br>    &#123;<span class="hljs-string">&quot;portablespicer_item&quot;</span>, <span class="hljs-number">0</span>&#125;,<br>&#125;<br><br><span class="hljs-comment">--冬季盛宴</span><br><span class="hljs-keyword">local</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">winterfeast_rmlist</span><span class="hljs-params">()</span></span><br>    <span class="hljs-keyword">for</span> i=<span class="hljs-number">1</span>,<span class="hljs-number">9</span> <span class="hljs-keyword">do</span> <span class="hljs-built_in">table</span>.<span class="hljs-built_in">insert</span>(rmlist, &#123;<span class="hljs-string">&quot;winter_food&quot;</span>..i, <span class="hljs-number">0</span>&#125;) <span class="hljs-keyword">end</span><br>    <span class="hljs-keyword">for</span> i=<span class="hljs-number">1</span>,<span class="hljs-number">12</span> <span class="hljs-keyword">do</span> <span class="hljs-built_in">table</span>.<span class="hljs-built_in">insert</span>(rmlist, &#123;<span class="hljs-string">&quot;winter_ornament_plain&quot;</span>..i, <span class="hljs-number">0</span>&#125;) <span class="hljs-keyword">end</span><br>    <span class="hljs-keyword">for</span> i=<span class="hljs-number">1</span>,<span class="hljs-number">8</span> <span class="hljs-keyword">do</span> <span class="hljs-built_in">table</span>.<span class="hljs-built_in">insert</span>(rmlist, &#123;<span class="hljs-string">&quot;winter_ornament_fancy&quot;</span>..i, <span class="hljs-number">0</span>&#125;) <span class="hljs-keyword">end</span><br>    <span class="hljs-keyword">for</span> i=<span class="hljs-number">1</span>,<span class="hljs-number">8</span> <span class="hljs-keyword">do</span> <span class="hljs-built_in">table</span>.<span class="hljs-built_in">insert</span>(rmlist, &#123;<span class="hljs-string">&quot;winter_ornament_light&quot;</span>..i, <span class="hljs-number">0</span>&#125;) <span class="hljs-keyword">end</span><br>    <span class="hljs-keyword">for</span> i=<span class="hljs-number">1</span>,<span class="hljs-number">5</span> <span class="hljs-keyword">do</span> <span class="hljs-built_in">table</span>.<span class="hljs-built_in">insert</span>(rmlist, &#123;<span class="hljs-string">&quot;winter_ornament_festivalevents&quot;</span>..i, <span class="hljs-number">0</span>&#125;) <span class="hljs-keyword">end</span><br>    <span class="hljs-built_in">table</span>.<span class="hljs-built_in">insert</span>(rmlist, &#123;<span class="hljs-string">&quot;winter_ornament_boss_bearger&quot;</span>, <span class="hljs-number">0</span> &#125;)<br>    <span class="hljs-built_in">table</span>.<span class="hljs-built_in">insert</span>(rmlist, &#123;<span class="hljs-string">&quot;winter_ornament_boss_beequeen&quot;</span>, <span class="hljs-number">0</span>&#125;)<br>    <span class="hljs-built_in">table</span>.<span class="hljs-built_in">insert</span>(rmlist, &#123;<span class="hljs-string">&quot;winter_ornament_boss_deerclops&quot;</span>, <span class="hljs-number">0</span>&#125;)<br>    <span class="hljs-built_in">table</span>.<span class="hljs-built_in">insert</span>(rmlist, &#123;<span class="hljs-string">&quot;winter_ornament_boss_dragonfly&quot;</span>, <span class="hljs-number">0</span>&#125;)<br>    <span class="hljs-built_in">table</span>.<span class="hljs-built_in">insert</span>(rmlist, &#123;<span class="hljs-string">&quot;winter_ornament_boss_moose&quot;</span>, <span class="hljs-number">0</span>&#125;)<br>    <span class="hljs-built_in">table</span>.<span class="hljs-built_in">insert</span>(rmlist, &#123;<span class="hljs-string">&quot;winter_ornament_boss_toadstool&quot;</span>, <span class="hljs-number">0</span>&#125;)<br>    <span class="hljs-built_in">table</span>.<span class="hljs-built_in">insert</span>(rmlist, &#123;<span class="hljs-string">&quot;winter_ornament_boss_antlion&quot;</span>, <span class="hljs-number">0</span>&#125;)<br>    <span class="hljs-built_in">table</span>.<span class="hljs-built_in">insert</span>(rmlist, &#123;<span class="hljs-string">&quot;winter_ornament_boss_fuelweaver&quot;</span>, <span class="hljs-number">0</span>&#125;)<br>    <span class="hljs-built_in">table</span>.<span class="hljs-built_in">insert</span>(rmlist, &#123;<span class="hljs-string">&quot;winter_ornament_boss_klaus&quot;</span>, <span class="hljs-number">0</span>&#125;)<br>    <span class="hljs-built_in">table</span>.<span class="hljs-built_in">insert</span>(rmlist, &#123;<span class="hljs-string">&quot;winter_ornament_boss_krampus&quot;</span>, <span class="hljs-number">0</span>&#125;)<br>    <span class="hljs-built_in">table</span>.<span class="hljs-built_in">insert</span>(rmlist, &#123;<span class="hljs-string">&quot;winter_ornament_boss_noeyered&quot;</span>, <span class="hljs-number">0</span>&#125;)<br>    <span class="hljs-built_in">table</span>.<span class="hljs-built_in">insert</span>(rmlist, &#123;<span class="hljs-string">&quot;winter_ornament_boss_noeyeblue&quot;</span>, <span class="hljs-number">0</span>&#125;)<br><span class="hljs-keyword">end</span><br><br><span class="hljs-comment">--万圣节</span><br><span class="hljs-keyword">local</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">hallowed_night_rmlist</span><span class="hljs-params">()</span></span><br>    <span class="hljs-keyword">for</span> i=<span class="hljs-number">1</span>,<span class="hljs-number">14</span> <span class="hljs-keyword">do</span> <span class="hljs-built_in">table</span>.<span class="hljs-built_in">insert</span>(rmlist, &#123;<span class="hljs-string">&quot;halloweencandy_&quot;</span>..i, <span class="hljs-number">0</span>&#125;) <span class="hljs-keyword">end</span><br>    <span class="hljs-keyword">for</span> i=<span class="hljs-number">1</span>,<span class="hljs-number">6</span> <span class="hljs-keyword">do</span> <span class="hljs-built_in">table</span>.<span class="hljs-built_in">insert</span>(rmlist, &#123;<span class="hljs-string">&quot;halloween_ornament_&quot;</span>..i, <span class="hljs-number">0</span>&#125;) <span class="hljs-keyword">end</span><br>    <span class="hljs-built_in">table</span>.<span class="hljs-built_in">insert</span>(rmlist, &#123;<span class="hljs-string">&quot;halloween_experiment_bravery&quot;</span>, <span class="hljs-number">0</span>&#125;)<br>    <span class="hljs-built_in">table</span>.<span class="hljs-built_in">insert</span>(rmlist, &#123;<span class="hljs-string">&quot;halloween_experiment_health&quot;</span>, <span class="hljs-number">0</span>&#125;)<br>    <span class="hljs-built_in">table</span>.<span class="hljs-built_in">insert</span>(rmlist, &#123;<span class="hljs-string">&quot;halloween_experiment_sanity&quot;</span>, <span class="hljs-number">0</span>&#125;)<br>    <span class="hljs-built_in">table</span>.<span class="hljs-built_in">insert</span>(rmlist, &#123;<span class="hljs-string">&quot;halloween_experiment_volatile&quot;</span>, <span class="hljs-number">0</span>&#125;)<br>    <span class="hljs-built_in">table</span>.<span class="hljs-built_in">insert</span>(rmlist, &#123;<span class="hljs-string">&quot;halloween_experiment_moon&quot;</span>, <span class="hljs-number">0</span>&#125;)<br>    <span class="hljs-built_in">table</span>.<span class="hljs-built_in">insert</span>(rmlist, &#123;<span class="hljs-string">&quot;halloween_experiment_root&quot;</span>, <span class="hljs-number">0</span>&#125;)<br><span class="hljs-keyword">end</span><br><br><span class="hljs-comment">--玩具</span><br><span class="hljs-keyword">local</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">trinket_rmlist</span><span class="hljs-params">()</span></span><br>    <span class="hljs-keyword">for</span> i=<span class="hljs-number">2</span>,<span class="hljs-number">5</span> <span class="hljs-keyword">do</span> <span class="hljs-built_in">table</span>.<span class="hljs-built_in">insert</span>(rmlist, &#123;<span class="hljs-string">&quot;trinket_&quot;</span>..i, <span class="hljs-number">0</span>&#125;) <span class="hljs-keyword">end</span><br>    <span class="hljs-keyword">for</span> i=<span class="hljs-number">7</span>,<span class="hljs-number">45</span> <span class="hljs-keyword">do</span> <span class="hljs-built_in">table</span>.<span class="hljs-built_in">insert</span>(rmlist, &#123;<span class="hljs-string">&quot;trinket_&quot;</span>..i, <span class="hljs-number">0</span>&#125;) <span class="hljs-keyword">end</span><br><span class="hljs-keyword">end</span><br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">clean</span><span class="hljs-params">()</span></span><br>    winterfeast_rmlist()<br>    hallowed_night_rmlist()<br>    trinket_rmlist()<br>    <span class="hljs-keyword">for</span> k,v <span class="hljs-keyword">in</span> <span class="hljs-built_in">pairs</span>(rmlist) <span class="hljs-keyword">do</span> s_rmognum(v[<span class="hljs-number">1</span>],v[<span class="hljs-number">2</span>]) <span class="hljs-keyword">end</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Clean Finished!&quot;</span>)<br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><blockquote><p>输入<code>clean()</code>即可<br>其中<code>rmlist</code>的内容可以根据喜好自行修改，只清理在地面上的物品</p></blockquote><h3 id="随机再生资源"><a href="#随机再生资源" class="headerlink" title="随机再生资源"></a>随机再生资源</h3><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><code class="hljs Lua"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">printground</span><span class="hljs-params">()</span></span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;自然地皮&quot;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;DECIDUOUS&quot;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;GRASS&quot;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;SAVANNA&quot;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;FOREST&quot;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;MARSH&quot;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;ROCKY&quot;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;DIRT&quot;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;DESERT_DIRT&quot;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;月岛地皮&quot;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;METEOR&quot;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;PEBBLEBEACH&quot;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;人工地皮&quot;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;SCALE&quot;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;CHECKER&quot;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;CARPET&quot;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;WOODFLOOR&quot;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;海洋：&quot;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;OCEAN_HAZARDOUS&quot;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;OCEAN_START&quot;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;OCEAN_COASTAL_SHORE&quot;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;OCEAN_BRINEPOOL&quot;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;OCEAN_COASTAL&quot;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;OCEAN_SWELL&quot;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;OCEAN_REEF&quot;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;OCEAN_ROUGH&quot;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;不可用&quot;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;IMPASSABLE&quot;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;INVALID&quot;</span>)<br><span class="hljs-keyword">end</span><br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">tilespawn</span><span class="hljs-params">(prefab,groundtype)</span></span><br>    <span class="hljs-keyword">local</span> pt = Vector3(<span class="hljs-built_in">math</span>.<span class="hljs-built_in">random</span>(<span class="hljs-number">-1000</span>, <span class="hljs-number">1000</span>), <span class="hljs-number">0</span>, <span class="hljs-built_in">math</span>.<span class="hljs-built_in">random</span>(<span class="hljs-number">-1000</span>, <span class="hljs-number">1000</span>))<br>    <span class="hljs-keyword">local</span> tile = TheWorld.Map:GetTileAtPoint(pt.x, pt.y, pt.z)<br>    <span class="hljs-comment">--local canspawn = tile ~= GROUND.IMPASSABLE and tile ~= GROUND.INVALID and tile ~= 255 and tile ~= GROUND.OCEAN_START and tile ~= GROUND.OCEAN_SWELL and tile ~= GROUND.OCEAN_ROUGH</span><br>    <span class="hljs-keyword">if</span> tile == groundtype <span class="hljs-keyword">then</span><br>        <span class="hljs-built_in">print</span>(prefab, <span class="hljs-string">&quot;spawned!&quot;</span>)<br>        <span class="hljs-keyword">local</span> b = SpawnPrefab(prefab)<br>        b.Transform:SetPosition(pt:Get())<br>    <span class="hljs-keyword">else</span><br>        tilespawn(prefab,groundtype)<br>    <span class="hljs-keyword">end</span><br><span class="hljs-keyword">end</span><br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">ramdomspawn</span><span class="hljs-params">(prefab)</span></span><br>    <span class="hljs-keyword">local</span> pt = Vector3(<span class="hljs-built_in">math</span>.<span class="hljs-built_in">random</span>(<span class="hljs-number">-1000</span>, <span class="hljs-number">1000</span>), <span class="hljs-number">0</span>, <span class="hljs-built_in">math</span>.<span class="hljs-built_in">random</span>(<span class="hljs-number">-1000</span>, <span class="hljs-number">1000</span>))<br>    <span class="hljs-keyword">local</span> tile = TheWorld.Map:GetTileAtPoint(pt.x, pt.y, pt.z)<br>    <span class="hljs-keyword">local</span> canspawn = tile ~= GROUND.IMPASSABLE <span class="hljs-keyword">and</span> tile ~= GROUND.INVALID <span class="hljs-keyword">and</span> tile ~= <span class="hljs-number">255</span> <span class="hljs-keyword">and</span><br>                     tile ~= GROUND.OCEAN_HAZARDOUS <span class="hljs-keyword">and</span> tile ~= GROUND.OCEAN_START <span class="hljs-keyword">and</span> tile ~= GROUND.OCEAN_COASTAL_SHORE <span class="hljs-keyword">and</span><br>                     tile ~= GROUND.OCEAN_BRINEPOOL <span class="hljs-keyword">and</span> tile ~= GROUND.OCEAN_COASTAL <span class="hljs-keyword">and</span> tile ~= GROUND.OCEAN_SWELL <span class="hljs-keyword">and</span><br>                     tile ~= GROUND.OCEAN_REEF <span class="hljs-keyword">and</span> tile ~= GROUND.OCEAN_ROUGH<br>    <span class="hljs-keyword">if</span> canspawn <span class="hljs-keyword">then</span><br>        <span class="hljs-built_in">print</span>(prefab, <span class="hljs-string">&quot;spawned!&quot;</span>)<br>        <span class="hljs-keyword">local</span> b = SpawnPrefab(prefab)<br>        b.Transform:SetPosition(pt:Get())<br>    <span class="hljs-keyword">else</span><br>        tilespawn(prefab,groundtype)<br>    <span class="hljs-keyword">end</span><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><blockquote><p>有三条命令<br><code>printground()</code>可显示所有的地皮类型，为后面两条命令服务<br><code>tilespawn(&quot;beefalo&quot;, GROUND.SAVANNA)</code>即可随机在沙草地皮上随机生成一只牛，其中<code>GROUND.SAVANNA</code>中的<code>SAVANNA</code>根据<code>printground()</code>的输出结果自行调整<br><code>ramdomspawn(&quot;lightninggoat&quot;)</code>即可在世界上随机生成一只羊</p></blockquote><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p><code>customcommands.lua</code>可以根据喜好自行添加，还可以增加更多DIY的内容</p><p>对于上面的距离有什么不懂，欢迎提问</p>]]></content>
    
    
    <categories>
      
      <category>游戏</category>
      
      <category>饥荒</category>
      
    </categories>
    
    
    <tags>
      
      <tag>饥荒</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>让您的饥荒昵称看起来更精致</title>
    <link href="/2019/11/dstmoji/"/>
    <url>/2019/11/dstmoji/</url>
    
    <content type="html"><![CDATA[<blockquote><p>自从新版Gorge更新以来，就引入了48种可爱的<strong>表情符号</strong><br>您只需要想像一下包含一些符号的新名称<br>我建议<strong>最多使用2-3个符号</strong>，最多6个字母<br>如果您的名字太长，则这些符号将不会正确显示<br>它在Steam或Steam论坛中显示为<code>󰀑Example󰀑</code><br>本文翻译自<a href="https://steamcommunity.com/sharedfiles/filedetails/?id=1216859962"><strong>How to look dapper in Lobby Simulator - Gorge edition - Emoticons</strong></a></p></blockquote><span id="more"></span><p><strong>表情库：</strong></p><table><thead><tr><th>名字</th><th>ASCII符号</th></tr></thead><tbody><tr><td>:abigail:</td><td>󰀜</td></tr><tr><td>:alchemy:</td><td>󰀝</td></tr><tr><td>:backpack:</td><td>󰀞</td></tr><tr><td>:battle:</td><td>󰀘</td></tr><tr><td>:beefalo:</td><td>󰀁</td></tr><tr><td>:beehive:</td><td>󰀟</td></tr><tr><td>:berry:</td><td>󰀠</td></tr><tr><td>:carrot:</td><td>󰀡</td></tr><tr><td>:chest:</td><td>󰀂</td></tr><tr><td>:chester:</td><td>󰀃</td></tr><tr><td>:crockpot:</td><td>󰀄</td></tr><tr><td>:eyeball:</td><td>󰀅</td></tr><tr><td>:egg:</td><td>󰀢</td></tr><tr><td>:eyeplant:</td><td>󰀣</td></tr><tr><td>:farm:</td><td>󰀇</td></tr><tr><td>:firepit:</td><td>󰀤</td></tr><tr><td>:fire:</td><td>󰀈</td></tr><tr><td>:flex:</td><td>󰀙</td></tr><tr><td>:ghost:</td><td>󰀉</td></tr><tr><td>:gold:</td><td>󰀚</td></tr><tr><td>:grave:</td><td>󰀊</td></tr><tr><td>:hambat:</td><td>󰀋</td></tr><tr><td>:hammer:</td><td>󰀌</td></tr><tr><td>:heart:</td><td>󰀍</td></tr><tr><td>:horn:</td><td>󰀥</td></tr><tr><td>:hunger:</td><td>󰀎</td></tr><tr><td>:lightbulb:</td><td>󰀏</td></tr><tr><td>:arcane:</td><td>󰀀</td></tr><tr><td>:meat:</td><td>󰀦</td></tr><tr><td>:pig:</td><td>󰀐</td></tr><tr><td>:poop:</td><td>󰀑</td></tr><tr><td>:redgem:</td><td>󰀒</td></tr><tr><td>:refine:</td><td>󰀧</td></tr><tr><td>:salt:</td><td>󰀨</td></tr><tr><td>:sanity:</td><td>󰀓</td></tr><tr><td>:sciencemachine:</td><td>󰀔</td></tr><tr><td>:faketeeth:</td><td>󰀆</td></tr><tr><td>:shadow:</td><td>󰀩</td></tr><tr><td>:shovel:</td><td>󰀪</td></tr><tr><td>:skull:</td><td>󰀕</td></tr><tr><td>:web:</td><td>󰀗</td></tr><tr><td>:thumbsup:</td><td>󰀫</td></tr><tr><td>:tophat:</td><td>󰀖</td></tr><tr><td>:torch:</td><td>󰀛</td></tr><tr><td>:trap:</td><td>󰀬</td></tr><tr><td>:trophy:</td><td>󰀭</td></tr><tr><td>:wave:</td><td>󰀮</td></tr><tr><td>:wormhole:</td><td>󰀯</td></tr></tbody></table><p>使用后您的名字看起来是这样子的：</p><p><img src="https://steamuserimages-a.akamaihd.net/ugc/867370065186751342/A51AAD1D3447064D8C7C000202F307F02C225F74/"></p>]]></content>
    
    
    <categories>
      
      <category>游戏</category>
      
      <category>饥荒</category>
      
    </categories>
    
    
    <tags>
      
      <tag>饥荒</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Windows 搭建饥荒服务器指南</title>
    <link href="/2019/11/dstserverwindows/"/>
    <url>/2019/11/dstserverwindows/</url>
    
    <content type="html"><![CDATA[<blockquote><p>因为有些人不习惯Linux系统，这里我专门写一章Windows版的搭建教程</p></blockquote><blockquote><p>本指南的目的是在Windows上创建带<strong>洞穴</strong>的饥荒服务器，非<strong>多层世界</strong><br>本指南基于<strong>Windows Server 2016</strong>制作，理论上其他Windows也是兼容的</p></blockquote><span id="more"></span> <h2 id="下载SteamCMD并安装服务器"><a href="#下载SteamCMD并安装服务器" class="headerlink" title="下载SteamCMD并安装服务器"></a>下载SteamCMD并安装服务器</h2><p>为SteamCMD创建一个文件夹</p><p>例如：</p><p><code>C:\steamcmd</code></p><p>下载适用于Windows的<a href="https://steamcdn-a.akamaihd.net/client/installer/steamcmd.zip">SteamCMD</a></p><p>将zip的内容提取到该文件夹​​中</p><ul><li>进入文件夹steamcmd</li><li>启动软件steamcmd</li><li>等待有关steamcmd的更新结束</li><li>输入<code>login anonymous</code></li><li>输入<code>force_install_dir C:\DontStarveTogetherServer</code><blockquote><p>将在<code>C:\DontStarveTogetherServer</code>安装饥荒服务器</p></blockquote></li><li>输入<code>app_update 343050 validate</code></li><li>安装完成后输入<code>安装完成后</code>退出<blockquote><p>以后每次更新游戏只要重复上述代码即可</p></blockquote></li></ul><h2 id="启动两个服务器（地面和洞穴）"><a href="#启动两个服务器（地面和洞穴）" class="headerlink" title="启动两个服务器（地面和洞穴）"></a>启动两个服务器（地面和洞穴）</h2><p>您需要创建两个bat脚本（<code>master.sh</code>和<code>caves.sh</code>）来分别运行两个世界</p><p>进入目录<code>C:\DontStarveTogetherServer\bin</code></p><p>我们先创建<code>master.bat</code>，内容为</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">dontstarve_dedicated_server_nullrenderer.exe -persistent_storage_root C:\klei -conf_dir DoNotStarveTogether -cluster Cluster_1 -shard <span class="hljs-literal">Master</span><br></code></pre></td></tr></table></figure><p>再创建<code>caves.bat</code>，内容为</p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs livescript">dontstarve_dedicated_server_nullrenderer.exe -persistent_storage_root C:<span class="hljs-string">\klei</span> -conf_dir DoNotStarveTogether -cluster Cluster_1 -shard Caves<br></code></pre></td></tr></table></figure><p>再创建<code>start.bat</code>，内容为</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs crmsh"><span class="hljs-literal">start</span> <span class="hljs-literal">master</span>.bat<br><span class="hljs-literal">start</span> caves.bat<br></code></pre></td></tr></table></figure><h2 id="运行和停止两个服务器以创建存档文件Master（地面）和Caves（洞穴）"><a href="#运行和停止两个服务器以创建存档文件Master（地面）和Caves（洞穴）" class="headerlink" title="运行和停止两个服务器以创建存档文件Master（地面）和Caves（洞穴）"></a>运行和停止两个服务器<br/>以创建存档文件Master（地面）和Caves（洞穴）</h2><h4 id="地面的存档"><a href="#地面的存档" class="headerlink" title="地面的存档"></a>地面的存档</h4><p> 双击运行<code>start.bat</code>，这是会弹出两个命令行窗口，切换到名字为Master的窗口</p><p>当你在屏幕上看到<code>Your Server Will Not Start</code>字眼时，关闭两个窗口</p><h2 id="为服务器创建cluster-token-txt"><a href="#为服务器创建cluster-token-txt" class="headerlink" title="为服务器创建cluster_token.txt"></a>为服务器创建cluster_token.txt</h2><p>在你PC上打开饥荒联机版游戏 -&gt; 点击<code>开始游戏</code> -&gt; 点击<code>账户信息</code> -&gt; 点击最上面一排的<code>游戏</code> </p><p>-&gt; 点击<code>Don&#39;t Starve Together Servers</code> -&gt; 拉到最下面，随便输一个名字，点击<code>添加新服务器</code></p><p>即可获取一串以<code>pds-g</code>开头的字符串，复制</p><p>在<code>C:\klei\DoNotStarveTogether\Cluster_1\</code>下创建<code>cluster_token.txt</code>，内容为上面复制的字符串</p><h2 id="为两个服务器创建leveldataoverride-lua"><a href="#为两个服务器创建leveldataoverride-lua" class="headerlink" title="为两个服务器创建leveldataoverride.lua"></a>为两个服务器创建leveldataoverride.lua</h2><p>leveldataoverride.lua代表生成世界的设置，你可以调整季节、怪物或生物群系以及更多</p><h3 id="获取leveldataoverride-lua文件配置"><a href="#获取leveldataoverride-lua文件配置" class="headerlink" title="获取leveldataoverride.lua文件配置"></a>获取leveldataoverride.lua文件配置</h3><ol><li>打开Windows PC饥荒联机版游戏</li><li>按照您的喜好在第一个存档位置创建您的世界（需添加洞穴）</li><li>创建成功世界后退出游戏</li><li>打开您电脑中的该路径<code>C:\Users\XXX\Documents\Klei\DoNotStarveTogether</code><blockquote><p><code>XXX</code>为您电脑的用户名</p></blockquote></li><li>打开该路径下的名字为数字的文件夹</li><li>打开<code>Cluster_1</code>，里面会有<code>Master</code>和<code>Caves</code>文件夹，这两个文件夹里分别有一个<code>leveldataoverride.lua</code>文件</li></ol><h3 id="创建Linux上的leveldataoverride-lua"><a href="#创建Linux上的leveldataoverride-lua" class="headerlink" title="创建Linux上的leveldataoverride.lua"></a>创建Linux上的leveldataoverride.lua</h3><h4 id="地面的leveldataoverride-lua"><a href="#地面的leveldataoverride-lua" class="headerlink" title="地面的leveldataoverride.lua"></a>地面的leveldataoverride.lua</h4><p>把上面获取到的<code>Master</code>里的<code>leveldataoverride.lua</code>复制到<code>C:\klei\DoNotStarveTogether\Cluster_1\Master\</code>，如果提示文件存在就选择覆盖替换</p><h4 id="洞穴的leveldataoverride-lua"><a href="#洞穴的leveldataoverride-lua" class="headerlink" title="洞穴的leveldataoverride.lua"></a>洞穴的leveldataoverride.lua</h4><p>同样，把上面获取到的<code>Caves</code>里的<code>leveldataoverride.lua</code>复制到<code>C:\klei\DoNotStarveTogether\Cluster_1\Caves\</code>，如果提示文件存在就选择覆盖替换</p><h2 id="创建并配置cluster-ini"><a href="#创建并配置cluster-ini" class="headerlink" title="创建并配置cluster.ini"></a>创建并配置cluster.ini</h2><p>编辑<code>C:\klei\DoNotStarveTogether\Cluster_1\</code>下的<code>cluster.ini</code></p><p>内容为</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs INI"><span class="hljs-section">[GAMEPLAY]</span><br><span class="hljs-attr">game_mode</span> = endless<br><span class="hljs-attr">max_players</span> = <span class="hljs-number">8</span><br><span class="hljs-attr">pvp</span> = <span class="hljs-literal">false</span><br><span class="hljs-attr">pause_when_empty</span> = <span class="hljs-literal">true</span><br><br><br><span class="hljs-section">[NETWORK]</span><br><span class="hljs-attr">lan_only_cluster</span> = <span class="hljs-literal">false</span><br><span class="hljs-attr">cluster_intention</span> = cooperative<br><span class="hljs-attr">cluster_password</span> = <span class="hljs-number">123456</span><br><span class="hljs-attr">cluster_name</span> = 服务器测试<br><span class="hljs-attr">cluster_description</span> = 一起嗨起来<br><span class="hljs-attr">offline_cluster</span> = <span class="hljs-literal">false</span><br><span class="hljs-attr">cluster_language</span> = zh<br><br><span class="hljs-section">[STEAM]</span><br><span class="hljs-attr">steam_group_id</span> = <span class="hljs-number">35243410</span><br><span class="hljs-attr">steam_group_admins</span> = <span class="hljs-literal">false</span><br><span class="hljs-attr">steam_group_only</span> = <span class="hljs-literal">false</span><br><br><br><span class="hljs-section">[MISC]</span><br><span class="hljs-attr">max_snapshots</span> = <span class="hljs-number">20</span><br><span class="hljs-attr">console_enabled</span> = <span class="hljs-literal">true</span><br><br><br><span class="hljs-section">[SHARD]</span><br><span class="hljs-attr">shard_enabled</span> = <span class="hljs-literal">true</span><br><span class="hljs-attr">bind_ip</span>=<span class="hljs-number">0.0</span>.<span class="hljs-number">0.0</span><br><span class="hljs-attr">master_ip</span> = <span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span><br><span class="hljs-attr">master_port</span> = <span class="hljs-number">10888</span><br><span class="hljs-attr">cluster_key</span> = defaultPass<br></code></pre></td></tr></table></figure><blockquote><p>注：<br>game_mode 游戏模式，选项为<code>survival</code> <code>endless</code> <code>wilderness</code>，分别对应<code>生存</code> <code>无尽</code> <code>荒野</code>模式<br>max_players 最大人数<br>pvp 开启PVP模式，选项为<code>true</code> <code>false</code><br>cluster_intention 游戏风格，选项为<code>cooperative</code> <code>competitive</code> <code>social</code> <code>madness</code><br>cluster_password 服务器密码<br>cluster_name 服务器名<br>cluster_description 服务器介绍<br>steam_group_id steam群组的id，如果不添加群组请留空<br>steam_group_admins 群组的管理也变成服务器的管理员，选项为<code>true</code> <code>false</code><br>steam_group_only 只有群组成员才能加入，选项为<code>true</code> <code>false</code><br>max_snapshots 最大存档天数，游戏默认只保存5天的存档</p></blockquote><h2 id="为两个服务器创建server-ini"><a href="#为两个服务器创建server-ini" class="headerlink" title="为两个服务器创建server.ini"></a>为两个服务器创建server.ini</h2><h4 id="地面的server-ini"><a href="#地面的server-ini" class="headerlink" title="地面的server.ini"></a>地面的server.ini</h4><p>编辑<code>C:\klei\DoNotStarveTogether\Cluster_1\Master</code>下的<code>server.ini</code></p><p>内容为</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs INI"><span class="hljs-section">[NETWORK]</span><br><span class="hljs-attr">server_port</span> = <span class="hljs-number">11999</span><br><br><br><span class="hljs-section">[SHARD]</span><br><span class="hljs-attr">is_master</span> = <span class="hljs-literal">true</span><br><br><br><span class="hljs-section">[ACCOUNT]</span><br><span class="hljs-attr">encode_user_path</span> = <span class="hljs-literal">true</span><br><br><br><span class="hljs-section">[STEAM]</span><br><span class="hljs-attr">master_server_port</span> = <span class="hljs-number">28018</span><br><span class="hljs-attr">authentication_port</span> = <span class="hljs-number">9768</span><br></code></pre></td></tr></table></figure><h4 id="洞穴的server-ini"><a href="#洞穴的server-ini" class="headerlink" title="洞穴的server.ini"></a>洞穴的server.ini</h4><p>编辑<code>C:\klei\DoNotStarveTogether\Cluster_1\Caves</code>下的<code>server.ini</code></p><p>内容为</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs INI"><span class="hljs-section">[NETWORK]</span><br><span class="hljs-attr">server_port</span> = <span class="hljs-number">12000</span><br><br><br><span class="hljs-section">[SHARD]</span><br><span class="hljs-attr">is_master</span> = <span class="hljs-literal">false</span><br><span class="hljs-attr">name</span> = Caves<br><span class="hljs-attr">id</span> = <span class="hljs-number">11</span><br><br><br><span class="hljs-section">[ACCOUNT]</span><br><span class="hljs-attr">encode_user_path</span> = <span class="hljs-literal">true</span><br><br><br><span class="hljs-section">[STEAM]</span><br><span class="hljs-attr">master_server_port</span> = <span class="hljs-number">28019</span><br><span class="hljs-attr">authentication_port</span> = <span class="hljs-number">9769</span><br></code></pre></td></tr></table></figure><h2 id="为两个服务器添加mod"><a href="#为两个服务器添加mod" class="headerlink" title="为两个服务器添加mod"></a>为两个服务器添加mod</h2><p>还记得上文的为服务器创建<code>leveldataoverride.lua</code>的方法吧？</p><p>为服务器添加mod的方法类似</p><h3 id="获取modoverrides-lua文件配置"><a href="#获取modoverrides-lua文件配置" class="headerlink" title="获取modoverrides.lua文件配置"></a>获取modoverrides.lua文件配置</h3><ol><li>打开Windows PC饥荒联机版游戏</li><li>按照您的喜好在第一个存档位置创建您的世界（需添加洞穴），这是需添加mod，提前在创意工坊订阅好</li><li>创建成功世界后退出游戏</li><li>打开您电脑中的该路径<code>C:\Users\XXX\Documents\Klei\DoNotStarveTogether</code><blockquote><p><code>XXX</code>为您电脑的用户名</p></blockquote></li><li>打开该路径下的名字为数字的文件夹</li><li>打开<code>Cluster_1</code>，里面会有<code>Master</code>和<code>Caves</code>文件夹，这两个文件夹里分别有一个<code>modoverrides.lua</code>文件</li></ol><h3 id="创建Linux上的modoverrides-lua"><a href="#创建Linux上的modoverrides-lua" class="headerlink" title="创建Linux上的modoverrides.lua"></a>创建Linux上的modoverrides.lua</h3><h4 id="地面的modoverrides-lua"><a href="#地面的modoverrides-lua" class="headerlink" title="地面的modoverrides.lua"></a>地面的modoverrides.lua</h4><p>把上面获取到的<code>Master</code>里的<code>modoverrides.lua</code>复制到<code>C:\klei\DoNotStarveTogether\Cluster_1\Master\</code>，如果提示文件存在就选择覆盖替换</p><h4 id="洞穴的modoverrides-lua"><a href="#洞穴的modoverrides-lua" class="headerlink" title="洞穴的modoverrides.lua"></a>洞穴的modoverrides.lua</h4><p>把上面获取到的<code>Caves</code>里的<code>modoverrides.lua</code>复制到<code>C:\klei\DoNotStarveTogether\Cluster_1\Caves\</code>，如果提示文件存在就选择覆盖替换</p><h3 id="修改dedicated-server-mods-setup-lua以让服务器下载相应mod"><a href="#修改dedicated-server-mods-setup-lua以让服务器下载相应mod" class="headerlink" title="修改dedicated_server_mods_setup.lua以让服务器下载相应mod"></a>修改dedicated_server_mods_setup.lua以让服务器下载相应mod</h3><p>编辑<code>C:\DontStarveTogetherServer\mods</code>下的<code>dedicated_server_mods_setup.lua</code></p><p>在里面另起一行，输入你要添加的mod，格式如下：</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs Lua">ServerModSetup(<span class="hljs-string">&quot;375850593&quot;</span>)<br>ServerModSetup(<span class="hljs-string">&quot;1438233888&quot;</span>)<br>ServerModSetup(<span class="hljs-string">&quot;850494968&quot;</span>)<br>ServerModSetup(<span class="hljs-string">&quot;666155465&quot;</span>)<br>ServerModSetup(<span class="hljs-string">&quot;1185229307&quot;</span>)<br>ServerModSetup(<span class="hljs-string">&quot;1595631294&quot;</span>)<br>ServerModSetup(<span class="hljs-string">&quot;462434129&quot;</span>)<br></code></pre></td></tr></table></figure><p>每个mod一行，双引号中间的数字为对应mod的ID</p><p>获取mod的ID的方法：</p><h4 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h4><p>打开之前获取的<code>modoverrides.lua</code>，里面的格式为</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Lua">[<span class="hljs-string">&quot;workshop-375850593&quot;</span>]=&#123; configuration_options=&#123;  &#125;, enabled=<span class="hljs-literal">true</span> &#125;,<br></code></pre></td></tr></table></figure><p>其中workshop后面的数字即为mod的ID</p><h4 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h4><p>打mod的创意工坊页面，如<code>https://steamcommunity.com/sharedfiles/filedetails/?id=501385076</code></p><p>链接中<code>id=</code>后面的就是mod的ID</p><h2 id="测试两个服务器"><a href="#测试两个服务器" class="headerlink" title="测试两个服务器"></a>测试两个服务器</h2><p>运行<code>start.bat</code>，服务器就启动了<br>分别查看两个命令行窗口</p><p>如果看到<code>Sim paused</code>，说明服务器开启成功，打开游戏看看能不能连接上吧</p><p>至此服务器就创建完毕了</p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="添加管理员"><a href="#添加管理员" class="headerlink" title="添加管理员"></a>添加管理员</h3><p>如果您用的是自己的cluster_token创建服务器，那么默认您就是游戏管理员</p><p>如果您想添加其他的玩家为管理员，在<code>C:\klei\DoNotStarveTogether\Cluster_1</code>下创建<code>adminlist.txt</code></p><p>在里面添加对应玩家的ID，一行一个玩家</p><p>重启服务器后生效</p><h3 id="添加黑名单"><a href="#添加黑名单" class="headerlink" title="添加黑名单"></a>添加黑名单</h3><p>同理，在<code>C:\klei\DoNotStarveTogether\Cluster_1</code>下创建<code>blocklist.txt</code></p><p>在里面添加对应玩家的ID，一行一个玩家</p><p>重启服务器后生效</p><blockquote><p>玩家ID可在服务器日志中查看，格式为<code>KU_</code>开头</p></blockquote><p><strong>在服务器创建的过程中如果遇到问题，欢迎在下方留言</strong></p>]]></content>
    
    
    <categories>
      
      <category>游戏</category>
      
      <category>饥荒</category>
      
    </categories>
    
    
    <tags>
      
      <tag>饥荒</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>VirtualBox 安装 Lubuntu 备忘录</title>
    <link href="/2019/10/vboxlubuntu/"/>
    <url>/2019/10/vboxlubuntu/</url>
    
    <content type="html"><![CDATA[<blockquote><p>Lubuntu是Ubuntu的另一个分支，其桌面环境是LXDE，适合性能范围较低的计算机<br>因此，我在VirtualBox上安装Lubuntu可以流畅运行，而不像Ubuntu那样异常卡顿<br>在此记录</p></blockquote><span id="more"></span><h2 id="安装Lubuntu"><a href="#安装Lubuntu" class="headerlink" title="安装Lubuntu"></a>安装Lubuntu</h2><p>官网下载Lubuntu的最新镜像，安装过程很无脑，在此省略</p><h2 id="安装增强功能"><a href="#安装增强功能" class="headerlink" title="安装增强功能"></a>安装增强功能</h2><p>点击<code>安装增强功能</code>，进入光盘目录，按<code>F4</code>打开终端</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-built_in">sudo</span> ./VBoxLinuxAdditions.run<br></code></pre></td></tr></table></figure><p>安装完成后重启</p><h2 id="配置清华的源"><a href="#配置清华的源" class="headerlink" title="配置清华的源"></a>配置清华的源</h2><p>清华源地址：<a href="https://mirror.tuna.tsinghua.edu.cn/help/ubuntu/">清华大学开源软件镜像站</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-built_in">sudo</span> <span class="hljs-built_in">cp</span> /etc/apt/sources.list /etc/apt/sources.list.bak<br><span class="hljs-built_in">sudo</span> vi /etc/apt/sources.list<br></code></pre></td></tr></table></figure><p>配置完成后更新软件源：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-built_in">sudo</span> apt update<br></code></pre></td></tr></table></figure><h2 id="将个人目录的文件转为英文"><a href="#将个人目录的文件转为英文" class="headerlink" title="将个人目录的文件转为英文"></a>将个人目录的文件转为英文</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-built_in">export</span> LANG=en_US<br>xdg-user-dirs-gtk-update<br></code></pre></td></tr></table></figure><p>跳出对话框询问是否将目录转化为英文路径，同意并关闭</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-built_in">export</span> LANG=zh_CN<br></code></pre></td></tr></table></figure><h2 id="安装中文输入法"><a href="#安装中文输入法" class="headerlink" title="安装中文输入法"></a>安装中文输入法</h2><p>Lubuntu就算是选择中文界面，也不自带中文输入法</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-built_in">sudo</span> apt install fcitx-pinyin<br></code></pre></td></tr></table></figure><p>我选择默认的最简单的拼音输入法，当然也可以考虑Google拼音输入法，但是Lubuntu似乎不兼容搜狗拼音输入法</p><p>安装后重启系统方可生效</p><h2 id="设置Firefox系统代理"><a href="#设置Firefox系统代理" class="headerlink" title="设置Firefox系统代理"></a>设置Firefox系统代理</h2><p>在宿主机上开启ss的<code>允许来自局域网的连接</code></p><p><em>打开</em><code>Firefox</code>-&gt;<code>Network Setting</code>-&gt;<code>Manual proxy configuration</code>-&gt;<code>HTTP Proxy</code>-&gt;<em>输入宿主机的内网ip及端口</em>-&gt;<em>勾选</em><code>Use this proxy server for all protocols</code></p><h2 id="下载Google-Chrome"><a href="#下载Google-Chrome" class="headerlink" title="下载Google Chrome"></a>下载Google Chrome</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>IT</category>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>VirtualBox</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>饥荒联机服务器搭建模板</title>
    <link href="/2019/10/dstservertemplate/"/>
    <url>/2019/10/dstservertemplate/</url>
    
    <content type="html"><![CDATA[<blockquote><p>Ubuntu 32位及64位测试通过，其他Linux发行版本未测试，可自行测试</p></blockquote><p>克隆时请用命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">git <span class="hljs-built_in">clone</span> https://gitee.com/jupitersh/dst-template dst-server<br></code></pre></td></tr></table></figure><p>或将克隆后的文件夹重命名为<code>dst-server</code></p><p><strong>务必保证<code>dst-server</code>文件夹在用户主目录下</strong></p><span id="more"></span><h2 id="修改相关配置"><a href="#修改相关配置" class="headerlink" title="修改相关配置"></a>修改相关配置</h2><h3 id="服务器名称及密码等"><a href="#服务器名称及密码等" class="headerlink" title="服务器名称及密码等"></a>服务器名称及密码等</h3><p>修改<code>dst-server/klei/DoNotStarveTogether/Cluster_1/cluster.ini</code></p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs INI"><span class="hljs-section">[GAMEPLAY]</span><br><span class="hljs-attr">game_mode</span> = endless<br><span class="hljs-attr">max_players</span> = <span class="hljs-number">8</span><br><span class="hljs-attr">pvp</span> = <span class="hljs-literal">false</span><br><span class="hljs-attr">pause_when_empty</span> = <span class="hljs-literal">true</span><br><br><br><span class="hljs-section">[NETWORK]</span><br><span class="hljs-attr">lan_only_cluster</span> = <span class="hljs-literal">false</span><br><span class="hljs-attr">cluster_intention</span> = cooperative<br><span class="hljs-attr">cluster_password</span> = <br><span class="hljs-attr">cluster_name</span> = 服务器名<br><span class="hljs-attr">cluster_description</span> = 服务器说明<br><span class="hljs-attr">offline_cluster</span> = <span class="hljs-literal">false</span><br><span class="hljs-attr">cluster_language</span> = zh<br><br><span class="hljs-section">[STEAM]</span><br><span class="hljs-attr">steam_group_id</span> = <br><span class="hljs-attr">steam_group_admins</span> = <span class="hljs-literal">false</span><br><span class="hljs-attr">steam_group_only</span> = <span class="hljs-literal">false</span><br><br><br><span class="hljs-section">[MISC]</span><br><span class="hljs-attr">max_snapshots</span> = <span class="hljs-number">20</span><br><span class="hljs-attr">console_enabled</span> = <span class="hljs-literal">true</span><br><br><br><span class="hljs-section">[SHARD]</span><br><span class="hljs-attr">shard_enabled</span> = <span class="hljs-literal">true</span><br><span class="hljs-attr">bind_ip</span>=<span class="hljs-number">0.0</span>.<span class="hljs-number">0.0</span><br><span class="hljs-attr">master_ip</span> = <span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span><br><span class="hljs-attr">master_port</span> = <span class="hljs-number">10888</span><br><span class="hljs-attr">cluster_key</span> = defaultPass<br></code></pre></td></tr></table></figure><blockquote><p>将<code>服务器名</code>及<code>服务器说明</code>改为你想要的<br>不设密码的话就留空<br>其他修改参见<a href="https://jupitersh.gitee.io/2019/09/dstserverlinux/#%E5%88%9B%E5%BB%BA%E5%B9%B6%E9%85%8D%E7%BD%AEcluster-ini"><strong>Linux搭建饥荒服务器指南</strong></a></p></blockquote><h3 id="服务器世界设置"><a href="#服务器世界设置" class="headerlink" title="服务器世界设置"></a>服务器世界设置</h3><p>修改<code>dst-server/klei/DoNotStarveTogether/Cluster_1/Master/leveldataoverride.lua</code>及<code>dst-server/klei/DoNotStarveTogether/Cluster_1/Caves/leveldataoverride.lua</code></p><p>修改内容参见<a href="https://jupitersh.gitee.io/2019/09/dstserverlinux/#%E4%B8%BA%E4%B8%A4%E4%B8%AA%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%88%9B%E5%BB%BAleveldataoverride-lua"><strong>Linux搭建饥荒服务器指南</strong></a></p><h3 id="服务器mod设置"><a href="#服务器mod设置" class="headerlink" title="服务器mod设置"></a>服务器mod设置</h3><p>修改<code>dst-server/klei/DoNotStarveTogether/Cluster_1/Master/modoverrides.lua</code>及<code>dst-server/klei/DoNotStarveTogether/Cluster_1/Caves/modoverrides.lua</code></p><blockquote><p>此两个文件为mod设置</p></blockquote><p>另外还需修改<code>dst-server/dst/mods/dedicated_server_mods_setup.lua</code></p><blockquote><p>此文件为mod下载列表</p></blockquote><p>修改内容参见<a href="https://jupitersh.gitee.io/2019/09/dstserverlinux/#%E4%B8%BA%E4%B8%A4%E4%B8%AA%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%B7%BB%E5%8A%A0mod"><strong>Linux搭建饥荒服务器指南</strong></a></p><h2 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h2><p>32位运行<code>init32.sh</code>，64位运行<code>init64.sh</code>，如果无法运行吗，先运行<code>chmod +x *.sh</code></p><h2 id="日常使用"><a href="#日常使用" class="headerlink" title="日常使用"></a>日常使用</h2><ul><li><code>launch.sh</code>启动服务器<br/><br>不推荐运行该脚本，建议运行<code>restart.sh</code></li><li><code>restart.sh</code>重启服务器<br/><br>即使服务器没有开启，也可运行该脚本启动服务器，如果出现<code>No screen session found.</code>，忽略即可</li><li><code>shutdown.sh</code>关闭服务器</li><li><code>update.sh</code>更新服务器</li></ul><h2 id="服务器每天6点自动更新"><a href="#服务器每天6点自动更新" class="headerlink" title="服务器每天6点自动更新"></a>服务器每天6点自动更新</h2><p>执行命令<code>crontab -e</code>，以nano或则<code>vi</code>方式打开<code>crontab</code></p><p>在最下面粘贴以下内容：</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">0 </span><span class="hljs-number">6</span> * * * /home/ubuntu/dst-server/update.sh<br><span class="hljs-symbol">3 </span><span class="hljs-number">6</span> * * * /home/ubuntu/dst-server/restart.sh<br></code></pre></td></tr></table></figure><blockquote><p>其中<code>/home/ubuntu/</code>根据你<code>dst-server</code>放的位置修改<br>如果你的用户名也是<code>ubuntu</code>，且放在用户主目录下，那么就不需要修改<br>如果你的用户名不是<code>ubuntu</code>，请将<code>/home/ubuntu/</code>的ubuntu替换为你的用户名<br>如果你以<code>root</code>用户登录，且放在用户主目录，请将<code>/home/ubuntu/</code>改为<code>/root/</code></p></blockquote>]]></content>
    
    
    <categories>
      
      <category>游戏</category>
      
      <category>饥荒</category>
      
    </categories>
    
    
    <tags>
      
      <tag>饥荒</tag>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Git 学习笔记</title>
    <link href="/2019/09/gitnotes/"/>
    <url>/2019/09/gitnotes/</url>
    
    <content type="html"><![CDATA[<p>最近在廖雪峰的官方网站上学Git管理代码库，在这里做笔记，备忘用</p><span id="more"></span><h2 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-built_in">sudo</span> add-apt-repository ppa:git-core/ppa<br><span class="hljs-built_in">sudo</span> apt-get update<br><span class="hljs-built_in">sudo</span> apt-get install git<br>git --version<br></code></pre></td></tr></table></figure><p>安装完成后，还需要最后一步设置，输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Bash">git config --global user.name <span class="hljs-string">&quot;Your Name&quot;</span><br>git config --global user.email <span class="hljs-string">&quot;email@example.com&quot;</span><br></code></pre></td></tr></table></figure><h2 id="创建版本库"><a href="#创建版本库" class="headerlink" title="创建版本库"></a>创建版本库</h2><p>初始化一个Git仓库，使用<code>git init</code>命令</p><p>添加文件到Git仓库，分两步：</p><ol><li><p>使用命令<code>git add &lt;file&gt;</code>，注意，可反复多次使用，添加多个文件；<br>使用命令git commit -m <message>，完成</p></li><li><p>使用命令<code>git commit -m &lt;message&gt;</code>，完成</p></li></ol><h2 id="时光机穿梭"><a href="#时光机穿梭" class="headerlink" title="时光机穿梭"></a>时光机穿梭</h2><ul><li>要随时掌握工作区的状态，使用<code>git status</code>命令</li><li>如果<code>git status</code>告诉你有文件被修改过，用<code>git diff</code>可以查看修改内容</li></ul><h3 id="版本回退"><a href="#版本回退" class="headerlink" title="版本回退"></a>版本回退</h3><p>用<code>git log</code>命令查看历史记录</p><p>如果嫌输出信息太多，看得眼花缭乱的，可以试试加上<code>--pretty=oneline</code>参数</p><p>用<code>HEAD</code>表示当前版本，上一个版本就是<code>HEAD^</code>，上上一个版本就是<code>HEAD^^</code>，当然往上100个版本写100个<code>^</code>比较容易数不过来，所以写成<code>HEAD~100</code></p><p>使用<code>git reset</code>命令回退版本</p><ul><li>回退到上一个版本：<code>git reset --hard HEAD^</code></li><li>退回到指定版本：<code>git reset --hard commit_id</code></li></ul><blockquote><p><code>commit_id</code>用<code>git log</code>可以查看</p></blockquote><p>要重返未来，用<code>git reflog</code>查看命令历史，以便确定要回到未来的哪个版本</p><h3 id="撤销修改"><a href="#撤销修改" class="headerlink" title="撤销修改"></a>撤销修改</h3><ul><li><strong>场景1</strong>：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令<code>git checkout -- &lt;file&gt;</code></li><li><strong>场景2</strong>：当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令<code>it reset HEAD &lt;file&gt;</code>，就回到了场景1，第二步按场景1操作</li><li><strong>场景3</strong>：已经提交了不合适的修改到版本库时，想要撤销本次提交，参考<a href="https://jupitersh.gitee.io/2019/09/Git-Note/#%E7%89%88%E6%9C%AC%E5%9B%9E%E9%80%80"><strong>版本回退</strong></a>一节，不过前提是没有推送到远程库</li></ul><h3 id="删除文件"><a href="#删除文件" class="headerlink" title="删除文件"></a>删除文件</h3><p>命令<code>git rm</code>用于删除一个文件，然后<code>git commit -m &lt;message&gt;</code>，完成</p><p>如果是删错，用<code>git checkout -- &lt;file&gt;</code></p><h2 id="远程仓库"><a href="#远程仓库" class="headerlink" title="远程仓库"></a>远程仓库</h2><h3 id="添加远程库"><a href="#添加远程库" class="headerlink" title="添加远程库"></a>添加远程库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Bash">git remote add origin &lt;远程仓库地址&gt;<br>git push -u origin master<br></code></pre></td></tr></table></figure><blockquote><p>第一次推送<code>master</code>分支时，需加上<code>-u</code>参数<br>以后用<code>git push origin master</code>推送最新修改</p></blockquote><h3 id="从远程库克隆"><a href="#从远程库克隆" class="headerlink" title="从远程库克隆"></a>从远程库克隆</h3><p><code>git clone &lt;远程仓库地址&gt; &lt;克隆到本地时的文件夹名，可留空&gt;</code></p><h2 id="自定义Git"><a href="#自定义Git" class="headerlink" title="自定义Git"></a>自定义Git</h2><h3 id="忽略特殊文件"><a href="#忽略特殊文件" class="headerlink" title="忽略特殊文件"></a>忽略特殊文件</h3><p>在Git工作区的根目录下创建一个特殊的<code>.gitignore</code>文件，然后把要忽略的文件名填进去，Git就会自动忽略这些文件</p><p>如：</p><p>忽略Windows自动生成的垃圾文件：</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-meta"># Windows:</span><br>Thumbs<span class="hljs-meta">.db</span><br>ehthumbs<span class="hljs-meta">.db</span><br>Desktop.ini<br></code></pre></td></tr></table></figure><p>忽略Python编译产生的.pyc、.pyo、dist等文件或目录：</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli"><span class="hljs-comment"># Python:</span><br>*<span class="hljs-string">.py</span>[cod]<br>*<span class="hljs-string">.so</span><br>*<span class="hljs-string">.egg</span><br>*<span class="hljs-string">.egg-info</span><br>dist<br>build<br></code></pre></td></tr></table></figure><p>最后一步就是把<code>.gitignore</code>也提交到Git</p><h3 id="配置别名"><a href="#配置别名" class="headerlink" title="配置别名"></a>配置别名</h3><p>用<code>git st</code>表示<code>git status</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">git config --global alias.st status<br></code></pre></td></tr></table></figure><p>在<a href="https://jupitersh.gitee.io/2019/09/Git-Note/#%E6%92%A4%E9%94%80%E4%BF%AE%E6%94%B9"><strong>撤销修改</strong></a>一节中，我们知道，命令<code>git reset HEAD &lt;fil&gt;</code>可以把暂存区的修改撤销掉（unstage），重新放回工作区。既然是一个unstage操作，就可以配置一个<code>unstage</code>别名：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">git config --global alias.unstage <span class="hljs-string">&#x27;reset HEAD&#x27;</span><br></code></pre></td></tr></table></figure><p>当你敲入命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">git unstage test.py<br></code></pre></td></tr></table></figure><p>实际上Git执行的是：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">git reset HEAD test.py<br></code></pre></td></tr></table></figure><p><strong>配置文件</strong></p><p>配置文件放在<code>.git/config</code>文件中：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[core]</span><br>    <span class="hljs-attr">repositoryformatversion</span> = <span class="hljs-number">0</span><br>    <span class="hljs-attr">filemode</span> = <span class="hljs-literal">true</span><br>    <span class="hljs-attr">bare</span> = <span class="hljs-literal">false</span><br>    <span class="hljs-attr">logallrefupdates</span> = <span class="hljs-literal">true</span><br>    <span class="hljs-attr">ignorecase</span> = <span class="hljs-literal">true</span><br>    <span class="hljs-attr">precomposeunicode</span> = <span class="hljs-literal">true</span><br><span class="hljs-section">[remote &quot;origin&quot;]</span><br>    <span class="hljs-attr">url</span> = git@github.com:michaelliao/learngit.git<br>    <span class="hljs-attr">fetch</span> = +refs/heads/*:refs/remotes/origin/*<br><span class="hljs-section">[branch &quot;master&quot;]</span><br>    <span class="hljs-attr">remote</span> = origin<br>    <span class="hljs-attr">merge</span> = refs/heads/master<br><span class="hljs-section">[alias]</span><br>    <span class="hljs-attr">last</span> = log -<span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p>别名就在<code>[alias]</code>后面，要删除别名，直接把对应的行删掉即可</p><h2 id="删除所有提交历史记录，成为一个干净的新仓库"><a href="#删除所有提交历史记录，成为一个干净的新仓库" class="headerlink" title="删除所有提交历史记录，成为一个干净的新仓库"></a>删除所有提交历史记录，成为一个干净的新仓库</h2><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">git checkout --orphan latest_branch<br>git add -A<br>git commit -am <span class="hljs-string">&quot;NEW&quot;</span><br>git branch -D <span class="hljs-keyword">master</span><br><span class="hljs-title">git</span> branch -m <span class="hljs-keyword">master</span><br><span class="hljs-title">git</span> push -f origin <span class="hljs-literal">master</span><br></code></pre></td></tr></table></figure><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><a href="https://stackoverflow.com/questions/13716658/how-to-delete-all-commit-history-in-github">git - how to delete all commit history in github? - Stack Overflow</a><br><a href="https://www.liaoxuefeng.com/wiki/896043488029600">Git教程 - 廖雪峰的官方网站</a></p>]]></content>
    
    
    <categories>
      
      <category>IT</category>
      
      <category>Git</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>Git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Ubuntu 在运行 sudo 命令时免密码</title>
    <link href="/2019/09/sudopasswdless/"/>
    <url>/2019/09/sudopasswdless/</url>
    
    <content type="html"><![CDATA[<blockquote><p>本教程基于Ubuntu 18.04 64位，理论上使用于所有Ubuntu系统</p></blockquote><span id="more"></span><p>觉得每次超过五分钟后运行sudo命令时都要输入密码很烦吗？</p><p>解决办法很简单</p><p>输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-built_in">sudo</span> visudo<br></code></pre></td></tr></table></figure><p>到最下面</p><p>找到一行<code>#includedir /etc/sudoers.d</code></p><p>在其下添加一行</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">ubuntu  <span class="hljs-keyword">ALL</span>=(<span class="hljs-keyword">ALL</span>:<span class="hljs-keyword">ALL</span>) NOPASSWD: <span class="hljs-keyword">ALL</span><br></code></pre></td></tr></table></figure><blockquote><p>我的用户名是<code>ubuntu</code>，将其替换成您电脑的用户名即可</p></blockquote><p>按组合键<code>Ctrl</code>+<code>X</code>，再按<code>Y</code>，<code>回车</code>退出即可</p>]]></content>
    
    
    <categories>
      
      <category>IT</category>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>VirtualBox 安装 Ubuntu Server 18 后开启增强功能及共享文件夹</title>
    <link href="/2019/09/vboxubuntu/"/>
    <url>/2019/09/vboxubuntu/</url>
    
    <content type="html"><![CDATA[<blockquote><p>本教程基于Ubuntu 18.04 64位</p></blockquote><span id="more"></span><h2 id="开启增强功能"><a href="#开启增强功能" class="headerlink" title="开启增强功能"></a>开启增强功能</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-built_in">sudo</span> mount /dev/cdrom /mnt/<br></code></pre></td></tr></table></figure><blockquote><p>如果挂载失败，则需检查设备-&gt;分配光驱下是否包含了<code>VBoxGuestAdditions.iso</code>这个镜像<br>如果有请选择它<br>如果没有，请点击选择虚拟盘，然后在<code>C:\Program Files\Oracle\VirtualBox</code>下找到它<br>然后再执行<code>sudo mount /dev/cdrom /mnt/</code></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-built_in">sudo</span> /mnt/VBoxLinuxAdditions.run<br><span class="hljs-built_in">sudo</span> umount /mnt/<br><span class="hljs-built_in">sudo</span> reboot<br></code></pre></td></tr></table></figure><h2 id="换阿里云源"><a href="#换阿里云源" class="headerlink" title="换阿里云源"></a>换阿里云源</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-built_in">sudo</span> <span class="hljs-built_in">cp</span> /etc/apt/sources.list /etc/apt/sources.list.bak <span class="hljs-comment"># 备份源</span><br><span class="hljs-built_in">sudo</span> <span class="hljs-built_in">rm</span> /etc/apt/sources.list<br><span class="hljs-built_in">sudo</span> nano /etc/apt/sources.list<br></code></pre></td></tr></table></figure><p>粘贴源地址：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs Bash">deb http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse<br>deb http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse<br>deb http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse<br>deb http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse<br>deb http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse<br>deb-src http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse<br>deb-src http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse<br>deb-src http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse<br>deb-src http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse<br>deb-src http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse<br></code></pre></td></tr></table></figure><h2 id="共享文件夹"><a href="#共享文件夹" class="headerlink" title="共享文件夹"></a>共享文件夹</h2><p>设备-&gt;共享文件夹-&gt;共享文件夹，请添加一个共享文件夹，一般会勾选<code>固定分配</code>项，共享文件夹路径以及名称，最好都不要出现中文。<br/><br>请记下共享文件夹名称，假设为<code>VB</code>，且在共享文件夹中放入一个<code>123.txt</code>作为测试使用</p><p>执行共享文件夹的挂载命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-built_in">sudo</span> mount -t vboxsf VB [挂载后的本地路径]<br></code></pre></td></tr></table></figure><p>该路径可以填<code>/mnt/share</code>，当然，你需要先<code>mkdir share</code></p><p>例如</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-built_in">sudo</span> mount -t vboxsf VB /mnt/share<br></code></pre></td></tr></table></figure><p>然后在<code>/mnt/share</code>下可以找到<code>123.txt</code></p><h2 id="设置开机自动挂载共享文件夹"><a href="#设置开机自动挂载共享文件夹" class="headerlink" title="设置开机自动挂载共享文件夹"></a>设置开机自动挂载共享文件夹</h2><p>如果是Ubuntu 16 请用这段代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-built_in">sudo</span> nano /etc/rc.loca<br></code></pre></td></tr></table></figure><p>粘贴：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">mount -t vboxsf VBSharing /mnt/share<br></code></pre></td></tr></table></figure><p>如果是Ubuntu18 请用以下代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-built_in">sudo</span> nano /etc/fstab <br></code></pre></td></tr></table></figure><p>粘贴：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">VB /mnt/share vboxsf defaults 0 0<br></code></pre></td></tr></table></figure><h2 id="安装openssh-server-可选"><a href="#安装openssh-server-可选" class="headerlink" title="安装openssh-server(可选)"></a>安装openssh-server(可选)</h2><p>Ubuntu安装时可勾选是否安装openssh，如果已安装请忽略该步骤</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-built_in">sudo</span> apt-get install openssh-server<br></code></pre></td></tr></table></figure><h2 id="端口转发后用PuTTy连接Ubuntu-Server-可选"><a href="#端口转发后用PuTTy连接Ubuntu-Server-可选" class="headerlink" title="端口转发后用PuTTy连接Ubuntu Server(可选)"></a>端口转发后用PuTTy连接Ubuntu Server(可选)</h2><p>因为VBox里的Ubuntu Server不支持复制粘贴，故我喜欢用PuTTy连接VBox里的Ubuntu，这时就需要端口转发</p><p>方法：</p><p>设置-&gt;网络-&gt;网卡1-&gt;高级-&gt;端口转发</p><table><thead><tr><th>协议</th><th>主机IP</th><th>主机端口</th><th>子系统IP</th><th>子系统端口</th></tr></thead><tbody><tr><td><code>TCP</code></td><td><code>127.0.0.1</code></td><td><code>2222</code></td><td></td><td><code>22</code></td></tr><tr><td><code>TCP</code></td><td><code>127.0.0.1</code></td><td><code>4000</code></td><td></td><td><code>4000</code></td></tr></tbody></table><blockquote><p>第二条记录是我用hexo搭建博客本地预览用，忽略之<br>子系统IP留空</p></blockquote><p>开启端口转发后，即可在PuTTy中连接<code>127.0.0.1</code>，端口为<code>2222</code>，账号密码即Ubuntu Server的账号密码</p>]]></content>
    
    
    <categories>
      
      <category>IT</category>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>VirtualBox</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>在码云上利用 Hexo 搭建博客</title>
    <link href="/2019/09/hexogitee/"/>
    <url>/2019/09/hexogitee/</url>
    
    <content type="html"><![CDATA[<blockquote><p>本教程基于腾讯云的Ubuntu 18.04 64位</p></blockquote><span id="more"></span><h2 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Bash">curl -sL https://deb.nodesource.com/setup_12.x | <span class="hljs-built_in">sudo</span> -E bash -<br><span class="hljs-built_in">sudo</span> apt-get install nodejs<br></code></pre></td></tr></table></figure><p>安装完成后输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">node -v<br></code></pre></td></tr></table></figure><p>若能提示版本则安装成功</p><h2 id="更换国内源"><a href="#更换国内源" class="headerlink" title="更换国内源"></a>更换国内源</h2><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs arduino">npm config set registry https:<span class="hljs-comment">//registry.npm.taobao.org</span><br>npm config get registry<br></code></pre></td></tr></table></figure><p>如果更换了国内源则不用安装 <code>cnpm</code></p><h2 id="安装cnpm"><a href="#安装cnpm" class="headerlink" title="安装cnpm"></a>安装cnpm</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-built_in">sudo</span> npm install -g cnpm --registry=https://registry.npm.taobao.org<br></code></pre></td></tr></table></figure><h2 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-built_in">sudo</span> cnpm install -g hexo<br></code></pre></td></tr></table></figure><h2 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h2><p>有些系统已经预装，可先用<code>git --version</code>确认</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-built_in">sudo</span> add-apt-repository ppa:git-core/ppa<br><span class="hljs-built_in">sudo</span> apt-get update<br><span class="hljs-built_in">sudo</span> apt-get install git<br></code></pre></td></tr></table></figure><p>安装完成后输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">git --version<br></code></pre></td></tr></table></figure><p>若能提示版本则安装成功</p><h2 id="初始化hexo"><a href="#初始化hexo" class="headerlink" title="初始化hexo"></a>初始化hexo</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-built_in">mkdir</span> hexo<br><span class="hljs-built_in">cd</span> hexo<br>hexo init<br>cnpm install hexo --save <span class="hljs-comment"># 编译工具</span><br>cnpm install hexo-deployer-git --save <span class="hljs-comment"># 安装自动部署发布工具</span><br></code></pre></td></tr></table></figure><h2 id="本地编译预览"><a href="#本地编译预览" class="headerlink" title="本地编译预览"></a>本地编译预览</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">hexo clean &amp;&amp; hexo g &amp;&amp; hexo s<br></code></pre></td></tr></table></figure><p>Ubuntu 14可能出现没有<code>hexo s</code>命令</p><p>这时需执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-built_in">sudo</span> cnpm install hexo-server --save<br></code></pre></td></tr></table></figure><p>然后用<code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo server</code>命令</p><p>打开<code>127.0.0.1:4000</code>即可访问网页</p><h2 id="编译发布"><a href="#编译发布" class="headerlink" title="编译发布"></a>编译发布</h2><p>在hexo目录下的<code>_config.yml</code>最下面添加</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs YAML"><span class="hljs-attr">deploy:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">git</span><br>  <span class="hljs-attr">repo:</span> <span class="hljs-string">https://gitee.com/jupitersh/jupitersh.git</span><br>  <span class="hljs-attr">branch:</span> <span class="hljs-string">master</span><br></code></pre></td></tr></table></figure><blockquote><p>请将<code>repo</code>中的地址改为你码云的地址</p></blockquote><h3 id="Git-全局设置"><a href="#Git-全局设置" class="headerlink" title="Git 全局设置:"></a>Git 全局设置:</h3><p>发布前请先全局设置Git</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Bash">git config --global user.name <span class="hljs-string">&quot;辣椒小皇纸&quot;</span><br>git config --global user.email <span class="hljs-string">&quot;arxhd.love@qq.com&quot;</span><br></code></pre></td></tr></table></figure><blockquote><p>请将<code>user.name</code>和<code>user.email</code>的内容执行替换成您的码云用户名和邮箱</p></blockquote><p><strong>发布代码</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d <span class="hljs-comment"># 发布博客</span><br></code></pre></td></tr></table></figure><p>需输入码云的<strong>账号</strong>和<strong>密码</strong></p>]]></content>
    
    
    <categories>
      
      <category>IT</category>
      
      <category>Blogging</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>Hexo</tag>
      
      <tag>博客</tag>
      
      <tag>码云</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux Screen 命令详解</title>
    <link href="/2019/09/linuxscreen/"/>
    <url>/2019/09/linuxscreen/</url>
    
    <content type="html"><![CDATA[<blockquote><p>Linux系统管理员经常需要SSH远程登录到Linux服务器，经常运行一些需要很长时间才能完成的任务，比如系统备份、传输文件等等。<br/><br>通常情况下我们都是为每一个这样的任务开一个远程终端窗口，因为它们执行的时间太长了，必须等待它们执行完毕，在此期间不能关掉窗口或者断开连接，否则这个任务就会被杀掉。<br/><br>我们这里就是需要长期开饥荒服务器。</p></blockquote><span id="more"></span><h2 id="Screen介绍"><a href="#Screen介绍" class="headerlink" title="Screen介绍"></a>Screen介绍</h2><ul><li>Linux screen命令用于多重视窗管理程序。</li><li>用户可以通过该软件同时连接多个本地或远程的命令行会话，并在其间自由切换。</li><li>只要Screen本身没有终止，在其内部运行的会话都可以恢复。这一点对于远程登录的用户特别有用——即使网络连接中断，用户也不会失去对已经打开的命令行会话的控制。只要再次登录到主机上执行screen -r就可以恢复会话的运行。同样在暂时离开的时候，也可以执行分离命令detach，在保证里面的程序正常运行的情况下让Screen挂起（切换到后台）。</li></ul><h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">screen [-AmRvx -<span class="hljs-built_in">ls</span> -wipe][-d &lt;作业名称&gt;][-h &lt;行数&gt;][-r &lt;作业名称&gt;][-s ][-S &lt;作业名称&gt;]<br></code></pre></td></tr></table></figure><p><strong>参数说明</strong></p><p>-d &lt;作业名称&gt; 　将指定的screen作业离线。</p><p>-m 　即使目前已在作业中的screen作业，仍强制建立新的screen作业。</p><p>-r &lt;作业名称&gt; 　恢复离线的screen作业。</p><p>-S &lt;作业名称&gt; 　指定screen作业的名称。</p><p>-ls或–list 　显示目前所有的screen作业。</p><h2 id="常用screen参数"><a href="#常用screen参数" class="headerlink" title="常用screen参数"></a>常用screen参数</h2><p>screen -S yourname -&gt; 新建一个叫yourname的session</p><p>screen -ls -&gt; 列出当前所有的session</p><p>screen -r yourname -&gt; 回到yourname这个session</p><p>screen -d yourname -&gt; 远程detach某个session</p><p><strong>在每个screen session 下，所有命令都以 ctrl+a(C-a) 开始。</strong></p><p>C-a d -&gt; detach，暂时离开当前session，将目前的 screen session (可能含有多个 windows) 丢到后台执行，并会回到还没进 screen 时的状态，此时在 screen session 里，每个 window 内运行的 process (无论是前台&#x2F;后台)都在继续执行，即使 logout 也不影响。</p><p>C-a k -&gt; kill window，强行关闭当前的 window</p><h2 id="饥荒服务器运用screen实战"><a href="#饥荒服务器运用screen实战" class="headerlink" title="饥荒服务器运用screen实战"></a>饥荒服务器运用screen实战</h2><h3 id="安装screen"><a href="#安装screen" class="headerlink" title="安装screen"></a>安装screen</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-built_in">sudo</span> apt-get install screen<br></code></pre></td></tr></table></figure><h3 id="用screen来启动饥荒服务器"><a href="#用screen来启动饥荒服务器" class="headerlink" title="用screen来启动饥荒服务器"></a>用screen来启动饥荒服务器</h3><p><strong>启动地面服务器</strong> </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">screen -dmS m ~/dst/bin/master.sh<br></code></pre></td></tr></table></figure><blockquote><p>释义：<br>参数<code>d</code>让screen在后台启动<br>参数<code>m</code>指创建一个新的screen<br>参数<code>S</code>指定新创建的screen的名字<br><code>-dmS</code>后面的那个m是新创建的screen的名字<br><code>~/dst/bin/master.sh</code>是在新创建的screen中运行的代码</p></blockquote><p><strong>启动洞穴服务器</strong> </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">screen -dmS c ~/dst/bin/caves.sh<br></code></pre></td></tr></table></figure><blockquote><p>同理，该代码的意思是在后台创建一个名字为c的screen，并在screen中运行代码<code>~/dst/bin/caves.sh</code></p></blockquote><p>在<a href="https://jupitersh.github.io/dst-server-guide">Linux搭建饥荒服务器指南</a> 这篇教程教程中，不需要执行该命令，因为我已经将该命令写入<code>startmaster.sh</code>和<code>startcaves.sh</code>这两个脚本中，并通过<code>launch.sh</code>来运行这两个脚本，详见<a href="https://jupitersh.github.io/dst-server-guide#%E5%90%AF%E5%8A%A8%E8%84%9A%E6%9C%AC">教程</a>。</p><h3 id="恢复后台运行的screen"><a href="#恢复后台运行的screen" class="headerlink" title="恢复后台运行的screen"></a>恢复后台运行的screen</h3><p>饥荒服务器运行后，查看日志可以用<a href="https://jupitersh.github.io/dst-server-guide#%E6%B5%8B%E8%AF%95%E4%B8%A4%E4%B8%AA%E6%9C%8D%E5%8A%A1%E5%99%A8">tail命令</a>的办法，也可以用screen命令恢复之前后台运行的两个screen。</p><p>两个screen的名字分别是m和c。</p><h4 id="恢复名字为m的screen"><a href="#恢复名字为m的screen" class="headerlink" title="恢复名字为m的screen"></a>恢复名字为m的screen</h4><p>名字为m的screen代表地面，代码为</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">screen -dr m<br></code></pre></td></tr></table></figure><h4 id="恢复名字为c的screen"><a href="#恢复名字为c的screen" class="headerlink" title="恢复名字为c的screen"></a>恢复名字为c的screen</h4><p>名字为c的screen代表洞穴，代码为</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">screen -dr c<br></code></pre></td></tr></table></figure><h3 id="使当前前台的screen重新进入后台"><a href="#使当前前台的screen重新进入后台" class="headerlink" title="使当前前台的screen重新进入后台"></a>使当前前台的screen重新进入后台</h3><p>按组合键<code>Ctrl</code>+<code>A</code>，再按<code>D</code>即可使screen进入后台</p>]]></content>
    
    
    <categories>
      
      <category>IT</category>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>饥荒</tag>
      
      <tag>Linux</tag>
      
      <tag>Screen</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux 搭建饥荒服务器指南</title>
    <link href="/2019/09/dstserverlinux/"/>
    <url>/2019/09/dstserverlinux/</url>
    
    <content type="html"><![CDATA[<blockquote><p><strong>问</strong>：为什么要用<em><strong>Linux Server</strong></em>而不是<em><strong>Windows</strong></em>创建饥荒服务器呢？<br/><br><strong>答</strong>：<em><strong>Linux Server</strong></em>没有图形界面，同样配置下比<em><strong>Windows</strong></em>更节省系统资源。这样就能把更多资源留给饥荒服务器。另外<em><strong>Linux</strong></em>可以用ssh连接，当你熟悉代码后会发现比<em><strong>Windows</strong></em>更高效。</p></blockquote><blockquote><p>本指南的目的是在Linux上创建带<strong>洞穴</strong>的饥荒服务器，<strong>多层世界</strong>的指南将在以后说明。<br/><br>本指南基于<strong>Ubuntu 16.04 64位</strong>制作，推荐使用此Linux发行版本或<strong>Ubuntu 18.04</strong>搭建服务器，以免不必要的麻烦</p></blockquote><span id="more"></span><h2 id="安装运行SteamCMD所需的依赖项"><a href="#安装运行SteamCMD所需的依赖项" class="headerlink" title="安装运行SteamCMD所需的依赖项"></a>安装运行SteamCMD所需的依赖项</h2><p>您需要为您的服务器安装一些软件包以让SteamCMD正常工作：</p><p>如果您使用的是Ubuntu 32位，那么就跳过这个步骤；如果您使用的Ubuntu 64位，请逐行执行以下代码以安装相关软件包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-built_in">sudo</span> dpkg --add-architecture i386<br><span class="hljs-built_in">sudo</span> apt-get update -y<br><span class="hljs-built_in">sudo</span> apt-get install lib32gcc1 -y<br><span class="hljs-built_in">sudo</span> apt-get install lib32stdc++6 -y<br><span class="hljs-built_in">sudo</span> apt-get install libcurl4-gnutls-dev:i386 -y<br></code></pre></td></tr></table></figure><h2 id="下载SteamCMD"><a href="#下载SteamCMD" class="headerlink" title="下载SteamCMD"></a>下载SteamCMD</h2><p>请逐行执行以下代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-built_in">cd</span><br><span class="hljs-built_in">mkdir</span> steamcmd <span class="hljs-comment"># steamcmd文件夹</span><br><span class="hljs-built_in">mkdir</span> dst <span class="hljs-comment"># 饥荒主程序文件夹</span><br><span class="hljs-built_in">cd</span> steamcmd<br>wget https://steamcdn-a.akamaihd.net/client/installer/steamcmd_linux.tar.gz<br>tar xzvf steamcmd_linux.tar.gz<br></code></pre></td></tr></table></figure><h2 id="现在您可以安装SteamCMD"><a href="#现在您可以安装SteamCMD" class="headerlink" title="现在您可以安装SteamCMD"></a>现在您可以安装SteamCMD</h2><p>请逐行执行以下代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-built_in">cd</span> ~/steamcmd<br>./steamcmd.sh<br>login anonymous<br>force_install_dir ~/dst<br>app_update 343050 validate<br>quit<br></code></pre></td></tr></table></figure><h2 id="启动两个服务器（地面和洞穴）"><a href="#启动两个服务器（地面和洞穴）" class="headerlink" title="启动两个服务器（地面和洞穴）"></a>启动两个服务器（地面和洞穴）</h2><p>您需要创建两个bash脚本（<code>master.sh</code>和<code>caves.sh</code>）来分别运行两个世界</p><p>我们先创建<code>master.sh</code>，逐行输入以下代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-built_in">cd</span> ~/dst/bin<br>nano master.sh<br>./dontstarve_dedicated_server_nullrenderer -persistent_storage_root ~/klei -conf_dir DoNotStarveTogether -cluster Cluster_1 -shard Master<br></code></pre></td></tr></table></figure><p>代码输入完毕，按组合键<code>CTRL</code> + <code>X</code>退出，然后再按<code>Y</code>保存编辑</p><p>然后，我们能再创建<code>caves.sh</code>，逐行输入以下代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-built_in">cd</span> ~/dst/bin<br>nano caves.sh<br>./dontstarve_dedicated_server_nullrenderer -persistent_storage_root ~/klei -conf_dir DoNotStarveTogether -cluster Cluster_1 -shard Caves<br></code></pre></td></tr></table></figure><p>代码输入完毕，按组合键<code>CTRL</code> + <code>X</code>退出，然后再按<code>Y</code>保存编辑</p><h2 id="运行和停止两个服务器以创建存档文件Master（地面）和Caves（洞穴）"><a href="#运行和停止两个服务器以创建存档文件Master（地面）和Caves（洞穴）" class="headerlink" title="运行和停止两个服务器以创建存档文件Master（地面）和Caves（洞穴）"></a>运行和停止两个服务器<br/>以创建存档文件Master（地面）和Caves（洞穴）</h2><h4 id="地面的存档"><a href="#地面的存档" class="headerlink" title="地面的存档"></a>地面的存档</h4><p>请逐行执行以下代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-built_in">cd</span> ~/dst/bin<br><span class="hljs-built_in">chmod</span> +x master.sh<br>./master.sh<br></code></pre></td></tr></table></figure><p>当你在屏幕上看到<code>Your Server Will Not Start</code>字眼时，按组合键<code>CTRL</code> + <code>C</code>退出</p><h4 id="洞穴的存档"><a href="#洞穴的存档" class="headerlink" title="洞穴的存档"></a>洞穴的存档</h4><p>请逐行执行以下代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-built_in">cd</span> ~/dst/bin<br><span class="hljs-built_in">chmod</span> +x caves.sh<br>./caves.sh<br></code></pre></td></tr></table></figure><p>当你在屏幕上看到<code>Your Server Will Not Start</code>字眼时，按组合键<code>CTRL</code> + <code>C</code>退出</p><h2 id="为服务器创建cluster-token-txt"><a href="#为服务器创建cluster-token-txt" class="headerlink" title="为服务器创建cluster_token.txt"></a>为服务器创建cluster_token.txt</h2><p>在你Windows PC上打开饥荒联机版游戏 -&gt; 点击<code>开始游戏</code> -&gt; 点击<code>账户信息</code> -&gt; 点击最上面一排的<code>游戏</code> </p><p>-&gt; 点击<code>Don&#39;t Starve Together Servers</code> -&gt; 拉到最下面，随便输一个名字，点击<code>添加新服务器</code></p><p>即可获取一串以<code>pds-g</code>开头的字符串，复制</p><p>然后逐行输入一下代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-built_in">cd</span> ~/klei/DoNotStarveTogether/Cluster_1/<br>nano cluster_token.txt<br></code></pre></td></tr></table></figure><p>把刚刚复制的字符串粘贴进去，按组合键<code>CTRL</code> + <code>X</code>退出，然后再按<code>Y</code>保存编辑</p><h2 id="为两个服务器创建leveldataoverride-lua"><a href="#为两个服务器创建leveldataoverride-lua" class="headerlink" title="为两个服务器创建leveldataoverride.lua"></a>为两个服务器创建leveldataoverride.lua</h2><p>leveldataoverride.lua代表生成世界的设置，你可以调整季节、怪物或生物群系以及更多</p><h3 id="获取leveldataoverride-lua文件配置"><a href="#获取leveldataoverride-lua文件配置" class="headerlink" title="获取leveldataoverride.lua文件配置"></a>获取leveldataoverride.lua文件配置</h3><ol><li>打开Windows PC饥荒联机版游戏</li><li>按照您的喜好在第一个存档位置创建您的世界（需添加洞穴）</li><li>创建成功世界后退出游戏</li><li>打开您电脑中的该路径<code>C:\Users\XXX\Documents\Klei\DoNotStarveTogether</code><blockquote><p><code>XXX</code>为您电脑的用户名</p></blockquote></li><li>打开该路径下的名字为数字的文件夹</li><li>打开<code>Cluster_1</code>，里面会有<code>Master</code>和<code>Caves</code>文件夹，这两个文件夹里分别有一个<code>leveldataoverride.lua</code>文件</li></ol><h3 id="创建Linux上的leveldataoverride-lua"><a href="#创建Linux上的leveldataoverride-lua" class="headerlink" title="创建Linux上的leveldataoverride.lua"></a>创建Linux上的leveldataoverride.lua</h3><h4 id="地面的leveldataoverride-lua"><a href="#地面的leveldataoverride-lua" class="headerlink" title="地面的leveldataoverride.lua"></a>地面的leveldataoverride.lua</h4><p>请逐行执行以下代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-built_in">cd</span> ~/klei/DoNotStarveTogether/Cluster_1/Master/<br>nano leveldataoverride.lua<br></code></pre></td></tr></table></figure><p>把刚刚上一步获取的<code>Master</code>的<code>leveldataoverride.lua</code>里的内容复制粘贴进来</p><p>按组合键<code>CTRL</code> + <code>X</code>退出，然后再按<code>Y</code>保存编辑</p><h4 id="洞穴的leveldataoverride-lua"><a href="#洞穴的leveldataoverride-lua" class="headerlink" title="洞穴的leveldataoverride.lua"></a>洞穴的leveldataoverride.lua</h4><p>请逐行执行以下代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-built_in">cd</span> ~/klei/DoNotStarveTogether/Cluster_1/Caves/<br>nano leveldataoverride.lua<br></code></pre></td></tr></table></figure><p>把刚刚获取的<code>Caves</code>的<code>leveldataoverride.lua</code>里的内容复制粘贴进来</p><p>按组合键<code>CTRL</code> + <code>X</code>退出，然后再按<code>Y</code>保存编辑</p><h2 id="创建并配置cluster-ini"><a href="#创建并配置cluster-ini" class="headerlink" title="创建并配置cluster.ini"></a>创建并配置cluster.ini</h2><p>执行代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">nano ~/klei/DoNotStarveTogether/Cluster_1/cluster.ini<br></code></pre></td></tr></table></figure><p>将下面代码根据解释自定义后粘贴进去，并按组合键<code>CTRL</code> + <code>X</code>退出，然后再按<code>Y</code>保存编辑</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs INI"><span class="hljs-section">[GAMEPLAY]</span><br><span class="hljs-attr">game_mode</span> = endless<br><span class="hljs-attr">max_players</span> = <span class="hljs-number">8</span><br><span class="hljs-attr">pvp</span> = <span class="hljs-literal">false</span><br><span class="hljs-attr">pause_when_empty</span> = <span class="hljs-literal">true</span><br><br><br><span class="hljs-section">[NETWORK]</span><br><span class="hljs-attr">lan_only_cluster</span> = <span class="hljs-literal">false</span><br><span class="hljs-attr">cluster_intention</span> = cooperative<br><span class="hljs-attr">cluster_password</span> = <span class="hljs-number">123456</span><br><span class="hljs-attr">cluster_name</span> = 服务器测试<br><span class="hljs-attr">cluster_description</span> = 一起嗨起来<br><span class="hljs-attr">offline_cluster</span> = <span class="hljs-literal">false</span><br><span class="hljs-attr">cluster_language</span> = zh<br><br><span class="hljs-section">[STEAM]</span><br><span class="hljs-attr">steam_group_id</span> = <span class="hljs-number">35243410</span><br><span class="hljs-attr">steam_group_admins</span> = <span class="hljs-literal">false</span><br><span class="hljs-attr">steam_group_only</span> = <span class="hljs-literal">false</span><br><br><br><span class="hljs-section">[MISC]</span><br><span class="hljs-attr">max_snapshots</span> = <span class="hljs-number">20</span><br><span class="hljs-attr">console_enabled</span> = <span class="hljs-literal">true</span><br><br><br><span class="hljs-section">[SHARD]</span><br><span class="hljs-attr">shard_enabled</span> = <span class="hljs-literal">true</span><br><span class="hljs-attr">bind_ip</span>=<span class="hljs-number">0.0</span>.<span class="hljs-number">0.0</span><br><span class="hljs-attr">master_ip</span> = <span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span><br><span class="hljs-attr">master_port</span> = <span class="hljs-number">10888</span><br><span class="hljs-attr">cluster_key</span> = defaultPass<br></code></pre></td></tr></table></figure><blockquote><p>注：<br>game_mode 游戏模式，选项为<code>survival</code> <code>endless</code> <code>wilderness</code>，分别对应<code>生存</code> <code>无尽</code> <code>荒野</code>模式<br>max_players 最大人数<br>pvp 开启PVP模式，选项为<code>true</code> <code>false</code><br>cluster_intention 游戏风格，选项为<code>cooperative</code> <code>competitive</code> <code>social</code> <code>madness</code><br>cluster_password 服务器密码<br>cluster_name 服务器名<br>cluster_description 服务器介绍<br>steam_group_id steam群组的id，如果不添加群组请留空<br>steam_group_admins 群组的管理也变成服务器的管理员，选项为<code>true</code> <code>false</code><br>steam_group_only 只有群组成员才能加入，选项为<code>true</code> <code>false</code><br>max_snapshots 最大存档天数，游戏默认只保存5天的存档</p></blockquote><h2 id="为两个服务器创建server-ini"><a href="#为两个服务器创建server-ini" class="headerlink" title="为两个服务器创建server.ini"></a>为两个服务器创建server.ini</h2><h4 id="地面的server-ini"><a href="#地面的server-ini" class="headerlink" title="地面的server.ini"></a>地面的server.ini</h4><p>执行代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">nano ~/klei/DoNotStarveTogether/Cluster_1/Master/server.ini<br></code></pre></td></tr></table></figure><p>将下面代码粘贴进去，并按组合键<code>CTRL</code> + <code>X</code>退出，然后再按<code>Y</code>保存编辑</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs INI"><span class="hljs-section">[NETWORK]</span><br><span class="hljs-attr">server_port</span> = <span class="hljs-number">10999</span><br><br><br><span class="hljs-section">[SHARD]</span><br><span class="hljs-attr">is_master</span> = <span class="hljs-literal">true</span><br><br><br><span class="hljs-section">[ACCOUNT]</span><br><span class="hljs-attr">encode_user_path</span> = <span class="hljs-literal">true</span><br><br><br><span class="hljs-section">[STEAM]</span><br><span class="hljs-attr">master_server_port</span> = <span class="hljs-number">27018</span><br><span class="hljs-attr">authentication_port</span> = <span class="hljs-number">8768</span><br></code></pre></td></tr></table></figure><h4 id="洞穴的server-ini"><a href="#洞穴的server-ini" class="headerlink" title="洞穴的server.ini"></a>洞穴的server.ini</h4><p>执行代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">nano ~/klei/DoNotStarveTogether/Cluster_1/Caves/server.ini<br></code></pre></td></tr></table></figure><p>将下面代码粘贴进去，并按组合键<code>CTRL</code> + <code>X</code>退出，然后再按<code>Y</code>保存编辑</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs INI"><span class="hljs-section">[NETWORK]</span><br><span class="hljs-attr">server_port</span> = <span class="hljs-number">11000</span><br><br><br><span class="hljs-section">[SHARD]</span><br><span class="hljs-attr">is_master</span> = <span class="hljs-literal">false</span><br><span class="hljs-attr">name</span> = Caves<br><span class="hljs-attr">id</span> = <span class="hljs-number">11</span><br><br><br><span class="hljs-section">[ACCOUNT]</span><br><span class="hljs-attr">encode_user_path</span> = <span class="hljs-literal">true</span><br><br><br><span class="hljs-section">[STEAM]</span><br><span class="hljs-attr">master_server_port</span> = <span class="hljs-number">27019</span><br><span class="hljs-attr">authentication_port</span> = <span class="hljs-number">8769</span><br></code></pre></td></tr></table></figure><h2 id="为两个服务器添加mod"><a href="#为两个服务器添加mod" class="headerlink" title="为两个服务器添加mod"></a>为两个服务器添加mod</h2><p>还记得上文的为服务器创建<code>leveldataoverride.lua</code>的方法吧？</p><p>为服务器添加mod的方法类似</p><h3 id="获取modoverrides-lua文件配置"><a href="#获取modoverrides-lua文件配置" class="headerlink" title="获取modoverrides.lua文件配置"></a>获取modoverrides.lua文件配置</h3><ol><li>打开Windows PC饥荒联机版游戏</li><li>按照您的喜好在第一个存档位置创建您的世界（需添加洞穴），这是需添加mod，提前在创意工坊订阅好</li><li>创建成功世界后退出游戏</li><li>打开您电脑中的该路径<code>C:\Users\XXX\Documents\Klei\DoNotStarveTogether</code><blockquote><p><code>XXX</code>为您电脑的用户名</p></blockquote></li><li>打开该路径下的名字为数字的文件夹</li><li>打开<code>Cluster_1</code>，里面会有<code>Master</code>和<code>Caves</code>文件夹，这两个文件夹里分别有一个<code>modoverrides.lua</code>文件</li></ol><h3 id="创建Linux上的modoverrides-lua"><a href="#创建Linux上的modoverrides-lua" class="headerlink" title="创建Linux上的modoverrides.lua"></a>创建Linux上的modoverrides.lua</h3><h4 id="地面的modoverrides-lua"><a href="#地面的modoverrides-lua" class="headerlink" title="地面的modoverrides.lua"></a>地面的modoverrides.lua</h4><p>请逐行执行以下代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-built_in">cd</span> ~/klei/DoNotStarveTogether/Cluster_1/Master/<br>nano modoverrides.lua<br></code></pre></td></tr></table></figure><p>把刚刚上一步获取的<code>Master</code>的<code>modoverrides.lua</code>里的内容复制粘贴进来</p><p>按组合键<code>CTRL</code> + <code>X</code>退出，然后再按<code>Y</code>保存编辑</p><h4 id="洞穴的modoverrides-lua"><a href="#洞穴的modoverrides-lua" class="headerlink" title="洞穴的modoverrides.lua"></a>洞穴的modoverrides.lua</h4><p>请逐行执行以下代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-built_in">cd</span> ~/klei/DoNotStarveTogether/Cluster_1/Caves/<br>nano modoverrides.lua<br></code></pre></td></tr></table></figure><p>把刚刚获取的<code>Caves</code>的<code>modoverrides.lua</code>里的内容复制粘贴进来</p><p>按组合键<code>CTRL</code> + <code>X</code>退出，然后再按<code>Y</code>保存编辑</p><h3 id="修改dedicated-server-mods-setup-lua以让服务器下载相应mod"><a href="#修改dedicated-server-mods-setup-lua以让服务器下载相应mod" class="headerlink" title="修改dedicated_server_mods_setup.lua以让服务器下载相应mod"></a>修改dedicated_server_mods_setup.lua以让服务器下载相应mod</h3><p>输入代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">nano ~/dst/mods/dedicated_server_mods_setup.lua<br></code></pre></td></tr></table></figure><p>在里面另起一行，输入你要添加的mod，格式如下：</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs Lua">ServerModSetup(<span class="hljs-string">&quot;375850593&quot;</span>)<br>ServerModSetup(<span class="hljs-string">&quot;1438233888&quot;</span>)<br>ServerModSetup(<span class="hljs-string">&quot;850494968&quot;</span>)<br>ServerModSetup(<span class="hljs-string">&quot;666155465&quot;</span>)<br>ServerModSetup(<span class="hljs-string">&quot;1185229307&quot;</span>)<br>ServerModSetup(<span class="hljs-string">&quot;1595631294&quot;</span>)<br>ServerModSetup(<span class="hljs-string">&quot;462434129&quot;</span>)<br></code></pre></td></tr></table></figure><p>每个mod一行，双引号中间的数字为对应mod的ID</p><p>获取mod的ID的方法：</p><h4 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h4><p>打开之前获取的<code>modoverrides.lua</code>，里面的格式为</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Lua">[<span class="hljs-string">&quot;workshop-375850593&quot;</span>]=&#123; configuration_options=&#123;  &#125;, enabled=<span class="hljs-literal">true</span> &#125;,<br></code></pre></td></tr></table></figure><p>其中workshop后面的数字即为mod的ID</p><h4 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h4><p>打mod的创意工坊页面，如<code>https://steamcommunity.com/sharedfiles/filedetails/?id=501385076</code></p><p>链接中<code>id=</code>后面的就是mod的ID</p><h2 id="安装screen"><a href="#安装screen" class="headerlink" title="安装screen"></a>安装screen</h2><blockquote><p>到这一步，您的饥荒服务器配置已经完成70%了<br/><br>您会发现，运行master.sh或caves.sh后，一旦关闭终端，对应的世界也会关闭<br/><br>这个时候，就需要screen了</p></blockquote><p>安装screen</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-built_in">sudo</span> apt-get install screen<br></code></pre></td></tr></table></figure><p>screen命令详解请见另一篇文章：<a href="https://jupitersh.github.io/screen-guide">Linux Screen命令详解</a></p><h2 id="为两个服务器制作脚本"><a href="#为两个服务器制作脚本" class="headerlink" title="为两个服务器制作脚本"></a>为两个服务器制作脚本</h2><h3 id="启动脚本"><a href="#启动脚本" class="headerlink" title="启动脚本"></a>启动脚本</h3><h4 id="地面世界的启动脚本"><a href="#地面世界的启动脚本" class="headerlink" title="地面世界的启动脚本"></a>地面世界的启动脚本</h4><p>执行代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">nano ~/dst/bin/startmaster.sh<br></code></pre></td></tr></table></figure><p>将下面代码粘贴进去，并按组合键<code>CTRL</code> + <code>X</code>退出，然后再按<code>Y</code>保存编辑</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">screen -dmS m ~/dst/bin/master.sh<br></code></pre></td></tr></table></figure><p>再执行代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-built_in">chmod</span> +x startmaster.sh<br></code></pre></td></tr></table></figure><h4 id="洞穴的启动脚本"><a href="#洞穴的启动脚本" class="headerlink" title="洞穴的启动脚本"></a>洞穴的启动脚本</h4><p>执行代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">nano ~/dst/bin/startcaves.sh<br></code></pre></td></tr></table></figure><p>将下面代码粘贴进去，并按组合键<code>CTRL</code> + <code>X</code>退出，然后再按<code>Y</code>保存编辑</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">screen -dmS c ~/dst/bin/caves.sh<br></code></pre></td></tr></table></figure><p>再执行代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-built_in">chmod</span> +x startcaves.sh<br></code></pre></td></tr></table></figure><h3 id="一键启动两个服务器的脚本"><a href="#一键启动两个服务器的脚本" class="headerlink" title="一键启动两个服务器的脚本"></a>一键启动两个服务器的脚本</h3><p>执行代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">nano ~/launch.sh<br></code></pre></td></tr></table></figure><p>将下面代码粘贴进去，并按组合键<code>CTRL</code> + <code>X</code>退出，然后再按<code>Y</code>保存编辑</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-meta">#!/bin/sh</span><br><span class="hljs-built_in">cd</span> ~/dst/bin<br>sh startmaster.sh<br>sh startcaves.sh<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;!!!THE SERVER IS STARTED!!!&#x27;</span><br></code></pre></td></tr></table></figure><p>再执行代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-built_in">chmod</span> +x launch.sh<br></code></pre></td></tr></table></figure><h3 id="一键重启两个服务器的脚本"><a href="#一键重启两个服务器的脚本" class="headerlink" title="一键重启两个服务器的脚本"></a>一键重启两个服务器的脚本</h3><p>执行代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">nano ~/restart.sh<br></code></pre></td></tr></table></figure><p>将下面代码粘贴进去，并按组合键<code>CTRL</code> + <code>X</code>退出，然后再按<code>Y</code>保存编辑</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-meta">#!/bin/sh</span><br>screen -dr m -X -S quit<br>screen -dr c -X -S quit<br><span class="hljs-built_in">sleep</span> 10<br><span class="hljs-built_in">cd</span> ~/dst/bin<br>sh startmaster.sh<br>sh startcaves.sh<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;!!!THE SERVER IS RESTARTED!!!&#x27;</span><br></code></pre></td></tr></table></figure><p>再执行代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-built_in">chmod</span> +x restart.sh<br></code></pre></td></tr></table></figure><h3 id="一键关闭两个服务器的脚本"><a href="#一键关闭两个服务器的脚本" class="headerlink" title="一键关闭两个服务器的脚本"></a>一键关闭两个服务器的脚本</h3><p>执行代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">nano ~/shutdown.sh<br></code></pre></td></tr></table></figure><p>将下面代码粘贴进去，并按组合键<code>CTRL</code> + <code>X</code>退出，然后再按<code>Y</code>保存编辑</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-meta">#!/bin/sh</span><br>screen -dr m -X -S quit<br>screen -dr c -X -S quit<br><span class="hljs-built_in">sleep</span> 10<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;!!!THE SERVER IS SHUTED DOWN!!!&#x27;</span><br></code></pre></td></tr></table></figure><p>再执行代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-built_in">chmod</span> +x shutdown.sh<br></code></pre></td></tr></table></figure><h3 id="更新服务器的脚本"><a href="#更新服务器的脚本" class="headerlink" title="更新服务器的脚本"></a>更新服务器的脚本</h3><p>执行代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">nano ~/update.sh<br></code></pre></td></tr></table></figure><p>将下面代码粘贴进去，并按组合键<code>CTRL</code> + <code>X</code>退出，然后再按<code>Y</code>保存编辑</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-meta">#!/bin/sh</span><br>screen -dr m -p 0 -X stuff <span class="hljs-string">&quot;\nc_save()\n&quot;</span><br><span class="hljs-built_in">sleep</span> 10<br>screen -dr m -X -S quit<br>screen -dr c -X -S quit<br><span class="hljs-built_in">sleep</span> 10<br><span class="hljs-built_in">mv</span> ~/dst/mods/dedicated_server_mods_setup.lua ~/dst/mods/dedicated_server_mods_setup.lua.bak<br>~/steamcmd/steamcmd.sh +login anonymous +force_install_dir ~/dst +app_update 343050 validate +quit<br><span class="hljs-built_in">mv</span> ~/dst/mods/dedicated_server_mods_setup.lua.bak ~/dst/mods/dedicated_server_mods_setup.lua<br><span class="hljs-built_in">sleep</span> 10<br><span class="hljs-built_in">cd</span> ~/dst/bin<br>sh startmaster.sh<br>sh startcaves.sh<br></code></pre></td></tr></table></figure><p>再执行代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-built_in">chmod</span> +x update.sh<br></code></pre></td></tr></table></figure><blockquote><p>注：该脚本执行后会先关闭服务器，然后更新服务器，更新完毕后自动重启游戏</p></blockquote><h2 id="测试两个服务器"><a href="#测试两个服务器" class="headerlink" title="测试两个服务器"></a>测试两个服务器</h2><p>执行代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">sh ~/launch.sh<br></code></pre></td></tr></table></figure><p>服务器就在后台启动了</p><p>查看服务器日志，看看服务器是否启动成功</p><p>输入代码</p><p>地面：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-built_in">tail</span> -fn 30 ~/klei/DoNotStarveTogether/Cluster_1/Master/server_log.txt<br></code></pre></td></tr></table></figure><p>洞穴：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-built_in">tail</span> -fn ~/klei/DoNotStarveTogether/Cluster_1/Caves/server_log.txt<br></code></pre></td></tr></table></figure><blockquote><p>退出查看日志是按组合键<code>CTRL</code> + <code>C</code></p></blockquote><p>如果看到<code>Sim paused</code>，说明服务器开启成功，打开游戏看看能不能连接上吧</p><p>至此服务器就创建完毕了</p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="添加管理员"><a href="#添加管理员" class="headerlink" title="添加管理员"></a>添加管理员</h3><p>如果您用的是自己的cluster_token创建服务器，那么默认您就是游戏管理员</p><p>如果您想添加其他的玩家为管理员，那么输入代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">nano ~/klei/DoNotStarveTogether/Cluster_1/adminlist.txt<br></code></pre></td></tr></table></figure><p>在里面添加对应玩家的ID，一行一个玩家</p><p>重启服务器后生效</p><h3 id="添加黑名单"><a href="#添加黑名单" class="headerlink" title="添加黑名单"></a>添加黑名单</h3><p>同理，输入代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">nano ~/klei/DoNotStarveTogether/Cluster_1/blocklist.txt<br></code></pre></td></tr></table></figure><p>在里面添加对应玩家的ID，一行一个玩家</p><p>重启服务器后生效</p><blockquote><p>玩家ID可在服务器日志中查看，格式为<code>KU_</code>开头</p></blockquote><h2 id="服务器创建模板"><a href="#服务器创建模板" class="headerlink" title="服务器创建模板"></a>服务器创建模板</h2><p><a href="https://gitee.com/jupitersh/dst-template">我的码云</a></p><p>获取方法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">git <span class="hljs-built_in">clone</span> https://gitee.com/jupitersh/dst.git<br></code></pre></td></tr></table></figure><p>如未安装<code>git</code>，请先安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-built_in">sudo</span> apt-get install git<br></code></pre></td></tr></table></figure><p><strong>在服务器创建的过程中如果遇到问题，欢迎在下方留言</strong></p>]]></content>
    
    
    <categories>
      
      <category>游戏</category>
      
      <category>饥荒</category>
      
    </categories>
    
    
    <tags>
      
      <tag>饥荒</tag>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>饥荒『荒野求生』服务器说明</title>
    <link href="/dst/"/>
    <url>/dst/</url>
    
    <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><font size=5><strong>欢迎各位加入荒野求生服</strong></font></p><span id="more"></span><table><thead><tr><th><strong>直达</strong></th><th><strong>直达</strong></th><th><strong>直达</strong></th></tr></thead><tbody><tr><td><a href="/rules/"><em><strong>服务器规定</strong></em></a></td><td><a href="/chest/"><em><strong>箱子记录</strong></em></a></td><td><a href="/2021/5/repoguide/"><em><strong>仓库使用教程</strong></em></a></td></tr><tr><td><a href="/repo/"><em><strong>面板仓库物品统计</strong></em></a></td><td><a href="/shoprecord/"><em><strong>服务器交易记录</strong></em></a></td><td></td></tr></tbody></table><p>我们的服务器名：荒野求生多层档</p><p>我们的QQ群：<strong>762110584</strong> <strong><code>荒野求生饥荒交流群</code></strong></p><p>服务器问题可在群内反馈 比如有人<strong>烧家</strong>、<strong>服务器崩了</strong>什么的</p><p><strong>荒野求生多层档</strong>养老，玩家存档永不重置</p><p>多层世界设定为玩家天数小于<code>100天</code>只能在<strong>萌新天堂</strong>（地面）、<strong>萌新地洞</strong>、<strong>冒险世界</strong>、及<strong>角斗场</strong>之间跳跃，超过<code>100天</code>后可在所有世界之间跳跃</p><p>推荐我们服务器的<strong>直连模组</strong>，创意工坊搜索：<a href="https://steamcommunity.com/sharedfiles/filedetails/?id=496330801"><strong>荒野求生直连</strong></a></p><p><strong>模组效果如图：</strong></p><p><img src="https://steamuserimages-a.akamaihd.net/ugc/787499023186318172/38054047F8FAB55F490F43AFD79DC8C57DD1A17D/?imw=637&imh=358&ima=fit&impolicy=Letterbox&imcolor=%23000000&letterbox=true"></p><h2 id="服务器模组说明"><a href="#服务器模组说明" class="headerlink" title="服务器模组说明"></a>服务器模组说明</h2><p>服务器做了如下修改，请仔细阅读，具体如下：</p><ul><li>禁止投票回档和重置世界的功能</li><li>只有挂机天堂才能换人</li><li>只有迷你家园和角斗场不能读鸟书或者鱼书，其他世界只能在凌晨01:00至07:59之间才能无限读书，其他世界读书会有20s的冷却时间</li><li>独一无二的物品不能放入背包</li><li>小偷包锁<ul><li>小偷包背在身上时，私聊输入 <code>+lock</code> 可以锁定小偷包，其他玩家无法背起上锁的小偷包，私聊输入 <code>+unlock</code> 可以解锁小偷包</li><li>小偷包背在身上时，私聊输入 <code>+share KU_XXXXXXXX</code> （需要将 <code>KU_XXXXXXXX</code> 替换成你要分享的玩家的克雷ID，且该玩家要和你在同一个世界），可以分享小偷包，你分享的玩家可以背起该小偷包，私聊输入 <code>+unshare KU_XXXXXXXX</code> 可取消分享</li><li>小偷包背在身上时，私聊输入 <code>+showshares</code> 可以查看分享给了哪些玩家</li><li>空的小偷包即使上锁别人也能背起来</li><li><code>Alt</code> + <code>鼠标左键</code> 点击地上的小偷包可以查看其主人</li></ul></li><li><code>Alt</code> + <code>鼠标左键</code> 点击包裹或礼物可以查看里面的内容</li><li>物品破坏都会有宣告和后台记录，均可查</li><li>每个容器（箱子、龙鳞箱子、冰箱、烟盒、蘑菇灯等）内物品变化后会记录，详见 <a href="/2020/03/chesthistory/">箱子历史记录</a></li><li>服务器自动清理：角斗场外都有清理功能，会清理地面上不重要的物品，详见下面的<a href="/dst/#%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%B8%85%E7%90%86">说明</a></li><li><strong>萌新天堂</strong><ul><li>死亡复活无生命值上限下降的惩罚，</li><li>狗最多为每人3只</li></ul></li><li>驯牛系统，详见<a href="/dst/#%E9%A9%AF%E7%89%9B%E7%B3%BB%E7%BB%9F%E8%A7%86%E9%A2%91%E4%BB%8B%E7%BB%8D">视频</a><ul><li>双击牛两下可将牛回收为牛角，吹牛角后再次召唤牛</li></ul></li><li>骑牛下线：如果玩家下线时骑着牛，并且牛的驯服度&gt;30%，牛会自动变成牛角，放到玩家的物品栏中</li><li>眼球塔之间不会再互相攻击</li><li>回收船，详见<a href="/dst/#%E5%9B%9E%E6%94%B6%E8%88%B9%E6%BC%94%E7%A4%BA">视频</a><ul><li>玩家身上只能最多带两个船</li><li>在船上放船舵后右击即可将船放入背包</li><li>将船放到物品栏的第一个然后私聊输入 <code>+rename 船名</code>即可重命名你的船</li></ul></li><li>除了冒险世界和角斗场，其他世界亮茄会直接死</li><li>灯泡和启迪碎片在第一次被捡起后会上锁，以后只有第一次捡起的玩家才能捡起</li><li>在地下如果远古的钥匙因为bug消失了，可以私聊输入 <code>+key</code> 获取</li><li>初始物品：以免冬夏进来的小伙伴惨死</li><li><strong>迷你家园</strong><ul><li>每人有一个免费的迷你家园</li><li>进入迷你家园世界后，通过影灯可以打开或关闭你的个人家园</li><li>每人的家园最多只能有1000个实体(实体为直接在地面上可以互动的物体，容器里的物品不计入实体)，超过1000个实体会随机删除至1000个</li><li>具体见下面<a href="/dst/#%E8%BF%B7%E4%BD%A0%E5%AE%B6%E5%9B%AD%E6%BC%94%E7%A4%BA">介绍视频</a></li></ul></li><li><strong>角斗场</strong> 有<a href="/dst/#%E8%A7%92%E6%96%97%E5%9C%BA%E6%8C%91%E6%88%98%E8%B5%9B%E8%AF%B4%E6%98%8E">挑战赛</a>（可以获得<strong>金币奖励</strong>，每天五次）及<a href="/dst/#%E8%A7%92%E6%96%97%E5%9C%BAPVP%E8%AF%B4%E6%98%8E">PVP模式</a><ul><li>入场券的数量通过游戏公告（右下角的按钮）查看</li><li>龙鳞箱子可上锁：站在箱子旁在聊天窗口输入 <code>+lockc</code> 可锁定箱子（只有你能打开，有效期 120min，每次输入有效期自动延迟到 120min），输入 <code>+unlockc</code> 可解锁箱子，按 <code>Alt</code> + <code>鼠标左键点击箱子</code> 可以显示箱子主人</li></ul></li><li>玩家交易系统，详情请看游戏内说明（游戏商店面板的提示按钮）</li><li>玩家私人仓库，详见<a href="/dst/#%E4%BB%93%E5%BA%93%E8%AF%B4%E6%98%8E">仓库说明</a></li><li>怪物击杀公告、猎犬来袭提示和蚁狮发怒提示功能</li><li>无草蜥</li><li>地洞入口无蝙蝠</li><li>芦苇不可燃</li><li>自动堆叠</li><li>玩家砸建筑和烧东西提示（防熊）</li><li>杀普通的无眼鹿有50%的概率掉落鹿角</li><li>扫把可以换花及盆栽的样式</li><li>木牌用锤子砸了之后可以变成打人的木牌</li></ul><h2 id="迷你家园演示"><a href="#迷你家园演示" class="headerlink" title="迷你家园演示"></a>迷你家园演示</h2><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;">    <iframe src="//player.bilibili.com/player.html?aid=373615978&bvid=BV1do4y1d7xU&cid=277940248&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;">    </iframe></div><h2 id="驯牛系统视频介绍"><a href="#驯牛系统视频介绍" class="headerlink" title="驯牛系统视频介绍"></a>驯牛系统视频介绍</h2><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;">    <iframe src="//player.bilibili.com/player.html?aid=243148149&bvid=BV1ge411W7np&cid=196465353&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;">    </iframe></div><h2 id="回收船演示"><a href="#回收船演示" class="headerlink" title="回收船演示"></a>回收船演示</h2><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;">    <iframe src="//player.bilibili.com/player.html?aid=586225122&bvid=BV1jz4y1S7Xy&cid=281674440&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;">    </iframe></div><h2 id="角斗场挑战赛说明"><a href="#角斗场挑战赛说明" class="headerlink" title="角斗场挑战赛说明"></a>角斗场挑战赛说明</h2><p>分为单人模式和双人模式，单人模式怪物血量是正常的一半，伤害是正常值的1.5倍，双人模式怪物的血量是单人的两倍，怪物的攻击是单人的1.5倍</p><p>每过一关就会获得对应的金币奖励，一共16关，奖励的金币第10关1金币，第16关2金币，其余关卡都是0.5金币</p><p>双人模式当有一个玩家死亡，下一关会自动回落到单人模式，并且死亡的玩家不会获得奖励</p><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;">    <iframe src="//player.bilibili.com/player.html?aid=797577618&bvid=BV12y4y1r736&cid=250225495&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;">    </iframe></div><h2 id="仓库说明"><a href="#仓库说明" class="headerlink" title="仓库说明"></a>仓库说明</h2><p><strong>私人仓库</strong>：</p><p>开启方法：游戏内右小角点击仓库按钮，在弹出的面板中点击充值按钮即可消耗300游戏内的金币购买30天(现实)的仓库使用时间，如果金币不够，可以联系服主用现金购买，现金购买的价格为30元&#x2F;半年，或者50元&#x2F;年</p><p>仓库到期后仓库内的物品不会删除，只是冻结，无法取出及放入，续期后可继续使用</p><p>只有靠近地洞才能打开仓库面板，要将东西放入仓库，请使用魔法一本</p><h2 id="服务器清理"><a href="#服务器清理" class="headerlink" title="服务器清理"></a>服务器清理</h2><h3 id="清理机制"><a href="#清理机制" class="headerlink" title="清理机制"></a>清理机制</h3><p>每10天检查一次地面的物品。地面的物品第一次被检查，会添加标记；被添加标记的物品在第二次检查时会被清理。这意味着地面物品至少10天以上才会被清理。</p><p>只会清理地面且不包含在<strong>白名单</strong>的物品，另外散落在海上的物品都会被清理</p><p>玩家身上及箱子里的，白名单里的，或者茶几附近（要很靠近）的物品不会被清理</p><h3 id="白名单"><a href="#白名单" class="headerlink" title="白名单"></a>白名单</h3><ul><li>小动物：兔子、鼹鼠、萤火虫之类</li><li>唯一的物件：远古钥匙、切斯特眼骨、天体灵球之类</li><li>雕像</li><li>打包好的包裹和礼物</li><li>鹿角</li><li>陷阱、狗牙陷阱、海星</li><li>书</li><li>月眼</li><li>鞍</li><li>芝士蛋糕</li><li>南瓜灯</li><li>海带</li><li>浮木</li><li>排箫</li><li>触手棒和触手皮</li><li>影刀</li><li>影甲</li><li>骨盔</li><li>骨甲</li><li>暗影香炉</li><li>化石碎片</li><li>暗影心脏</li><li>生命护符</li><li>救赎之心</li><li>暖石</li><li>唤星法杖、喚月法杖</li><li>步行手杖、瞬移手杖</li><li>格罗姆燃料</li><li>食人花种子</li><li>蜂王帽</li><li>……</li></ul><p>另外：全新触手棒、影刀和影甲在白名单内，用过的则会被清理</p><h3 id="船清理"><a href="#船清理" class="headerlink" title="船清理"></a>船清理</h3><p>船如果连续540天（游戏天数，即现实3天）无人踩上去过，就会被清理</p><h2 id="回档、踢人及封禁权限"><a href="#回档、踢人及封禁权限" class="headerlink" title="回档、踢人及封禁权限"></a>回档、踢人及封禁权限</h2><h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><p><strong>聊天窗口</strong>输入如下<em>指令</em> <em><strong>(不是控制台)</strong></em></p><p>📌 <strong>保存并重启</strong> <code>+reset</code></p><p>用于模组修改后软重启</p><p>📌 <strong>杀人</strong> <code>+kill名字</code></p><p>把<code>名字</code>替换为要杀的玩家的名字的一部分，不用全名，只需名字的<strong>关键字</strong>，比如要封禁<code>辣椒小皇纸</code>，输入<code>+kban辣椒</code>或者<code>+kban小皇纸</code>或者<code>+kban皇</code>都可以，但是<strong>可能封掉名字也包含关键字的人</strong></p><p>📌 <strong>踢人</strong> <code>+kick名字</code></p><p>方法同上</p><p>🚫 <strong>注意</strong></p><p>命令不要加<strong>额外空格</strong>或者<strong>其他字符</strong>，否则无法识别</p><p>🚫 <strong>特别强调</strong></p><p>如果发现因发生口角或其他私人矛盾而踢人杀人的，一律<strong>收回</strong>权限，<strong>请勿滥用</strong>权限</p><p><em><strong>欢迎大家一起加入</strong></em></p>]]></content>
    
    
    <categories>
      
      <category>游戏</category>
      
      <category>饥荒</category>
      
    </categories>
    
    
    <tags>
      
      <tag>饥荒</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
